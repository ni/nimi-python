# Tox (http://tox.testrun.org/) is a tool for running tests
# in multiple virtualenvs. This configuration file will run the
# test suite on all supported python versions. To use it, "pip install tox"
# and then run "tox" from this directory.
[tox]
envlist = py{35,36,37,38,py3}-system_tests
skip_missing_interpreters=True
ignore_basepython_conflict=True
skipsdist = true
# We put the .tox directory outside of the workspace so that it isn't wiped with the rest of the repo
toxworkdir = ../.tox

[testenv]
description =
    system_tests: Run system tests (requires driver runtime to be installed)

changedir =
    system_tests: .

# We touch .coverage first to ensure the files exists, then remove it.
commands =
    system_tests: python --version
    system_tests: python -c "import platform; print(platform.architecture())"
    system_tests: cmd -c "cd generated/nitclk/ && python setup.py install --force"
    system_tests: cmd -c "cd generated/nidcpower/ && python setup.py install --force"
    system_tests: python -c "import nidcpower; nidcpower.print_diagnostic_information()"
    system_tests: coverage run --rcfile=tools/coverage_system_tests.rc --source nidcpower -m py.test src/nidcpower/examples --junitxml=generated/junit/junit-nidcpower-{envname}-{env:BITNESS:64}.xml {posargs}
    system_tests: coverage run --rcfile=tools/coverage_system_tests.rc --source nidcpower -m py.test src/nidcpower/system_tests --junitxml=generated/junit/junit-nidcpower-{envname}-{env:BITNESS:64}.xml {posargs}
    system_tests: cmd -c "cd generated/nidigital/ && python setup.py install --force"
    system_tests: coverage run --rcfile=tools/coverage_system_tests.rc --append --source nidigital -m py.test src/nidigital/examples --junitxml=generated/junit/junit-digital-{envname}-{env:BITNESS:64}.xml {posargs}
    system_tests: coverage run --rcfile=tools/coverage_system_tests.rc --append --source nidigital -m py.test src/nidigital/system_tests --junitxml=generated/junit/junit=digital-{envname}-{env:BITNESS:64}.xml {posargs}
    system_tests: cmd -c "cd generated/nidmm/ && python setup.py install --force"
    system_tests: coverage run --rcfile=tools/coverage_system_tests.rc --append --source nidmm -m py.test src/nidmm/examples --junitxml=generated/junit/junit-dmm-{envname}-{env:BITNESS:64}.xml {posargs}
    system_tests: coverage run --rcfile=tools/coverage_system_tests.rc --append --source nidmm -m py.test src/nidmm/system_tests --junitxml=generated/junit/junit-dmm-{envname}-{env:BITNESS:64}.xml {posargs}
    system_tests: cmd -c "cd generated/nifgen/ && python setup.py install --force"
    system_tests: coverage run --rcfile=tools/coverage_system_tests.rc --append --source nifgen -m py.test src/nifgen/examples --junitxml=generated/junit/junit-fgen-{envname}-{env:BITNESS:64}.xml {posargs}
    system_tests: coverage run --rcfile=tools/coverage_system_tests.rc --append --source nifgen -m py.test src/nifgen/system_tests --junitxml=generated/junit/junit-fgen-{envname}-{env:BITNESS:64}.xml {posargs}
    system_tests: cmd -c "cd generated/niscope/ && python setup.py install --force"
    system_tests: coverage run --rcfile=tools/coverage_system_tests.rc --append --source niscope -m py.test src/niscope/examples --junitxml=generated/junit/junit-scope-{envname}-{env:BITNESS:64}.xml {posargs}
    system_tests: coverage run --rcfile=tools/coverage_system_tests.rc --append --source niscope -m py.test src/niscope/system_tests --junitxml=generated/junit/junit-scope-{envname}-{env:BITNESS:64}.xml {posargs}
    system_tests: cmd -c "cd generated/niswitch/ && python setup.py install --force"
    system_tests: coverage run --rcfile=tools/coverage_system_tests.rc --append --source niswitch -m py.test src/niswitch/examples --junitxml=generated/junit/junit-switch-{envname}-{env:BITNESS:64}.xml {posargs}
    system_tests: coverage run --rcfile=tools/coverage_system_tests.rc --append --source niswitch -m py.test src/niswitch/system_tests --junitxml=generated/junit/junit-switch-{envname}-{env:BITNESS:64}.xml {posargs}
    system_tests: cmd -c "cd generated/nimodinst/ && python setup.py install --force"
    system_tests: coverage run --rcfile=tools/coverage_system_tests.rc --append --source nimodinst -m py.test src/nimodinst/examples --junitxml=generated/junit/junit-modinst-{envname}-{env:BITNESS:64}.xml {posargs}
    system_tests: coverage run --rcfile=tools/coverage_system_tests.rc --append --source nimodinst -m py.test src/nimodinst/system_tests --junitxml=generated/junit/junit-modinst-{envname}-{env:BITNESS:64}.xml {posargs}
    system_tests: cmd -c "cd generated/nise/ && python setup.py install --force"
    system_tests: coverage run --rcfile=tools/coverage_system_tests.rc --source nise -m py.test src/nise/examples --junitxml=generated/junit/junit-nise-{envname}-{env:BITNESS:64}.xml {posargs}
    system_tests: coverage run --rcfile=tools/coverage_system_tests.rc --source nise -m py.test src/nise/system_tests --junitxml=generated/junit/junit-nise-{envname}-{env:BITNESS:64}.xml {posargs}
    system_tests: coverage report --rcfile=tools/coverage_system_tests.rc
    system_tests: coverage html --rcfile=tools/coverage_system_tests.rc --directory=generated/htmlcov/system_tests

deps =
    system_tests: pytest==4.6.5;platform_python_implementation=='PyPy'
    system_tests: pytest;platform_python_implementation=='CPython'
    system_tests: coverage
    system_tests: numpy
    system_tests: scipy

[pytest]
addopts = --verbose --doctest-modules --ignore=setup.py
norecursedirs = system_tests examples .* build dist CVS _darcs {arch} *.egg venv
junit_suite_name = nimi-python
python_files = *.py



