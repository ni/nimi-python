# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from . import nidigitalpattern_pb2 as nidigitalpattern__pb2

GRPC_GENERATED_VERSION = '1.67.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in nidigitalpattern_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class NiDigitalStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Init = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/Init',
                request_serializer=nidigitalpattern__pb2.InitRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.InitResponse.FromString,
                _registered_method=True)
        self.InitWithOptions = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/InitWithOptions',
                request_serializer=nidigitalpattern__pb2.InitWithOptionsRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.InitWithOptionsResponse.FromString,
                _registered_method=True)
        self.Close = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/Close',
                request_serializer=nidigitalpattern__pb2.CloseRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.CloseResponse.FromString,
                _registered_method=True)
        self.Reset = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/Reset',
                request_serializer=nidigitalpattern__pb2.ResetRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.ResetResponse.FromString,
                _registered_method=True)
        self.ResetDevice = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/ResetDevice',
                request_serializer=nidigitalpattern__pb2.ResetDeviceRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.ResetDeviceResponse.FromString,
                _registered_method=True)
        self.SelfTest = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/SelfTest',
                request_serializer=nidigitalpattern__pb2.SelfTestRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.SelfTestResponse.FromString,
                _registered_method=True)
        self.GetError = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/GetError',
                request_serializer=nidigitalpattern__pb2.GetErrorRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.GetErrorResponse.FromString,
                _registered_method=True)
        self.ClearError = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/ClearError',
                request_serializer=nidigitalpattern__pb2.ClearErrorRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.ClearErrorResponse.FromString,
                _registered_method=True)
        self.ErrorMessage = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/ErrorMessage',
                request_serializer=nidigitalpattern__pb2.ErrorMessageRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.ErrorMessageResponse.FromString,
                _registered_method=True)
        self.SelfCalibrate = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/SelfCalibrate',
                request_serializer=nidigitalpattern__pb2.SelfCalibrateRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.SelfCalibrateResponse.FromString,
                _registered_method=True)
        self.GetAttributeViInt32 = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/GetAttributeViInt32',
                request_serializer=nidigitalpattern__pb2.GetAttributeViInt32Request.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.GetAttributeViInt32Response.FromString,
                _registered_method=True)
        self.GetAttributeViInt64 = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/GetAttributeViInt64',
                request_serializer=nidigitalpattern__pb2.GetAttributeViInt64Request.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.GetAttributeViInt64Response.FromString,
                _registered_method=True)
        self.GetAttributeViReal64 = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/GetAttributeViReal64',
                request_serializer=nidigitalpattern__pb2.GetAttributeViReal64Request.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.GetAttributeViReal64Response.FromString,
                _registered_method=True)
        self.GetAttributeViString = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/GetAttributeViString',
                request_serializer=nidigitalpattern__pb2.GetAttributeViStringRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.GetAttributeViStringResponse.FromString,
                _registered_method=True)
        self.GetAttributeViSession = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/GetAttributeViSession',
                request_serializer=nidigitalpattern__pb2.GetAttributeViSessionRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.GetAttributeViSessionResponse.FromString,
                _registered_method=True)
        self.GetAttributeViBoolean = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/GetAttributeViBoolean',
                request_serializer=nidigitalpattern__pb2.GetAttributeViBooleanRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.GetAttributeViBooleanResponse.FromString,
                _registered_method=True)
        self.SetAttributeViInt32 = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/SetAttributeViInt32',
                request_serializer=nidigitalpattern__pb2.SetAttributeViInt32Request.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.SetAttributeViInt32Response.FromString,
                _registered_method=True)
        self.SetAttributeViInt64 = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/SetAttributeViInt64',
                request_serializer=nidigitalpattern__pb2.SetAttributeViInt64Request.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.SetAttributeViInt64Response.FromString,
                _registered_method=True)
        self.SetAttributeViReal64 = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/SetAttributeViReal64',
                request_serializer=nidigitalpattern__pb2.SetAttributeViReal64Request.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.SetAttributeViReal64Response.FromString,
                _registered_method=True)
        self.SetAttributeViString = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/SetAttributeViString',
                request_serializer=nidigitalpattern__pb2.SetAttributeViStringRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.SetAttributeViStringResponse.FromString,
                _registered_method=True)
        self.SetAttributeViSession = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/SetAttributeViSession',
                request_serializer=nidigitalpattern__pb2.SetAttributeViSessionRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.SetAttributeViSessionResponse.FromString,
                _registered_method=True)
        self.SetAttributeViBoolean = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/SetAttributeViBoolean',
                request_serializer=nidigitalpattern__pb2.SetAttributeViBooleanRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.SetAttributeViBooleanResponse.FromString,
                _registered_method=True)
        self.ResetAttribute = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/ResetAttribute',
                request_serializer=nidigitalpattern__pb2.ResetAttributeRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.ResetAttributeResponse.FromString,
                _registered_method=True)
        self.LoadPinMap = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/LoadPinMap',
                request_serializer=nidigitalpattern__pb2.LoadPinMapRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.LoadPinMapResponse.FromString,
                _registered_method=True)
        self.EnableSites = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/EnableSites',
                request_serializer=nidigitalpattern__pb2.EnableSitesRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.EnableSitesResponse.FromString,
                _registered_method=True)
        self.DisableSites = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/DisableSites',
                request_serializer=nidigitalpattern__pb2.DisableSitesRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.DisableSitesResponse.FromString,
                _registered_method=True)
        self.IsSiteEnabled = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/IsSiteEnabled',
                request_serializer=nidigitalpattern__pb2.IsSiteEnabledRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.IsSiteEnabledResponse.FromString,
                _registered_method=True)
        self.CreatePinMap = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/CreatePinMap',
                request_serializer=nidigitalpattern__pb2.CreatePinMapRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.CreatePinMapResponse.FromString,
                _registered_method=True)
        self.CreatePinGroup = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/CreatePinGroup',
                request_serializer=nidigitalpattern__pb2.CreatePinGroupRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.CreatePinGroupResponse.FromString,
                _registered_method=True)
        self.CreateChannelMap = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/CreateChannelMap',
                request_serializer=nidigitalpattern__pb2.CreateChannelMapRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.CreateChannelMapResponse.FromString,
                _registered_method=True)
        self.MapPinToChannel = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/MapPinToChannel',
                request_serializer=nidigitalpattern__pb2.MapPinToChannelRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.MapPinToChannelResponse.FromString,
                _registered_method=True)
        self.EndChannelMap = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/EndChannelMap',
                request_serializer=nidigitalpattern__pb2.EndChannelMapRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.EndChannelMapResponse.FromString,
                _registered_method=True)
        self.GetPinName = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/GetPinName',
                request_serializer=nidigitalpattern__pb2.GetPinNameRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.GetPinNameResponse.FromString,
                _registered_method=True)
        self.GetChannelName = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/GetChannelName',
                request_serializer=nidigitalpattern__pb2.GetChannelNameRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.GetChannelNameResponse.FromString,
                _registered_method=True)
        self.SelectFunction = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/SelectFunction',
                request_serializer=nidigitalpattern__pb2.SelectFunctionRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.SelectFunctionResponse.FromString,
                _registered_method=True)
        self.ReadStatic = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/ReadStatic',
                request_serializer=nidigitalpattern__pb2.ReadStaticRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.ReadStaticResponse.FromString,
                _registered_method=True)
        self.WriteStatic = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/WriteStatic',
                request_serializer=nidigitalpattern__pb2.WriteStaticRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.WriteStaticResponse.FromString,
                _registered_method=True)
        self.ClockGeneratorGenerateClock = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/ClockGeneratorGenerateClock',
                request_serializer=nidigitalpattern__pb2.ClockGeneratorGenerateClockRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.ClockGeneratorGenerateClockResponse.FromString,
                _registered_method=True)
        self.ClockGeneratorInitiate = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/ClockGeneratorInitiate',
                request_serializer=nidigitalpattern__pb2.ClockGeneratorInitiateRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.ClockGeneratorInitiateResponse.FromString,
                _registered_method=True)
        self.ClockGeneratorAbort = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/ClockGeneratorAbort',
                request_serializer=nidigitalpattern__pb2.ClockGeneratorAbortRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.ClockGeneratorAbortResponse.FromString,
                _registered_method=True)
        self.LoadSpecifications = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/LoadSpecifications',
                request_serializer=nidigitalpattern__pb2.LoadSpecificationsRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.LoadSpecificationsResponse.FromString,
                _registered_method=True)
        self.UnloadSpecifications = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/UnloadSpecifications',
                request_serializer=nidigitalpattern__pb2.UnloadSpecificationsRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.UnloadSpecificationsResponse.FromString,
                _registered_method=True)
        self.LoadLevels = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/LoadLevels',
                request_serializer=nidigitalpattern__pb2.LoadLevelsRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.LoadLevelsResponse.FromString,
                _registered_method=True)
        self.LoadTiming = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/LoadTiming',
                request_serializer=nidigitalpattern__pb2.LoadTimingRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.LoadTimingResponse.FromString,
                _registered_method=True)
        self.ApplyLevelsAndTiming = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/ApplyLevelsAndTiming',
                request_serializer=nidigitalpattern__pb2.ApplyLevelsAndTimingRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.ApplyLevelsAndTimingResponse.FromString,
                _registered_method=True)
        self.ConfigureVoltageLevels = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/ConfigureVoltageLevels',
                request_serializer=nidigitalpattern__pb2.ConfigureVoltageLevelsRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.ConfigureVoltageLevelsResponse.FromString,
                _registered_method=True)
        self.ConfigureActiveLoadLevels = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/ConfigureActiveLoadLevels',
                request_serializer=nidigitalpattern__pb2.ConfigureActiveLoadLevelsRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.ConfigureActiveLoadLevelsResponse.FromString,
                _registered_method=True)
        self.ConfigureTerminationMode = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/ConfigureTerminationMode',
                request_serializer=nidigitalpattern__pb2.ConfigureTerminationModeRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.ConfigureTerminationModeResponse.FromString,
                _registered_method=True)
        self.CreateTimeSet = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/CreateTimeSet',
                request_serializer=nidigitalpattern__pb2.CreateTimeSetRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.CreateTimeSetResponse.FromString,
                _registered_method=True)
        self.ConfigureTimeSetPeriod = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/ConfigureTimeSetPeriod',
                request_serializer=nidigitalpattern__pb2.ConfigureTimeSetPeriodRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.ConfigureTimeSetPeriodResponse.FromString,
                _registered_method=True)
        self.ConfigureTimeSetDriveEdges = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/ConfigureTimeSetDriveEdges',
                request_serializer=nidigitalpattern__pb2.ConfigureTimeSetDriveEdgesRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.ConfigureTimeSetDriveEdgesResponse.FromString,
                _registered_method=True)
        self.ConfigureTimeSetCompareEdgesStrobe = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/ConfigureTimeSetCompareEdgesStrobe',
                request_serializer=nidigitalpattern__pb2.ConfigureTimeSetCompareEdgesStrobeRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.ConfigureTimeSetCompareEdgesStrobeResponse.FromString,
                _registered_method=True)
        self.ConfigureTimeSetDriveFormat = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/ConfigureTimeSetDriveFormat',
                request_serializer=nidigitalpattern__pb2.ConfigureTimeSetDriveFormatRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.ConfigureTimeSetDriveFormatResponse.FromString,
                _registered_method=True)
        self.DeleteAllTimeSets = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/DeleteAllTimeSets',
                request_serializer=nidigitalpattern__pb2.DeleteAllTimeSetsRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.DeleteAllTimeSetsResponse.FromString,
                _registered_method=True)
        self.ConfigureTimeSetEdgeMultiplier = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/ConfigureTimeSetEdgeMultiplier',
                request_serializer=nidigitalpattern__pb2.ConfigureTimeSetEdgeMultiplierRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.ConfigureTimeSetEdgeMultiplierResponse.FromString,
                _registered_method=True)
        self.ConfigureTimeSetDriveEdges2x = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/ConfigureTimeSetDriveEdges2x',
                request_serializer=nidigitalpattern__pb2.ConfigureTimeSetDriveEdges2xRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.ConfigureTimeSetDriveEdges2xResponse.FromString,
                _registered_method=True)
        self.ConfigureTimeSetCompareEdgesStrobe2x = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/ConfigureTimeSetCompareEdgesStrobe2x',
                request_serializer=nidigitalpattern__pb2.ConfigureTimeSetCompareEdgesStrobe2xRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.ConfigureTimeSetCompareEdgesStrobe2xResponse.FromString,
                _registered_method=True)
        self.ConfigureTimeSetEdge = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/ConfigureTimeSetEdge',
                request_serializer=nidigitalpattern__pb2.ConfigureTimeSetEdgeRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.ConfigureTimeSetEdgeResponse.FromString,
                _registered_method=True)
        self.GetTimeSetPeriod = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/GetTimeSetPeriod',
                request_serializer=nidigitalpattern__pb2.GetTimeSetPeriodRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.GetTimeSetPeriodResponse.FromString,
                _registered_method=True)
        self.GetTimeSetEdge = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/GetTimeSetEdge',
                request_serializer=nidigitalpattern__pb2.GetTimeSetEdgeRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.GetTimeSetEdgeResponse.FromString,
                _registered_method=True)
        self.GetTimeSetEdgeMultiplier = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/GetTimeSetEdgeMultiplier',
                request_serializer=nidigitalpattern__pb2.GetTimeSetEdgeMultiplierRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.GetTimeSetEdgeMultiplierResponse.FromString,
                _registered_method=True)
        self.GetTimeSetDriveFormat = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/GetTimeSetDriveFormat',
                request_serializer=nidigitalpattern__pb2.GetTimeSetDriveFormatRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.GetTimeSetDriveFormatResponse.FromString,
                _registered_method=True)
        self.GetTimeSetName = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/GetTimeSetName',
                request_serializer=nidigitalpattern__pb2.GetTimeSetNameRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.GetTimeSetNameResponse.FromString,
                _registered_method=True)
        self.TDR = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/TDR',
                request_serializer=nidigitalpattern__pb2.TDRRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.TDRResponse.FromString,
                _registered_method=True)
        self.ApplyTDROffsets = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/ApplyTDROffsets',
                request_serializer=nidigitalpattern__pb2.ApplyTDROffsetsRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.ApplyTDROffsetsResponse.FromString,
                _registered_method=True)
        self.PPMUConfigureOutputFunction = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/PPMUConfigureOutputFunction',
                request_serializer=nidigitalpattern__pb2.PPMUConfigureOutputFunctionRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.PPMUConfigureOutputFunctionResponse.FromString,
                _registered_method=True)
        self.PPMUConfigureApertureTime = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/PPMUConfigureApertureTime',
                request_serializer=nidigitalpattern__pb2.PPMUConfigureApertureTimeRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.PPMUConfigureApertureTimeResponse.FromString,
                _registered_method=True)
        self.PPMUConfigureVoltageLevel = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/PPMUConfigureVoltageLevel',
                request_serializer=nidigitalpattern__pb2.PPMUConfigureVoltageLevelRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.PPMUConfigureVoltageLevelResponse.FromString,
                _registered_method=True)
        self.PPMUConfigureCurrentLimit = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/PPMUConfigureCurrentLimit',
                request_serializer=nidigitalpattern__pb2.PPMUConfigureCurrentLimitRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.PPMUConfigureCurrentLimitResponse.FromString,
                _registered_method=True)
        self.PPMUConfigureCurrentLimitRange = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/PPMUConfigureCurrentLimitRange',
                request_serializer=nidigitalpattern__pb2.PPMUConfigureCurrentLimitRangeRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.PPMUConfigureCurrentLimitRangeResponse.FromString,
                _registered_method=True)
        self.PPMUConfigureCurrentLevel = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/PPMUConfigureCurrentLevel',
                request_serializer=nidigitalpattern__pb2.PPMUConfigureCurrentLevelRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.PPMUConfigureCurrentLevelResponse.FromString,
                _registered_method=True)
        self.PPMUConfigureCurrentLevelRange = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/PPMUConfigureCurrentLevelRange',
                request_serializer=nidigitalpattern__pb2.PPMUConfigureCurrentLevelRangeRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.PPMUConfigureCurrentLevelRangeResponse.FromString,
                _registered_method=True)
        self.PPMUConfigureVoltageLimits = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/PPMUConfigureVoltageLimits',
                request_serializer=nidigitalpattern__pb2.PPMUConfigureVoltageLimitsRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.PPMUConfigureVoltageLimitsResponse.FromString,
                _registered_method=True)
        self.PPMUSource = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/PPMUSource',
                request_serializer=nidigitalpattern__pb2.PPMUSourceRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.PPMUSourceResponse.FromString,
                _registered_method=True)
        self.PPMUMeasure = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/PPMUMeasure',
                request_serializer=nidigitalpattern__pb2.PPMUMeasureRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.PPMUMeasureResponse.FromString,
                _registered_method=True)
        self.LoadPattern = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/LoadPattern',
                request_serializer=nidigitalpattern__pb2.LoadPatternRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.LoadPatternResponse.FromString,
                _registered_method=True)
        self.UnloadAllPatterns = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/UnloadAllPatterns',
                request_serializer=nidigitalpattern__pb2.UnloadAllPatternsRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.UnloadAllPatternsResponse.FromString,
                _registered_method=True)
        self.ConfigureStartLabel = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/ConfigureStartLabel',
                request_serializer=nidigitalpattern__pb2.ConfigureStartLabelRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.ConfigureStartLabelResponse.FromString,
                _registered_method=True)
        self.ConfigurePatternBurstSites = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/ConfigurePatternBurstSites',
                request_serializer=nidigitalpattern__pb2.ConfigurePatternBurstSitesRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.ConfigurePatternBurstSitesResponse.FromString,
                _registered_method=True)
        self.GetPatternPinIndexes = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/GetPatternPinIndexes',
                request_serializer=nidigitalpattern__pb2.GetPatternPinIndexesRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.GetPatternPinIndexesResponse.FromString,
                _registered_method=True)
        self.GetPatternPinList = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/GetPatternPinList',
                request_serializer=nidigitalpattern__pb2.GetPatternPinListRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.GetPatternPinListResponse.FromString,
                _registered_method=True)
        self.GetPatternName = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/GetPatternName',
                request_serializer=nidigitalpattern__pb2.GetPatternNameRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.GetPatternNameResponse.FromString,
                _registered_method=True)
        self.BurstPattern = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/BurstPattern',
                request_serializer=nidigitalpattern__pb2.BurstPatternRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.BurstPatternResponse.FromString,
                _registered_method=True)
        self.BurstPatternSynchronized = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/BurstPatternSynchronized',
                request_serializer=nidigitalpattern__pb2.BurstPatternSynchronizedRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.BurstPatternSynchronizedResponse.FromString,
                _registered_method=True)
        self.Commit = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/Commit',
                request_serializer=nidigitalpattern__pb2.CommitRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.CommitResponse.FromString,
                _registered_method=True)
        self.Initiate = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/Initiate',
                request_serializer=nidigitalpattern__pb2.InitiateRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.InitiateResponse.FromString,
                _registered_method=True)
        self.IsDone = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/IsDone',
                request_serializer=nidigitalpattern__pb2.IsDoneRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.IsDoneResponse.FromString,
                _registered_method=True)
        self.WaitUntilDone = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/WaitUntilDone',
                request_serializer=nidigitalpattern__pb2.WaitUntilDoneRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.WaitUntilDoneResponse.FromString,
                _registered_method=True)
        self.Abort = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/Abort',
                request_serializer=nidigitalpattern__pb2.AbortRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.AbortResponse.FromString,
                _registered_method=True)
        self.AbortKeepAlive = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/AbortKeepAlive',
                request_serializer=nidigitalpattern__pb2.AbortKeepAliveRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.AbortKeepAliveResponse.FromString,
                _registered_method=True)
        self.ConfigurePatternLabelHistoryRAMTrigger = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/ConfigurePatternLabelHistoryRAMTrigger',
                request_serializer=nidigitalpattern__pb2.ConfigurePatternLabelHistoryRAMTriggerRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.ConfigurePatternLabelHistoryRAMTriggerResponse.FromString,
                _registered_method=True)
        self.ConfigureCycleNumberHistoryRAMTrigger = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/ConfigureCycleNumberHistoryRAMTrigger',
                request_serializer=nidigitalpattern__pb2.ConfigureCycleNumberHistoryRAMTriggerRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.ConfigureCycleNumberHistoryRAMTriggerResponse.FromString,
                _registered_method=True)
        self.ConfigureFirstFailureHistoryRAMTrigger = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/ConfigureFirstFailureHistoryRAMTrigger',
                request_serializer=nidigitalpattern__pb2.ConfigureFirstFailureHistoryRAMTriggerRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.ConfigureFirstFailureHistoryRAMTriggerResponse.FromString,
                _registered_method=True)
        self.ConfigureHistoryRAMCyclesToAcquire = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/ConfigureHistoryRAMCyclesToAcquire',
                request_serializer=nidigitalpattern__pb2.ConfigureHistoryRAMCyclesToAcquireRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.ConfigureHistoryRAMCyclesToAcquireResponse.FromString,
                _registered_method=True)
        self.GetHistoryRAMSampleCount = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/GetHistoryRAMSampleCount',
                request_serializer=nidigitalpattern__pb2.GetHistoryRAMSampleCountRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.GetHistoryRAMSampleCountResponse.FromString,
                _registered_method=True)
        self.FetchHistoryRAMCycleInformation = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/FetchHistoryRAMCycleInformation',
                request_serializer=nidigitalpattern__pb2.FetchHistoryRAMCycleInformationRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.FetchHistoryRAMCycleInformationResponse.FromString,
                _registered_method=True)
        self.FetchHistoryRAMCyclePinData = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/FetchHistoryRAMCyclePinData',
                request_serializer=nidigitalpattern__pb2.FetchHistoryRAMCyclePinDataRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.FetchHistoryRAMCyclePinDataResponse.FromString,
                _registered_method=True)
        self.FetchHistoryRAMScanCycleNumber = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/FetchHistoryRAMScanCycleNumber',
                request_serializer=nidigitalpattern__pb2.FetchHistoryRAMScanCycleNumberRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.FetchHistoryRAMScanCycleNumberResponse.FromString,
                _registered_method=True)
        self.CreateSourceWaveformParallel = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/CreateSourceWaveformParallel',
                request_serializer=nidigitalpattern__pb2.CreateSourceWaveformParallelRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.CreateSourceWaveformParallelResponse.FromString,
                _registered_method=True)
        self.CreateSourceWaveformSerial = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/CreateSourceWaveformSerial',
                request_serializer=nidigitalpattern__pb2.CreateSourceWaveformSerialRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.CreateSourceWaveformSerialResponse.FromString,
                _registered_method=True)
        self.CreateSourceWaveformFromFileTDMS = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/CreateSourceWaveformFromFileTDMS',
                request_serializer=nidigitalpattern__pb2.CreateSourceWaveformFromFileTDMSRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.CreateSourceWaveformFromFileTDMSResponse.FromString,
                _registered_method=True)
        self.WriteSourceWaveformBroadcastU32 = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/WriteSourceWaveformBroadcastU32',
                request_serializer=nidigitalpattern__pb2.WriteSourceWaveformBroadcastU32Request.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.WriteSourceWaveformBroadcastU32Response.FromString,
                _registered_method=True)
        self.WriteSourceWaveformSiteUniqueU32 = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/WriteSourceWaveformSiteUniqueU32',
                request_serializer=nidigitalpattern__pb2.WriteSourceWaveformSiteUniqueU32Request.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.WriteSourceWaveformSiteUniqueU32Response.FromString,
                _registered_method=True)
        self.WriteSourceWaveformDataFromFileTDMS = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/WriteSourceWaveformDataFromFileTDMS',
                request_serializer=nidigitalpattern__pb2.WriteSourceWaveformDataFromFileTDMSRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.WriteSourceWaveformDataFromFileTDMSResponse.FromString,
                _registered_method=True)
        self.CreateCaptureWaveformParallel = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/CreateCaptureWaveformParallel',
                request_serializer=nidigitalpattern__pb2.CreateCaptureWaveformParallelRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.CreateCaptureWaveformParallelResponse.FromString,
                _registered_method=True)
        self.CreateCaptureWaveformSerial = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/CreateCaptureWaveformSerial',
                request_serializer=nidigitalpattern__pb2.CreateCaptureWaveformSerialRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.CreateCaptureWaveformSerialResponse.FromString,
                _registered_method=True)
        self.CreateCaptureWaveformFromFileDigicapture = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/CreateCaptureWaveformFromFileDigicapture',
                request_serializer=nidigitalpattern__pb2.CreateCaptureWaveformFromFileDigicaptureRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.CreateCaptureWaveformFromFileDigicaptureResponse.FromString,
                _registered_method=True)
        self.FetchCaptureWaveformU32 = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/FetchCaptureWaveformU32',
                request_serializer=nidigitalpattern__pb2.FetchCaptureWaveformU32Request.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.FetchCaptureWaveformU32Response.FromString,
                _registered_method=True)
        self.ExportSignal = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/ExportSignal',
                request_serializer=nidigitalpattern__pb2.ExportSignalRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.ExportSignalResponse.FromString,
                _registered_method=True)
        self.ConfigureDigitalEdgeStartTrigger = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/ConfigureDigitalEdgeStartTrigger',
                request_serializer=nidigitalpattern__pb2.ConfigureDigitalEdgeStartTriggerRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.ConfigureDigitalEdgeStartTriggerResponse.FromString,
                _registered_method=True)
        self.ConfigureSoftwareEdgeStartTrigger = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/ConfigureSoftwareEdgeStartTrigger',
                request_serializer=nidigitalpattern__pb2.ConfigureSoftwareEdgeStartTriggerRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.ConfigureSoftwareEdgeStartTriggerResponse.FromString,
                _registered_method=True)
        self.DisableStartTrigger = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/DisableStartTrigger',
                request_serializer=nidigitalpattern__pb2.DisableStartTriggerRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.DisableStartTriggerResponse.FromString,
                _registered_method=True)
        self.ConfigureDigitalEdgeConditionalJumpTrigger = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/ConfigureDigitalEdgeConditionalJumpTrigger',
                request_serializer=nidigitalpattern__pb2.ConfigureDigitalEdgeConditionalJumpTriggerRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.ConfigureDigitalEdgeConditionalJumpTriggerResponse.FromString,
                _registered_method=True)
        self.ConfigureSoftwareEdgeConditionalJumpTrigger = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/ConfigureSoftwareEdgeConditionalJumpTrigger',
                request_serializer=nidigitalpattern__pb2.ConfigureSoftwareEdgeConditionalJumpTriggerRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.ConfigureSoftwareEdgeConditionalJumpTriggerResponse.FromString,
                _registered_method=True)
        self.DisableConditionalJumpTrigger = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/DisableConditionalJumpTrigger',
                request_serializer=nidigitalpattern__pb2.DisableConditionalJumpTriggerRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.DisableConditionalJumpTriggerResponse.FromString,
                _registered_method=True)
        self.SendSoftwareEdgeTrigger = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/SendSoftwareEdgeTrigger',
                request_serializer=nidigitalpattern__pb2.SendSoftwareEdgeTriggerRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.SendSoftwareEdgeTriggerResponse.FromString,
                _registered_method=True)
        self.WriteSequencerFlag = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/WriteSequencerFlag',
                request_serializer=nidigitalpattern__pb2.WriteSequencerFlagRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.WriteSequencerFlagResponse.FromString,
                _registered_method=True)
        self.WriteSequencerFlagSynchronized = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/WriteSequencerFlagSynchronized',
                request_serializer=nidigitalpattern__pb2.WriteSequencerFlagSynchronizedRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.WriteSequencerFlagSynchronizedResponse.FromString,
                _registered_method=True)
        self.ReadSequencerFlag = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/ReadSequencerFlag',
                request_serializer=nidigitalpattern__pb2.ReadSequencerFlagRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.ReadSequencerFlagResponse.FromString,
                _registered_method=True)
        self.WriteSequencerRegister = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/WriteSequencerRegister',
                request_serializer=nidigitalpattern__pb2.WriteSequencerRegisterRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.WriteSequencerRegisterResponse.FromString,
                _registered_method=True)
        self.ReadSequencerRegister = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/ReadSequencerRegister',
                request_serializer=nidigitalpattern__pb2.ReadSequencerRegisterRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.ReadSequencerRegisterResponse.FromString,
                _registered_method=True)
        self.EnableMatchFailCombination = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/EnableMatchFailCombination',
                request_serializer=nidigitalpattern__pb2.EnableMatchFailCombinationRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.EnableMatchFailCombinationResponse.FromString,
                _registered_method=True)
        self.GetSitePassFail = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/GetSitePassFail',
                request_serializer=nidigitalpattern__pb2.GetSitePassFailRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.GetSitePassFailResponse.FromString,
                _registered_method=True)
        self.GetFailCount = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/GetFailCount',
                request_serializer=nidigitalpattern__pb2.GetFailCountRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.GetFailCountResponse.FromString,
                _registered_method=True)
        self.GetPinResultsPinInformation = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/GetPinResultsPinInformation',
                request_serializer=nidigitalpattern__pb2.GetPinResultsPinInformationRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.GetPinResultsPinInformationResponse.FromString,
                _registered_method=True)
        self.GetSiteResultsSiteNumbers = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/GetSiteResultsSiteNumbers',
                request_serializer=nidigitalpattern__pb2.GetSiteResultsSiteNumbersRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.GetSiteResultsSiteNumbersResponse.FromString,
                _registered_method=True)
        self.FrequencyCounterConfigureMeasurementTime = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/FrequencyCounterConfigureMeasurementTime',
                request_serializer=nidigitalpattern__pb2.FrequencyCounterConfigureMeasurementTimeRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.FrequencyCounterConfigureMeasurementTimeResponse.FromString,
                _registered_method=True)
        self.FrequencyCounterConfigureMeasurementMode = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/FrequencyCounterConfigureMeasurementMode',
                request_serializer=nidigitalpattern__pb2.FrequencyCounterConfigureMeasurementModeRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.FrequencyCounterConfigureMeasurementModeResponse.FromString,
                _registered_method=True)
        self.FrequencyCounterMeasureFrequency = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/FrequencyCounterMeasureFrequency',
                request_serializer=nidigitalpattern__pb2.FrequencyCounterMeasureFrequencyRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.FrequencyCounterMeasureFrequencyResponse.FromString,
                _registered_method=True)
        self.GetChannelNameFromString = channel.unary_unary(
                '/nidigitalpattern_grpc.NiDigital/GetChannelNameFromString',
                request_serializer=nidigitalpattern__pb2.GetChannelNameFromStringRequest.SerializeToString,
                response_deserializer=nidigitalpattern__pb2.GetChannelNameFromStringResponse.FromString,
                _registered_method=True)


class NiDigitalServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Init(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def InitWithOptions(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Close(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Reset(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ResetDevice(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SelfTest(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetError(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ClearError(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ErrorMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SelfCalibrate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAttributeViInt32(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAttributeViInt64(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAttributeViReal64(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAttributeViString(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAttributeViSession(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAttributeViBoolean(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetAttributeViInt32(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetAttributeViInt64(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetAttributeViReal64(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetAttributeViString(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetAttributeViSession(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetAttributeViBoolean(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ResetAttribute(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LoadPinMap(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EnableSites(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DisableSites(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def IsSiteEnabled(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreatePinMap(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreatePinGroup(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateChannelMap(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MapPinToChannel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EndChannelMap(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPinName(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetChannelName(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SelectFunction(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReadStatic(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WriteStatic(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ClockGeneratorGenerateClock(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ClockGeneratorInitiate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ClockGeneratorAbort(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LoadSpecifications(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UnloadSpecifications(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LoadLevels(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LoadTiming(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ApplyLevelsAndTiming(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ConfigureVoltageLevels(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ConfigureActiveLoadLevels(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ConfigureTerminationMode(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateTimeSet(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ConfigureTimeSetPeriod(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ConfigureTimeSetDriveEdges(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ConfigureTimeSetCompareEdgesStrobe(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ConfigureTimeSetDriveFormat(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteAllTimeSets(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ConfigureTimeSetEdgeMultiplier(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ConfigureTimeSetDriveEdges2x(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ConfigureTimeSetCompareEdgesStrobe2x(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ConfigureTimeSetEdge(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTimeSetPeriod(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTimeSetEdge(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTimeSetEdgeMultiplier(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTimeSetDriveFormat(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTimeSetName(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TDR(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ApplyTDROffsets(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PPMUConfigureOutputFunction(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PPMUConfigureApertureTime(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PPMUConfigureVoltageLevel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PPMUConfigureCurrentLimit(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PPMUConfigureCurrentLimitRange(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PPMUConfigureCurrentLevel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PPMUConfigureCurrentLevelRange(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PPMUConfigureVoltageLimits(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PPMUSource(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PPMUMeasure(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LoadPattern(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UnloadAllPatterns(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ConfigureStartLabel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ConfigurePatternBurstSites(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPatternPinIndexes(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPatternPinList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPatternName(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BurstPattern(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BurstPatternSynchronized(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Commit(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Initiate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def IsDone(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WaitUntilDone(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Abort(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AbortKeepAlive(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ConfigurePatternLabelHistoryRAMTrigger(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ConfigureCycleNumberHistoryRAMTrigger(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ConfigureFirstFailureHistoryRAMTrigger(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ConfigureHistoryRAMCyclesToAcquire(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetHistoryRAMSampleCount(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FetchHistoryRAMCycleInformation(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FetchHistoryRAMCyclePinData(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FetchHistoryRAMScanCycleNumber(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateSourceWaveformParallel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateSourceWaveformSerial(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateSourceWaveformFromFileTDMS(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WriteSourceWaveformBroadcastU32(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WriteSourceWaveformSiteUniqueU32(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WriteSourceWaveformDataFromFileTDMS(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateCaptureWaveformParallel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateCaptureWaveformSerial(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateCaptureWaveformFromFileDigicapture(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FetchCaptureWaveformU32(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ExportSignal(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ConfigureDigitalEdgeStartTrigger(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ConfigureSoftwareEdgeStartTrigger(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DisableStartTrigger(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ConfigureDigitalEdgeConditionalJumpTrigger(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ConfigureSoftwareEdgeConditionalJumpTrigger(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DisableConditionalJumpTrigger(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendSoftwareEdgeTrigger(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WriteSequencerFlag(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WriteSequencerFlagSynchronized(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReadSequencerFlag(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WriteSequencerRegister(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReadSequencerRegister(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EnableMatchFailCombination(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSitePassFail(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFailCount(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPinResultsPinInformation(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSiteResultsSiteNumbers(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FrequencyCounterConfigureMeasurementTime(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FrequencyCounterConfigureMeasurementMode(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FrequencyCounterMeasureFrequency(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetChannelNameFromString(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_NiDigitalServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Init': grpc.unary_unary_rpc_method_handler(
                    servicer.Init,
                    request_deserializer=nidigitalpattern__pb2.InitRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.InitResponse.SerializeToString,
            ),
            'InitWithOptions': grpc.unary_unary_rpc_method_handler(
                    servicer.InitWithOptions,
                    request_deserializer=nidigitalpattern__pb2.InitWithOptionsRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.InitWithOptionsResponse.SerializeToString,
            ),
            'Close': grpc.unary_unary_rpc_method_handler(
                    servicer.Close,
                    request_deserializer=nidigitalpattern__pb2.CloseRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.CloseResponse.SerializeToString,
            ),
            'Reset': grpc.unary_unary_rpc_method_handler(
                    servicer.Reset,
                    request_deserializer=nidigitalpattern__pb2.ResetRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.ResetResponse.SerializeToString,
            ),
            'ResetDevice': grpc.unary_unary_rpc_method_handler(
                    servicer.ResetDevice,
                    request_deserializer=nidigitalpattern__pb2.ResetDeviceRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.ResetDeviceResponse.SerializeToString,
            ),
            'SelfTest': grpc.unary_unary_rpc_method_handler(
                    servicer.SelfTest,
                    request_deserializer=nidigitalpattern__pb2.SelfTestRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.SelfTestResponse.SerializeToString,
            ),
            'GetError': grpc.unary_unary_rpc_method_handler(
                    servicer.GetError,
                    request_deserializer=nidigitalpattern__pb2.GetErrorRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.GetErrorResponse.SerializeToString,
            ),
            'ClearError': grpc.unary_unary_rpc_method_handler(
                    servicer.ClearError,
                    request_deserializer=nidigitalpattern__pb2.ClearErrorRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.ClearErrorResponse.SerializeToString,
            ),
            'ErrorMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.ErrorMessage,
                    request_deserializer=nidigitalpattern__pb2.ErrorMessageRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.ErrorMessageResponse.SerializeToString,
            ),
            'SelfCalibrate': grpc.unary_unary_rpc_method_handler(
                    servicer.SelfCalibrate,
                    request_deserializer=nidigitalpattern__pb2.SelfCalibrateRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.SelfCalibrateResponse.SerializeToString,
            ),
            'GetAttributeViInt32': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAttributeViInt32,
                    request_deserializer=nidigitalpattern__pb2.GetAttributeViInt32Request.FromString,
                    response_serializer=nidigitalpattern__pb2.GetAttributeViInt32Response.SerializeToString,
            ),
            'GetAttributeViInt64': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAttributeViInt64,
                    request_deserializer=nidigitalpattern__pb2.GetAttributeViInt64Request.FromString,
                    response_serializer=nidigitalpattern__pb2.GetAttributeViInt64Response.SerializeToString,
            ),
            'GetAttributeViReal64': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAttributeViReal64,
                    request_deserializer=nidigitalpattern__pb2.GetAttributeViReal64Request.FromString,
                    response_serializer=nidigitalpattern__pb2.GetAttributeViReal64Response.SerializeToString,
            ),
            'GetAttributeViString': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAttributeViString,
                    request_deserializer=nidigitalpattern__pb2.GetAttributeViStringRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.GetAttributeViStringResponse.SerializeToString,
            ),
            'GetAttributeViSession': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAttributeViSession,
                    request_deserializer=nidigitalpattern__pb2.GetAttributeViSessionRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.GetAttributeViSessionResponse.SerializeToString,
            ),
            'GetAttributeViBoolean': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAttributeViBoolean,
                    request_deserializer=nidigitalpattern__pb2.GetAttributeViBooleanRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.GetAttributeViBooleanResponse.SerializeToString,
            ),
            'SetAttributeViInt32': grpc.unary_unary_rpc_method_handler(
                    servicer.SetAttributeViInt32,
                    request_deserializer=nidigitalpattern__pb2.SetAttributeViInt32Request.FromString,
                    response_serializer=nidigitalpattern__pb2.SetAttributeViInt32Response.SerializeToString,
            ),
            'SetAttributeViInt64': grpc.unary_unary_rpc_method_handler(
                    servicer.SetAttributeViInt64,
                    request_deserializer=nidigitalpattern__pb2.SetAttributeViInt64Request.FromString,
                    response_serializer=nidigitalpattern__pb2.SetAttributeViInt64Response.SerializeToString,
            ),
            'SetAttributeViReal64': grpc.unary_unary_rpc_method_handler(
                    servicer.SetAttributeViReal64,
                    request_deserializer=nidigitalpattern__pb2.SetAttributeViReal64Request.FromString,
                    response_serializer=nidigitalpattern__pb2.SetAttributeViReal64Response.SerializeToString,
            ),
            'SetAttributeViString': grpc.unary_unary_rpc_method_handler(
                    servicer.SetAttributeViString,
                    request_deserializer=nidigitalpattern__pb2.SetAttributeViStringRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.SetAttributeViStringResponse.SerializeToString,
            ),
            'SetAttributeViSession': grpc.unary_unary_rpc_method_handler(
                    servicer.SetAttributeViSession,
                    request_deserializer=nidigitalpattern__pb2.SetAttributeViSessionRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.SetAttributeViSessionResponse.SerializeToString,
            ),
            'SetAttributeViBoolean': grpc.unary_unary_rpc_method_handler(
                    servicer.SetAttributeViBoolean,
                    request_deserializer=nidigitalpattern__pb2.SetAttributeViBooleanRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.SetAttributeViBooleanResponse.SerializeToString,
            ),
            'ResetAttribute': grpc.unary_unary_rpc_method_handler(
                    servicer.ResetAttribute,
                    request_deserializer=nidigitalpattern__pb2.ResetAttributeRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.ResetAttributeResponse.SerializeToString,
            ),
            'LoadPinMap': grpc.unary_unary_rpc_method_handler(
                    servicer.LoadPinMap,
                    request_deserializer=nidigitalpattern__pb2.LoadPinMapRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.LoadPinMapResponse.SerializeToString,
            ),
            'EnableSites': grpc.unary_unary_rpc_method_handler(
                    servicer.EnableSites,
                    request_deserializer=nidigitalpattern__pb2.EnableSitesRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.EnableSitesResponse.SerializeToString,
            ),
            'DisableSites': grpc.unary_unary_rpc_method_handler(
                    servicer.DisableSites,
                    request_deserializer=nidigitalpattern__pb2.DisableSitesRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.DisableSitesResponse.SerializeToString,
            ),
            'IsSiteEnabled': grpc.unary_unary_rpc_method_handler(
                    servicer.IsSiteEnabled,
                    request_deserializer=nidigitalpattern__pb2.IsSiteEnabledRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.IsSiteEnabledResponse.SerializeToString,
            ),
            'CreatePinMap': grpc.unary_unary_rpc_method_handler(
                    servicer.CreatePinMap,
                    request_deserializer=nidigitalpattern__pb2.CreatePinMapRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.CreatePinMapResponse.SerializeToString,
            ),
            'CreatePinGroup': grpc.unary_unary_rpc_method_handler(
                    servicer.CreatePinGroup,
                    request_deserializer=nidigitalpattern__pb2.CreatePinGroupRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.CreatePinGroupResponse.SerializeToString,
            ),
            'CreateChannelMap': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateChannelMap,
                    request_deserializer=nidigitalpattern__pb2.CreateChannelMapRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.CreateChannelMapResponse.SerializeToString,
            ),
            'MapPinToChannel': grpc.unary_unary_rpc_method_handler(
                    servicer.MapPinToChannel,
                    request_deserializer=nidigitalpattern__pb2.MapPinToChannelRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.MapPinToChannelResponse.SerializeToString,
            ),
            'EndChannelMap': grpc.unary_unary_rpc_method_handler(
                    servicer.EndChannelMap,
                    request_deserializer=nidigitalpattern__pb2.EndChannelMapRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.EndChannelMapResponse.SerializeToString,
            ),
            'GetPinName': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPinName,
                    request_deserializer=nidigitalpattern__pb2.GetPinNameRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.GetPinNameResponse.SerializeToString,
            ),
            'GetChannelName': grpc.unary_unary_rpc_method_handler(
                    servicer.GetChannelName,
                    request_deserializer=nidigitalpattern__pb2.GetChannelNameRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.GetChannelNameResponse.SerializeToString,
            ),
            'SelectFunction': grpc.unary_unary_rpc_method_handler(
                    servicer.SelectFunction,
                    request_deserializer=nidigitalpattern__pb2.SelectFunctionRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.SelectFunctionResponse.SerializeToString,
            ),
            'ReadStatic': grpc.unary_unary_rpc_method_handler(
                    servicer.ReadStatic,
                    request_deserializer=nidigitalpattern__pb2.ReadStaticRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.ReadStaticResponse.SerializeToString,
            ),
            'WriteStatic': grpc.unary_unary_rpc_method_handler(
                    servicer.WriteStatic,
                    request_deserializer=nidigitalpattern__pb2.WriteStaticRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.WriteStaticResponse.SerializeToString,
            ),
            'ClockGeneratorGenerateClock': grpc.unary_unary_rpc_method_handler(
                    servicer.ClockGeneratorGenerateClock,
                    request_deserializer=nidigitalpattern__pb2.ClockGeneratorGenerateClockRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.ClockGeneratorGenerateClockResponse.SerializeToString,
            ),
            'ClockGeneratorInitiate': grpc.unary_unary_rpc_method_handler(
                    servicer.ClockGeneratorInitiate,
                    request_deserializer=nidigitalpattern__pb2.ClockGeneratorInitiateRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.ClockGeneratorInitiateResponse.SerializeToString,
            ),
            'ClockGeneratorAbort': grpc.unary_unary_rpc_method_handler(
                    servicer.ClockGeneratorAbort,
                    request_deserializer=nidigitalpattern__pb2.ClockGeneratorAbortRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.ClockGeneratorAbortResponse.SerializeToString,
            ),
            'LoadSpecifications': grpc.unary_unary_rpc_method_handler(
                    servicer.LoadSpecifications,
                    request_deserializer=nidigitalpattern__pb2.LoadSpecificationsRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.LoadSpecificationsResponse.SerializeToString,
            ),
            'UnloadSpecifications': grpc.unary_unary_rpc_method_handler(
                    servicer.UnloadSpecifications,
                    request_deserializer=nidigitalpattern__pb2.UnloadSpecificationsRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.UnloadSpecificationsResponse.SerializeToString,
            ),
            'LoadLevels': grpc.unary_unary_rpc_method_handler(
                    servicer.LoadLevels,
                    request_deserializer=nidigitalpattern__pb2.LoadLevelsRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.LoadLevelsResponse.SerializeToString,
            ),
            'LoadTiming': grpc.unary_unary_rpc_method_handler(
                    servicer.LoadTiming,
                    request_deserializer=nidigitalpattern__pb2.LoadTimingRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.LoadTimingResponse.SerializeToString,
            ),
            'ApplyLevelsAndTiming': grpc.unary_unary_rpc_method_handler(
                    servicer.ApplyLevelsAndTiming,
                    request_deserializer=nidigitalpattern__pb2.ApplyLevelsAndTimingRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.ApplyLevelsAndTimingResponse.SerializeToString,
            ),
            'ConfigureVoltageLevels': grpc.unary_unary_rpc_method_handler(
                    servicer.ConfigureVoltageLevels,
                    request_deserializer=nidigitalpattern__pb2.ConfigureVoltageLevelsRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.ConfigureVoltageLevelsResponse.SerializeToString,
            ),
            'ConfigureActiveLoadLevels': grpc.unary_unary_rpc_method_handler(
                    servicer.ConfigureActiveLoadLevels,
                    request_deserializer=nidigitalpattern__pb2.ConfigureActiveLoadLevelsRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.ConfigureActiveLoadLevelsResponse.SerializeToString,
            ),
            'ConfigureTerminationMode': grpc.unary_unary_rpc_method_handler(
                    servicer.ConfigureTerminationMode,
                    request_deserializer=nidigitalpattern__pb2.ConfigureTerminationModeRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.ConfigureTerminationModeResponse.SerializeToString,
            ),
            'CreateTimeSet': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateTimeSet,
                    request_deserializer=nidigitalpattern__pb2.CreateTimeSetRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.CreateTimeSetResponse.SerializeToString,
            ),
            'ConfigureTimeSetPeriod': grpc.unary_unary_rpc_method_handler(
                    servicer.ConfigureTimeSetPeriod,
                    request_deserializer=nidigitalpattern__pb2.ConfigureTimeSetPeriodRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.ConfigureTimeSetPeriodResponse.SerializeToString,
            ),
            'ConfigureTimeSetDriveEdges': grpc.unary_unary_rpc_method_handler(
                    servicer.ConfigureTimeSetDriveEdges,
                    request_deserializer=nidigitalpattern__pb2.ConfigureTimeSetDriveEdgesRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.ConfigureTimeSetDriveEdgesResponse.SerializeToString,
            ),
            'ConfigureTimeSetCompareEdgesStrobe': grpc.unary_unary_rpc_method_handler(
                    servicer.ConfigureTimeSetCompareEdgesStrobe,
                    request_deserializer=nidigitalpattern__pb2.ConfigureTimeSetCompareEdgesStrobeRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.ConfigureTimeSetCompareEdgesStrobeResponse.SerializeToString,
            ),
            'ConfigureTimeSetDriveFormat': grpc.unary_unary_rpc_method_handler(
                    servicer.ConfigureTimeSetDriveFormat,
                    request_deserializer=nidigitalpattern__pb2.ConfigureTimeSetDriveFormatRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.ConfigureTimeSetDriveFormatResponse.SerializeToString,
            ),
            'DeleteAllTimeSets': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteAllTimeSets,
                    request_deserializer=nidigitalpattern__pb2.DeleteAllTimeSetsRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.DeleteAllTimeSetsResponse.SerializeToString,
            ),
            'ConfigureTimeSetEdgeMultiplier': grpc.unary_unary_rpc_method_handler(
                    servicer.ConfigureTimeSetEdgeMultiplier,
                    request_deserializer=nidigitalpattern__pb2.ConfigureTimeSetEdgeMultiplierRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.ConfigureTimeSetEdgeMultiplierResponse.SerializeToString,
            ),
            'ConfigureTimeSetDriveEdges2x': grpc.unary_unary_rpc_method_handler(
                    servicer.ConfigureTimeSetDriveEdges2x,
                    request_deserializer=nidigitalpattern__pb2.ConfigureTimeSetDriveEdges2xRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.ConfigureTimeSetDriveEdges2xResponse.SerializeToString,
            ),
            'ConfigureTimeSetCompareEdgesStrobe2x': grpc.unary_unary_rpc_method_handler(
                    servicer.ConfigureTimeSetCompareEdgesStrobe2x,
                    request_deserializer=nidigitalpattern__pb2.ConfigureTimeSetCompareEdgesStrobe2xRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.ConfigureTimeSetCompareEdgesStrobe2xResponse.SerializeToString,
            ),
            'ConfigureTimeSetEdge': grpc.unary_unary_rpc_method_handler(
                    servicer.ConfigureTimeSetEdge,
                    request_deserializer=nidigitalpattern__pb2.ConfigureTimeSetEdgeRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.ConfigureTimeSetEdgeResponse.SerializeToString,
            ),
            'GetTimeSetPeriod': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTimeSetPeriod,
                    request_deserializer=nidigitalpattern__pb2.GetTimeSetPeriodRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.GetTimeSetPeriodResponse.SerializeToString,
            ),
            'GetTimeSetEdge': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTimeSetEdge,
                    request_deserializer=nidigitalpattern__pb2.GetTimeSetEdgeRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.GetTimeSetEdgeResponse.SerializeToString,
            ),
            'GetTimeSetEdgeMultiplier': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTimeSetEdgeMultiplier,
                    request_deserializer=nidigitalpattern__pb2.GetTimeSetEdgeMultiplierRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.GetTimeSetEdgeMultiplierResponse.SerializeToString,
            ),
            'GetTimeSetDriveFormat': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTimeSetDriveFormat,
                    request_deserializer=nidigitalpattern__pb2.GetTimeSetDriveFormatRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.GetTimeSetDriveFormatResponse.SerializeToString,
            ),
            'GetTimeSetName': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTimeSetName,
                    request_deserializer=nidigitalpattern__pb2.GetTimeSetNameRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.GetTimeSetNameResponse.SerializeToString,
            ),
            'TDR': grpc.unary_unary_rpc_method_handler(
                    servicer.TDR,
                    request_deserializer=nidigitalpattern__pb2.TDRRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.TDRResponse.SerializeToString,
            ),
            'ApplyTDROffsets': grpc.unary_unary_rpc_method_handler(
                    servicer.ApplyTDROffsets,
                    request_deserializer=nidigitalpattern__pb2.ApplyTDROffsetsRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.ApplyTDROffsetsResponse.SerializeToString,
            ),
            'PPMUConfigureOutputFunction': grpc.unary_unary_rpc_method_handler(
                    servicer.PPMUConfigureOutputFunction,
                    request_deserializer=nidigitalpattern__pb2.PPMUConfigureOutputFunctionRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.PPMUConfigureOutputFunctionResponse.SerializeToString,
            ),
            'PPMUConfigureApertureTime': grpc.unary_unary_rpc_method_handler(
                    servicer.PPMUConfigureApertureTime,
                    request_deserializer=nidigitalpattern__pb2.PPMUConfigureApertureTimeRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.PPMUConfigureApertureTimeResponse.SerializeToString,
            ),
            'PPMUConfigureVoltageLevel': grpc.unary_unary_rpc_method_handler(
                    servicer.PPMUConfigureVoltageLevel,
                    request_deserializer=nidigitalpattern__pb2.PPMUConfigureVoltageLevelRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.PPMUConfigureVoltageLevelResponse.SerializeToString,
            ),
            'PPMUConfigureCurrentLimit': grpc.unary_unary_rpc_method_handler(
                    servicer.PPMUConfigureCurrentLimit,
                    request_deserializer=nidigitalpattern__pb2.PPMUConfigureCurrentLimitRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.PPMUConfigureCurrentLimitResponse.SerializeToString,
            ),
            'PPMUConfigureCurrentLimitRange': grpc.unary_unary_rpc_method_handler(
                    servicer.PPMUConfigureCurrentLimitRange,
                    request_deserializer=nidigitalpattern__pb2.PPMUConfigureCurrentLimitRangeRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.PPMUConfigureCurrentLimitRangeResponse.SerializeToString,
            ),
            'PPMUConfigureCurrentLevel': grpc.unary_unary_rpc_method_handler(
                    servicer.PPMUConfigureCurrentLevel,
                    request_deserializer=nidigitalpattern__pb2.PPMUConfigureCurrentLevelRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.PPMUConfigureCurrentLevelResponse.SerializeToString,
            ),
            'PPMUConfigureCurrentLevelRange': grpc.unary_unary_rpc_method_handler(
                    servicer.PPMUConfigureCurrentLevelRange,
                    request_deserializer=nidigitalpattern__pb2.PPMUConfigureCurrentLevelRangeRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.PPMUConfigureCurrentLevelRangeResponse.SerializeToString,
            ),
            'PPMUConfigureVoltageLimits': grpc.unary_unary_rpc_method_handler(
                    servicer.PPMUConfigureVoltageLimits,
                    request_deserializer=nidigitalpattern__pb2.PPMUConfigureVoltageLimitsRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.PPMUConfigureVoltageLimitsResponse.SerializeToString,
            ),
            'PPMUSource': grpc.unary_unary_rpc_method_handler(
                    servicer.PPMUSource,
                    request_deserializer=nidigitalpattern__pb2.PPMUSourceRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.PPMUSourceResponse.SerializeToString,
            ),
            'PPMUMeasure': grpc.unary_unary_rpc_method_handler(
                    servicer.PPMUMeasure,
                    request_deserializer=nidigitalpattern__pb2.PPMUMeasureRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.PPMUMeasureResponse.SerializeToString,
            ),
            'LoadPattern': grpc.unary_unary_rpc_method_handler(
                    servicer.LoadPattern,
                    request_deserializer=nidigitalpattern__pb2.LoadPatternRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.LoadPatternResponse.SerializeToString,
            ),
            'UnloadAllPatterns': grpc.unary_unary_rpc_method_handler(
                    servicer.UnloadAllPatterns,
                    request_deserializer=nidigitalpattern__pb2.UnloadAllPatternsRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.UnloadAllPatternsResponse.SerializeToString,
            ),
            'ConfigureStartLabel': grpc.unary_unary_rpc_method_handler(
                    servicer.ConfigureStartLabel,
                    request_deserializer=nidigitalpattern__pb2.ConfigureStartLabelRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.ConfigureStartLabelResponse.SerializeToString,
            ),
            'ConfigurePatternBurstSites': grpc.unary_unary_rpc_method_handler(
                    servicer.ConfigurePatternBurstSites,
                    request_deserializer=nidigitalpattern__pb2.ConfigurePatternBurstSitesRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.ConfigurePatternBurstSitesResponse.SerializeToString,
            ),
            'GetPatternPinIndexes': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPatternPinIndexes,
                    request_deserializer=nidigitalpattern__pb2.GetPatternPinIndexesRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.GetPatternPinIndexesResponse.SerializeToString,
            ),
            'GetPatternPinList': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPatternPinList,
                    request_deserializer=nidigitalpattern__pb2.GetPatternPinListRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.GetPatternPinListResponse.SerializeToString,
            ),
            'GetPatternName': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPatternName,
                    request_deserializer=nidigitalpattern__pb2.GetPatternNameRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.GetPatternNameResponse.SerializeToString,
            ),
            'BurstPattern': grpc.unary_unary_rpc_method_handler(
                    servicer.BurstPattern,
                    request_deserializer=nidigitalpattern__pb2.BurstPatternRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.BurstPatternResponse.SerializeToString,
            ),
            'BurstPatternSynchronized': grpc.unary_unary_rpc_method_handler(
                    servicer.BurstPatternSynchronized,
                    request_deserializer=nidigitalpattern__pb2.BurstPatternSynchronizedRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.BurstPatternSynchronizedResponse.SerializeToString,
            ),
            'Commit': grpc.unary_unary_rpc_method_handler(
                    servicer.Commit,
                    request_deserializer=nidigitalpattern__pb2.CommitRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.CommitResponse.SerializeToString,
            ),
            'Initiate': grpc.unary_unary_rpc_method_handler(
                    servicer.Initiate,
                    request_deserializer=nidigitalpattern__pb2.InitiateRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.InitiateResponse.SerializeToString,
            ),
            'IsDone': grpc.unary_unary_rpc_method_handler(
                    servicer.IsDone,
                    request_deserializer=nidigitalpattern__pb2.IsDoneRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.IsDoneResponse.SerializeToString,
            ),
            'WaitUntilDone': grpc.unary_unary_rpc_method_handler(
                    servicer.WaitUntilDone,
                    request_deserializer=nidigitalpattern__pb2.WaitUntilDoneRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.WaitUntilDoneResponse.SerializeToString,
            ),
            'Abort': grpc.unary_unary_rpc_method_handler(
                    servicer.Abort,
                    request_deserializer=nidigitalpattern__pb2.AbortRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.AbortResponse.SerializeToString,
            ),
            'AbortKeepAlive': grpc.unary_unary_rpc_method_handler(
                    servicer.AbortKeepAlive,
                    request_deserializer=nidigitalpattern__pb2.AbortKeepAliveRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.AbortKeepAliveResponse.SerializeToString,
            ),
            'ConfigurePatternLabelHistoryRAMTrigger': grpc.unary_unary_rpc_method_handler(
                    servicer.ConfigurePatternLabelHistoryRAMTrigger,
                    request_deserializer=nidigitalpattern__pb2.ConfigurePatternLabelHistoryRAMTriggerRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.ConfigurePatternLabelHistoryRAMTriggerResponse.SerializeToString,
            ),
            'ConfigureCycleNumberHistoryRAMTrigger': grpc.unary_unary_rpc_method_handler(
                    servicer.ConfigureCycleNumberHistoryRAMTrigger,
                    request_deserializer=nidigitalpattern__pb2.ConfigureCycleNumberHistoryRAMTriggerRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.ConfigureCycleNumberHistoryRAMTriggerResponse.SerializeToString,
            ),
            'ConfigureFirstFailureHistoryRAMTrigger': grpc.unary_unary_rpc_method_handler(
                    servicer.ConfigureFirstFailureHistoryRAMTrigger,
                    request_deserializer=nidigitalpattern__pb2.ConfigureFirstFailureHistoryRAMTriggerRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.ConfigureFirstFailureHistoryRAMTriggerResponse.SerializeToString,
            ),
            'ConfigureHistoryRAMCyclesToAcquire': grpc.unary_unary_rpc_method_handler(
                    servicer.ConfigureHistoryRAMCyclesToAcquire,
                    request_deserializer=nidigitalpattern__pb2.ConfigureHistoryRAMCyclesToAcquireRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.ConfigureHistoryRAMCyclesToAcquireResponse.SerializeToString,
            ),
            'GetHistoryRAMSampleCount': grpc.unary_unary_rpc_method_handler(
                    servicer.GetHistoryRAMSampleCount,
                    request_deserializer=nidigitalpattern__pb2.GetHistoryRAMSampleCountRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.GetHistoryRAMSampleCountResponse.SerializeToString,
            ),
            'FetchHistoryRAMCycleInformation': grpc.unary_unary_rpc_method_handler(
                    servicer.FetchHistoryRAMCycleInformation,
                    request_deserializer=nidigitalpattern__pb2.FetchHistoryRAMCycleInformationRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.FetchHistoryRAMCycleInformationResponse.SerializeToString,
            ),
            'FetchHistoryRAMCyclePinData': grpc.unary_unary_rpc_method_handler(
                    servicer.FetchHistoryRAMCyclePinData,
                    request_deserializer=nidigitalpattern__pb2.FetchHistoryRAMCyclePinDataRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.FetchHistoryRAMCyclePinDataResponse.SerializeToString,
            ),
            'FetchHistoryRAMScanCycleNumber': grpc.unary_unary_rpc_method_handler(
                    servicer.FetchHistoryRAMScanCycleNumber,
                    request_deserializer=nidigitalpattern__pb2.FetchHistoryRAMScanCycleNumberRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.FetchHistoryRAMScanCycleNumberResponse.SerializeToString,
            ),
            'CreateSourceWaveformParallel': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateSourceWaveformParallel,
                    request_deserializer=nidigitalpattern__pb2.CreateSourceWaveformParallelRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.CreateSourceWaveformParallelResponse.SerializeToString,
            ),
            'CreateSourceWaveformSerial': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateSourceWaveformSerial,
                    request_deserializer=nidigitalpattern__pb2.CreateSourceWaveformSerialRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.CreateSourceWaveformSerialResponse.SerializeToString,
            ),
            'CreateSourceWaveformFromFileTDMS': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateSourceWaveformFromFileTDMS,
                    request_deserializer=nidigitalpattern__pb2.CreateSourceWaveformFromFileTDMSRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.CreateSourceWaveformFromFileTDMSResponse.SerializeToString,
            ),
            'WriteSourceWaveformBroadcastU32': grpc.unary_unary_rpc_method_handler(
                    servicer.WriteSourceWaveformBroadcastU32,
                    request_deserializer=nidigitalpattern__pb2.WriteSourceWaveformBroadcastU32Request.FromString,
                    response_serializer=nidigitalpattern__pb2.WriteSourceWaveformBroadcastU32Response.SerializeToString,
            ),
            'WriteSourceWaveformSiteUniqueU32': grpc.unary_unary_rpc_method_handler(
                    servicer.WriteSourceWaveformSiteUniqueU32,
                    request_deserializer=nidigitalpattern__pb2.WriteSourceWaveformSiteUniqueU32Request.FromString,
                    response_serializer=nidigitalpattern__pb2.WriteSourceWaveformSiteUniqueU32Response.SerializeToString,
            ),
            'WriteSourceWaveformDataFromFileTDMS': grpc.unary_unary_rpc_method_handler(
                    servicer.WriteSourceWaveformDataFromFileTDMS,
                    request_deserializer=nidigitalpattern__pb2.WriteSourceWaveformDataFromFileTDMSRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.WriteSourceWaveformDataFromFileTDMSResponse.SerializeToString,
            ),
            'CreateCaptureWaveformParallel': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateCaptureWaveformParallel,
                    request_deserializer=nidigitalpattern__pb2.CreateCaptureWaveformParallelRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.CreateCaptureWaveformParallelResponse.SerializeToString,
            ),
            'CreateCaptureWaveformSerial': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateCaptureWaveformSerial,
                    request_deserializer=nidigitalpattern__pb2.CreateCaptureWaveformSerialRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.CreateCaptureWaveformSerialResponse.SerializeToString,
            ),
            'CreateCaptureWaveformFromFileDigicapture': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateCaptureWaveformFromFileDigicapture,
                    request_deserializer=nidigitalpattern__pb2.CreateCaptureWaveformFromFileDigicaptureRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.CreateCaptureWaveformFromFileDigicaptureResponse.SerializeToString,
            ),
            'FetchCaptureWaveformU32': grpc.unary_unary_rpc_method_handler(
                    servicer.FetchCaptureWaveformU32,
                    request_deserializer=nidigitalpattern__pb2.FetchCaptureWaveformU32Request.FromString,
                    response_serializer=nidigitalpattern__pb2.FetchCaptureWaveformU32Response.SerializeToString,
            ),
            'ExportSignal': grpc.unary_unary_rpc_method_handler(
                    servicer.ExportSignal,
                    request_deserializer=nidigitalpattern__pb2.ExportSignalRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.ExportSignalResponse.SerializeToString,
            ),
            'ConfigureDigitalEdgeStartTrigger': grpc.unary_unary_rpc_method_handler(
                    servicer.ConfigureDigitalEdgeStartTrigger,
                    request_deserializer=nidigitalpattern__pb2.ConfigureDigitalEdgeStartTriggerRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.ConfigureDigitalEdgeStartTriggerResponse.SerializeToString,
            ),
            'ConfigureSoftwareEdgeStartTrigger': grpc.unary_unary_rpc_method_handler(
                    servicer.ConfigureSoftwareEdgeStartTrigger,
                    request_deserializer=nidigitalpattern__pb2.ConfigureSoftwareEdgeStartTriggerRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.ConfigureSoftwareEdgeStartTriggerResponse.SerializeToString,
            ),
            'DisableStartTrigger': grpc.unary_unary_rpc_method_handler(
                    servicer.DisableStartTrigger,
                    request_deserializer=nidigitalpattern__pb2.DisableStartTriggerRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.DisableStartTriggerResponse.SerializeToString,
            ),
            'ConfigureDigitalEdgeConditionalJumpTrigger': grpc.unary_unary_rpc_method_handler(
                    servicer.ConfigureDigitalEdgeConditionalJumpTrigger,
                    request_deserializer=nidigitalpattern__pb2.ConfigureDigitalEdgeConditionalJumpTriggerRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.ConfigureDigitalEdgeConditionalJumpTriggerResponse.SerializeToString,
            ),
            'ConfigureSoftwareEdgeConditionalJumpTrigger': grpc.unary_unary_rpc_method_handler(
                    servicer.ConfigureSoftwareEdgeConditionalJumpTrigger,
                    request_deserializer=nidigitalpattern__pb2.ConfigureSoftwareEdgeConditionalJumpTriggerRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.ConfigureSoftwareEdgeConditionalJumpTriggerResponse.SerializeToString,
            ),
            'DisableConditionalJumpTrigger': grpc.unary_unary_rpc_method_handler(
                    servicer.DisableConditionalJumpTrigger,
                    request_deserializer=nidigitalpattern__pb2.DisableConditionalJumpTriggerRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.DisableConditionalJumpTriggerResponse.SerializeToString,
            ),
            'SendSoftwareEdgeTrigger': grpc.unary_unary_rpc_method_handler(
                    servicer.SendSoftwareEdgeTrigger,
                    request_deserializer=nidigitalpattern__pb2.SendSoftwareEdgeTriggerRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.SendSoftwareEdgeTriggerResponse.SerializeToString,
            ),
            'WriteSequencerFlag': grpc.unary_unary_rpc_method_handler(
                    servicer.WriteSequencerFlag,
                    request_deserializer=nidigitalpattern__pb2.WriteSequencerFlagRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.WriteSequencerFlagResponse.SerializeToString,
            ),
            'WriteSequencerFlagSynchronized': grpc.unary_unary_rpc_method_handler(
                    servicer.WriteSequencerFlagSynchronized,
                    request_deserializer=nidigitalpattern__pb2.WriteSequencerFlagSynchronizedRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.WriteSequencerFlagSynchronizedResponse.SerializeToString,
            ),
            'ReadSequencerFlag': grpc.unary_unary_rpc_method_handler(
                    servicer.ReadSequencerFlag,
                    request_deserializer=nidigitalpattern__pb2.ReadSequencerFlagRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.ReadSequencerFlagResponse.SerializeToString,
            ),
            'WriteSequencerRegister': grpc.unary_unary_rpc_method_handler(
                    servicer.WriteSequencerRegister,
                    request_deserializer=nidigitalpattern__pb2.WriteSequencerRegisterRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.WriteSequencerRegisterResponse.SerializeToString,
            ),
            'ReadSequencerRegister': grpc.unary_unary_rpc_method_handler(
                    servicer.ReadSequencerRegister,
                    request_deserializer=nidigitalpattern__pb2.ReadSequencerRegisterRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.ReadSequencerRegisterResponse.SerializeToString,
            ),
            'EnableMatchFailCombination': grpc.unary_unary_rpc_method_handler(
                    servicer.EnableMatchFailCombination,
                    request_deserializer=nidigitalpattern__pb2.EnableMatchFailCombinationRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.EnableMatchFailCombinationResponse.SerializeToString,
            ),
            'GetSitePassFail': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSitePassFail,
                    request_deserializer=nidigitalpattern__pb2.GetSitePassFailRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.GetSitePassFailResponse.SerializeToString,
            ),
            'GetFailCount': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFailCount,
                    request_deserializer=nidigitalpattern__pb2.GetFailCountRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.GetFailCountResponse.SerializeToString,
            ),
            'GetPinResultsPinInformation': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPinResultsPinInformation,
                    request_deserializer=nidigitalpattern__pb2.GetPinResultsPinInformationRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.GetPinResultsPinInformationResponse.SerializeToString,
            ),
            'GetSiteResultsSiteNumbers': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSiteResultsSiteNumbers,
                    request_deserializer=nidigitalpattern__pb2.GetSiteResultsSiteNumbersRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.GetSiteResultsSiteNumbersResponse.SerializeToString,
            ),
            'FrequencyCounterConfigureMeasurementTime': grpc.unary_unary_rpc_method_handler(
                    servicer.FrequencyCounterConfigureMeasurementTime,
                    request_deserializer=nidigitalpattern__pb2.FrequencyCounterConfigureMeasurementTimeRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.FrequencyCounterConfigureMeasurementTimeResponse.SerializeToString,
            ),
            'FrequencyCounterConfigureMeasurementMode': grpc.unary_unary_rpc_method_handler(
                    servicer.FrequencyCounterConfigureMeasurementMode,
                    request_deserializer=nidigitalpattern__pb2.FrequencyCounterConfigureMeasurementModeRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.FrequencyCounterConfigureMeasurementModeResponse.SerializeToString,
            ),
            'FrequencyCounterMeasureFrequency': grpc.unary_unary_rpc_method_handler(
                    servicer.FrequencyCounterMeasureFrequency,
                    request_deserializer=nidigitalpattern__pb2.FrequencyCounterMeasureFrequencyRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.FrequencyCounterMeasureFrequencyResponse.SerializeToString,
            ),
            'GetChannelNameFromString': grpc.unary_unary_rpc_method_handler(
                    servicer.GetChannelNameFromString,
                    request_deserializer=nidigitalpattern__pb2.GetChannelNameFromStringRequest.FromString,
                    response_serializer=nidigitalpattern__pb2.GetChannelNameFromStringResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'nidigitalpattern_grpc.NiDigital', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('nidigitalpattern_grpc.NiDigital', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class NiDigital(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Init(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/Init',
            nidigitalpattern__pb2.InitRequest.SerializeToString,
            nidigitalpattern__pb2.InitResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def InitWithOptions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/InitWithOptions',
            nidigitalpattern__pb2.InitWithOptionsRequest.SerializeToString,
            nidigitalpattern__pb2.InitWithOptionsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Close(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/Close',
            nidigitalpattern__pb2.CloseRequest.SerializeToString,
            nidigitalpattern__pb2.CloseResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Reset(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/Reset',
            nidigitalpattern__pb2.ResetRequest.SerializeToString,
            nidigitalpattern__pb2.ResetResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ResetDevice(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/ResetDevice',
            nidigitalpattern__pb2.ResetDeviceRequest.SerializeToString,
            nidigitalpattern__pb2.ResetDeviceResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SelfTest(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/SelfTest',
            nidigitalpattern__pb2.SelfTestRequest.SerializeToString,
            nidigitalpattern__pb2.SelfTestResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetError(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/GetError',
            nidigitalpattern__pb2.GetErrorRequest.SerializeToString,
            nidigitalpattern__pb2.GetErrorResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ClearError(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/ClearError',
            nidigitalpattern__pb2.ClearErrorRequest.SerializeToString,
            nidigitalpattern__pb2.ClearErrorResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ErrorMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/ErrorMessage',
            nidigitalpattern__pb2.ErrorMessageRequest.SerializeToString,
            nidigitalpattern__pb2.ErrorMessageResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SelfCalibrate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/SelfCalibrate',
            nidigitalpattern__pb2.SelfCalibrateRequest.SerializeToString,
            nidigitalpattern__pb2.SelfCalibrateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetAttributeViInt32(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/GetAttributeViInt32',
            nidigitalpattern__pb2.GetAttributeViInt32Request.SerializeToString,
            nidigitalpattern__pb2.GetAttributeViInt32Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetAttributeViInt64(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/GetAttributeViInt64',
            nidigitalpattern__pb2.GetAttributeViInt64Request.SerializeToString,
            nidigitalpattern__pb2.GetAttributeViInt64Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetAttributeViReal64(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/GetAttributeViReal64',
            nidigitalpattern__pb2.GetAttributeViReal64Request.SerializeToString,
            nidigitalpattern__pb2.GetAttributeViReal64Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetAttributeViString(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/GetAttributeViString',
            nidigitalpattern__pb2.GetAttributeViStringRequest.SerializeToString,
            nidigitalpattern__pb2.GetAttributeViStringResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetAttributeViSession(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/GetAttributeViSession',
            nidigitalpattern__pb2.GetAttributeViSessionRequest.SerializeToString,
            nidigitalpattern__pb2.GetAttributeViSessionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetAttributeViBoolean(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/GetAttributeViBoolean',
            nidigitalpattern__pb2.GetAttributeViBooleanRequest.SerializeToString,
            nidigitalpattern__pb2.GetAttributeViBooleanResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetAttributeViInt32(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/SetAttributeViInt32',
            nidigitalpattern__pb2.SetAttributeViInt32Request.SerializeToString,
            nidigitalpattern__pb2.SetAttributeViInt32Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetAttributeViInt64(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/SetAttributeViInt64',
            nidigitalpattern__pb2.SetAttributeViInt64Request.SerializeToString,
            nidigitalpattern__pb2.SetAttributeViInt64Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetAttributeViReal64(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/SetAttributeViReal64',
            nidigitalpattern__pb2.SetAttributeViReal64Request.SerializeToString,
            nidigitalpattern__pb2.SetAttributeViReal64Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetAttributeViString(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/SetAttributeViString',
            nidigitalpattern__pb2.SetAttributeViStringRequest.SerializeToString,
            nidigitalpattern__pb2.SetAttributeViStringResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetAttributeViSession(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/SetAttributeViSession',
            nidigitalpattern__pb2.SetAttributeViSessionRequest.SerializeToString,
            nidigitalpattern__pb2.SetAttributeViSessionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetAttributeViBoolean(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/SetAttributeViBoolean',
            nidigitalpattern__pb2.SetAttributeViBooleanRequest.SerializeToString,
            nidigitalpattern__pb2.SetAttributeViBooleanResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ResetAttribute(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/ResetAttribute',
            nidigitalpattern__pb2.ResetAttributeRequest.SerializeToString,
            nidigitalpattern__pb2.ResetAttributeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def LoadPinMap(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/LoadPinMap',
            nidigitalpattern__pb2.LoadPinMapRequest.SerializeToString,
            nidigitalpattern__pb2.LoadPinMapResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def EnableSites(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/EnableSites',
            nidigitalpattern__pb2.EnableSitesRequest.SerializeToString,
            nidigitalpattern__pb2.EnableSitesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DisableSites(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/DisableSites',
            nidigitalpattern__pb2.DisableSitesRequest.SerializeToString,
            nidigitalpattern__pb2.DisableSitesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def IsSiteEnabled(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/IsSiteEnabled',
            nidigitalpattern__pb2.IsSiteEnabledRequest.SerializeToString,
            nidigitalpattern__pb2.IsSiteEnabledResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreatePinMap(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/CreatePinMap',
            nidigitalpattern__pb2.CreatePinMapRequest.SerializeToString,
            nidigitalpattern__pb2.CreatePinMapResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreatePinGroup(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/CreatePinGroup',
            nidigitalpattern__pb2.CreatePinGroupRequest.SerializeToString,
            nidigitalpattern__pb2.CreatePinGroupResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateChannelMap(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/CreateChannelMap',
            nidigitalpattern__pb2.CreateChannelMapRequest.SerializeToString,
            nidigitalpattern__pb2.CreateChannelMapResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def MapPinToChannel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/MapPinToChannel',
            nidigitalpattern__pb2.MapPinToChannelRequest.SerializeToString,
            nidigitalpattern__pb2.MapPinToChannelResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def EndChannelMap(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/EndChannelMap',
            nidigitalpattern__pb2.EndChannelMapRequest.SerializeToString,
            nidigitalpattern__pb2.EndChannelMapResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetPinName(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/GetPinName',
            nidigitalpattern__pb2.GetPinNameRequest.SerializeToString,
            nidigitalpattern__pb2.GetPinNameResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetChannelName(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/GetChannelName',
            nidigitalpattern__pb2.GetChannelNameRequest.SerializeToString,
            nidigitalpattern__pb2.GetChannelNameResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SelectFunction(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/SelectFunction',
            nidigitalpattern__pb2.SelectFunctionRequest.SerializeToString,
            nidigitalpattern__pb2.SelectFunctionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ReadStatic(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/ReadStatic',
            nidigitalpattern__pb2.ReadStaticRequest.SerializeToString,
            nidigitalpattern__pb2.ReadStaticResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def WriteStatic(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/WriteStatic',
            nidigitalpattern__pb2.WriteStaticRequest.SerializeToString,
            nidigitalpattern__pb2.WriteStaticResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ClockGeneratorGenerateClock(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/ClockGeneratorGenerateClock',
            nidigitalpattern__pb2.ClockGeneratorGenerateClockRequest.SerializeToString,
            nidigitalpattern__pb2.ClockGeneratorGenerateClockResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ClockGeneratorInitiate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/ClockGeneratorInitiate',
            nidigitalpattern__pb2.ClockGeneratorInitiateRequest.SerializeToString,
            nidigitalpattern__pb2.ClockGeneratorInitiateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ClockGeneratorAbort(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/ClockGeneratorAbort',
            nidigitalpattern__pb2.ClockGeneratorAbortRequest.SerializeToString,
            nidigitalpattern__pb2.ClockGeneratorAbortResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def LoadSpecifications(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/LoadSpecifications',
            nidigitalpattern__pb2.LoadSpecificationsRequest.SerializeToString,
            nidigitalpattern__pb2.LoadSpecificationsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UnloadSpecifications(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/UnloadSpecifications',
            nidigitalpattern__pb2.UnloadSpecificationsRequest.SerializeToString,
            nidigitalpattern__pb2.UnloadSpecificationsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def LoadLevels(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/LoadLevels',
            nidigitalpattern__pb2.LoadLevelsRequest.SerializeToString,
            nidigitalpattern__pb2.LoadLevelsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def LoadTiming(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/LoadTiming',
            nidigitalpattern__pb2.LoadTimingRequest.SerializeToString,
            nidigitalpattern__pb2.LoadTimingResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ApplyLevelsAndTiming(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/ApplyLevelsAndTiming',
            nidigitalpattern__pb2.ApplyLevelsAndTimingRequest.SerializeToString,
            nidigitalpattern__pb2.ApplyLevelsAndTimingResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ConfigureVoltageLevels(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/ConfigureVoltageLevels',
            nidigitalpattern__pb2.ConfigureVoltageLevelsRequest.SerializeToString,
            nidigitalpattern__pb2.ConfigureVoltageLevelsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ConfigureActiveLoadLevels(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/ConfigureActiveLoadLevels',
            nidigitalpattern__pb2.ConfigureActiveLoadLevelsRequest.SerializeToString,
            nidigitalpattern__pb2.ConfigureActiveLoadLevelsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ConfigureTerminationMode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/ConfigureTerminationMode',
            nidigitalpattern__pb2.ConfigureTerminationModeRequest.SerializeToString,
            nidigitalpattern__pb2.ConfigureTerminationModeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateTimeSet(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/CreateTimeSet',
            nidigitalpattern__pb2.CreateTimeSetRequest.SerializeToString,
            nidigitalpattern__pb2.CreateTimeSetResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ConfigureTimeSetPeriod(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/ConfigureTimeSetPeriod',
            nidigitalpattern__pb2.ConfigureTimeSetPeriodRequest.SerializeToString,
            nidigitalpattern__pb2.ConfigureTimeSetPeriodResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ConfigureTimeSetDriveEdges(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/ConfigureTimeSetDriveEdges',
            nidigitalpattern__pb2.ConfigureTimeSetDriveEdgesRequest.SerializeToString,
            nidigitalpattern__pb2.ConfigureTimeSetDriveEdgesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ConfigureTimeSetCompareEdgesStrobe(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/ConfigureTimeSetCompareEdgesStrobe',
            nidigitalpattern__pb2.ConfigureTimeSetCompareEdgesStrobeRequest.SerializeToString,
            nidigitalpattern__pb2.ConfigureTimeSetCompareEdgesStrobeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ConfigureTimeSetDriveFormat(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/ConfigureTimeSetDriveFormat',
            nidigitalpattern__pb2.ConfigureTimeSetDriveFormatRequest.SerializeToString,
            nidigitalpattern__pb2.ConfigureTimeSetDriveFormatResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteAllTimeSets(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/DeleteAllTimeSets',
            nidigitalpattern__pb2.DeleteAllTimeSetsRequest.SerializeToString,
            nidigitalpattern__pb2.DeleteAllTimeSetsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ConfigureTimeSetEdgeMultiplier(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/ConfigureTimeSetEdgeMultiplier',
            nidigitalpattern__pb2.ConfigureTimeSetEdgeMultiplierRequest.SerializeToString,
            nidigitalpattern__pb2.ConfigureTimeSetEdgeMultiplierResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ConfigureTimeSetDriveEdges2x(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/ConfigureTimeSetDriveEdges2x',
            nidigitalpattern__pb2.ConfigureTimeSetDriveEdges2xRequest.SerializeToString,
            nidigitalpattern__pb2.ConfigureTimeSetDriveEdges2xResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ConfigureTimeSetCompareEdgesStrobe2x(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/ConfigureTimeSetCompareEdgesStrobe2x',
            nidigitalpattern__pb2.ConfigureTimeSetCompareEdgesStrobe2xRequest.SerializeToString,
            nidigitalpattern__pb2.ConfigureTimeSetCompareEdgesStrobe2xResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ConfigureTimeSetEdge(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/ConfigureTimeSetEdge',
            nidigitalpattern__pb2.ConfigureTimeSetEdgeRequest.SerializeToString,
            nidigitalpattern__pb2.ConfigureTimeSetEdgeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetTimeSetPeriod(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/GetTimeSetPeriod',
            nidigitalpattern__pb2.GetTimeSetPeriodRequest.SerializeToString,
            nidigitalpattern__pb2.GetTimeSetPeriodResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetTimeSetEdge(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/GetTimeSetEdge',
            nidigitalpattern__pb2.GetTimeSetEdgeRequest.SerializeToString,
            nidigitalpattern__pb2.GetTimeSetEdgeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetTimeSetEdgeMultiplier(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/GetTimeSetEdgeMultiplier',
            nidigitalpattern__pb2.GetTimeSetEdgeMultiplierRequest.SerializeToString,
            nidigitalpattern__pb2.GetTimeSetEdgeMultiplierResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetTimeSetDriveFormat(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/GetTimeSetDriveFormat',
            nidigitalpattern__pb2.GetTimeSetDriveFormatRequest.SerializeToString,
            nidigitalpattern__pb2.GetTimeSetDriveFormatResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetTimeSetName(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/GetTimeSetName',
            nidigitalpattern__pb2.GetTimeSetNameRequest.SerializeToString,
            nidigitalpattern__pb2.GetTimeSetNameResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def TDR(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/TDR',
            nidigitalpattern__pb2.TDRRequest.SerializeToString,
            nidigitalpattern__pb2.TDRResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ApplyTDROffsets(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/ApplyTDROffsets',
            nidigitalpattern__pb2.ApplyTDROffsetsRequest.SerializeToString,
            nidigitalpattern__pb2.ApplyTDROffsetsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def PPMUConfigureOutputFunction(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/PPMUConfigureOutputFunction',
            nidigitalpattern__pb2.PPMUConfigureOutputFunctionRequest.SerializeToString,
            nidigitalpattern__pb2.PPMUConfigureOutputFunctionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def PPMUConfigureApertureTime(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/PPMUConfigureApertureTime',
            nidigitalpattern__pb2.PPMUConfigureApertureTimeRequest.SerializeToString,
            nidigitalpattern__pb2.PPMUConfigureApertureTimeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def PPMUConfigureVoltageLevel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/PPMUConfigureVoltageLevel',
            nidigitalpattern__pb2.PPMUConfigureVoltageLevelRequest.SerializeToString,
            nidigitalpattern__pb2.PPMUConfigureVoltageLevelResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def PPMUConfigureCurrentLimit(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/PPMUConfigureCurrentLimit',
            nidigitalpattern__pb2.PPMUConfigureCurrentLimitRequest.SerializeToString,
            nidigitalpattern__pb2.PPMUConfigureCurrentLimitResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def PPMUConfigureCurrentLimitRange(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/PPMUConfigureCurrentLimitRange',
            nidigitalpattern__pb2.PPMUConfigureCurrentLimitRangeRequest.SerializeToString,
            nidigitalpattern__pb2.PPMUConfigureCurrentLimitRangeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def PPMUConfigureCurrentLevel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/PPMUConfigureCurrentLevel',
            nidigitalpattern__pb2.PPMUConfigureCurrentLevelRequest.SerializeToString,
            nidigitalpattern__pb2.PPMUConfigureCurrentLevelResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def PPMUConfigureCurrentLevelRange(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/PPMUConfigureCurrentLevelRange',
            nidigitalpattern__pb2.PPMUConfigureCurrentLevelRangeRequest.SerializeToString,
            nidigitalpattern__pb2.PPMUConfigureCurrentLevelRangeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def PPMUConfigureVoltageLimits(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/PPMUConfigureVoltageLimits',
            nidigitalpattern__pb2.PPMUConfigureVoltageLimitsRequest.SerializeToString,
            nidigitalpattern__pb2.PPMUConfigureVoltageLimitsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def PPMUSource(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/PPMUSource',
            nidigitalpattern__pb2.PPMUSourceRequest.SerializeToString,
            nidigitalpattern__pb2.PPMUSourceResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def PPMUMeasure(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/PPMUMeasure',
            nidigitalpattern__pb2.PPMUMeasureRequest.SerializeToString,
            nidigitalpattern__pb2.PPMUMeasureResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def LoadPattern(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/LoadPattern',
            nidigitalpattern__pb2.LoadPatternRequest.SerializeToString,
            nidigitalpattern__pb2.LoadPatternResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UnloadAllPatterns(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/UnloadAllPatterns',
            nidigitalpattern__pb2.UnloadAllPatternsRequest.SerializeToString,
            nidigitalpattern__pb2.UnloadAllPatternsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ConfigureStartLabel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/ConfigureStartLabel',
            nidigitalpattern__pb2.ConfigureStartLabelRequest.SerializeToString,
            nidigitalpattern__pb2.ConfigureStartLabelResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ConfigurePatternBurstSites(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/ConfigurePatternBurstSites',
            nidigitalpattern__pb2.ConfigurePatternBurstSitesRequest.SerializeToString,
            nidigitalpattern__pb2.ConfigurePatternBurstSitesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetPatternPinIndexes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/GetPatternPinIndexes',
            nidigitalpattern__pb2.GetPatternPinIndexesRequest.SerializeToString,
            nidigitalpattern__pb2.GetPatternPinIndexesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetPatternPinList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/GetPatternPinList',
            nidigitalpattern__pb2.GetPatternPinListRequest.SerializeToString,
            nidigitalpattern__pb2.GetPatternPinListResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetPatternName(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/GetPatternName',
            nidigitalpattern__pb2.GetPatternNameRequest.SerializeToString,
            nidigitalpattern__pb2.GetPatternNameResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def BurstPattern(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/BurstPattern',
            nidigitalpattern__pb2.BurstPatternRequest.SerializeToString,
            nidigitalpattern__pb2.BurstPatternResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def BurstPatternSynchronized(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/BurstPatternSynchronized',
            nidigitalpattern__pb2.BurstPatternSynchronizedRequest.SerializeToString,
            nidigitalpattern__pb2.BurstPatternSynchronizedResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Commit(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/Commit',
            nidigitalpattern__pb2.CommitRequest.SerializeToString,
            nidigitalpattern__pb2.CommitResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Initiate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/Initiate',
            nidigitalpattern__pb2.InitiateRequest.SerializeToString,
            nidigitalpattern__pb2.InitiateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def IsDone(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/IsDone',
            nidigitalpattern__pb2.IsDoneRequest.SerializeToString,
            nidigitalpattern__pb2.IsDoneResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def WaitUntilDone(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/WaitUntilDone',
            nidigitalpattern__pb2.WaitUntilDoneRequest.SerializeToString,
            nidigitalpattern__pb2.WaitUntilDoneResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Abort(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/Abort',
            nidigitalpattern__pb2.AbortRequest.SerializeToString,
            nidigitalpattern__pb2.AbortResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AbortKeepAlive(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/AbortKeepAlive',
            nidigitalpattern__pb2.AbortKeepAliveRequest.SerializeToString,
            nidigitalpattern__pb2.AbortKeepAliveResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ConfigurePatternLabelHistoryRAMTrigger(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/ConfigurePatternLabelHistoryRAMTrigger',
            nidigitalpattern__pb2.ConfigurePatternLabelHistoryRAMTriggerRequest.SerializeToString,
            nidigitalpattern__pb2.ConfigurePatternLabelHistoryRAMTriggerResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ConfigureCycleNumberHistoryRAMTrigger(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/ConfigureCycleNumberHistoryRAMTrigger',
            nidigitalpattern__pb2.ConfigureCycleNumberHistoryRAMTriggerRequest.SerializeToString,
            nidigitalpattern__pb2.ConfigureCycleNumberHistoryRAMTriggerResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ConfigureFirstFailureHistoryRAMTrigger(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/ConfigureFirstFailureHistoryRAMTrigger',
            nidigitalpattern__pb2.ConfigureFirstFailureHistoryRAMTriggerRequest.SerializeToString,
            nidigitalpattern__pb2.ConfigureFirstFailureHistoryRAMTriggerResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ConfigureHistoryRAMCyclesToAcquire(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/ConfigureHistoryRAMCyclesToAcquire',
            nidigitalpattern__pb2.ConfigureHistoryRAMCyclesToAcquireRequest.SerializeToString,
            nidigitalpattern__pb2.ConfigureHistoryRAMCyclesToAcquireResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetHistoryRAMSampleCount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/GetHistoryRAMSampleCount',
            nidigitalpattern__pb2.GetHistoryRAMSampleCountRequest.SerializeToString,
            nidigitalpattern__pb2.GetHistoryRAMSampleCountResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def FetchHistoryRAMCycleInformation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/FetchHistoryRAMCycleInformation',
            nidigitalpattern__pb2.FetchHistoryRAMCycleInformationRequest.SerializeToString,
            nidigitalpattern__pb2.FetchHistoryRAMCycleInformationResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def FetchHistoryRAMCyclePinData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/FetchHistoryRAMCyclePinData',
            nidigitalpattern__pb2.FetchHistoryRAMCyclePinDataRequest.SerializeToString,
            nidigitalpattern__pb2.FetchHistoryRAMCyclePinDataResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def FetchHistoryRAMScanCycleNumber(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/FetchHistoryRAMScanCycleNumber',
            nidigitalpattern__pb2.FetchHistoryRAMScanCycleNumberRequest.SerializeToString,
            nidigitalpattern__pb2.FetchHistoryRAMScanCycleNumberResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateSourceWaveformParallel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/CreateSourceWaveformParallel',
            nidigitalpattern__pb2.CreateSourceWaveformParallelRequest.SerializeToString,
            nidigitalpattern__pb2.CreateSourceWaveformParallelResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateSourceWaveformSerial(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/CreateSourceWaveformSerial',
            nidigitalpattern__pb2.CreateSourceWaveformSerialRequest.SerializeToString,
            nidigitalpattern__pb2.CreateSourceWaveformSerialResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateSourceWaveformFromFileTDMS(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/CreateSourceWaveformFromFileTDMS',
            nidigitalpattern__pb2.CreateSourceWaveformFromFileTDMSRequest.SerializeToString,
            nidigitalpattern__pb2.CreateSourceWaveformFromFileTDMSResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def WriteSourceWaveformBroadcastU32(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/WriteSourceWaveformBroadcastU32',
            nidigitalpattern__pb2.WriteSourceWaveformBroadcastU32Request.SerializeToString,
            nidigitalpattern__pb2.WriteSourceWaveformBroadcastU32Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def WriteSourceWaveformSiteUniqueU32(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/WriteSourceWaveformSiteUniqueU32',
            nidigitalpattern__pb2.WriteSourceWaveformSiteUniqueU32Request.SerializeToString,
            nidigitalpattern__pb2.WriteSourceWaveformSiteUniqueU32Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def WriteSourceWaveformDataFromFileTDMS(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/WriteSourceWaveformDataFromFileTDMS',
            nidigitalpattern__pb2.WriteSourceWaveformDataFromFileTDMSRequest.SerializeToString,
            nidigitalpattern__pb2.WriteSourceWaveformDataFromFileTDMSResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateCaptureWaveformParallel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/CreateCaptureWaveformParallel',
            nidigitalpattern__pb2.CreateCaptureWaveformParallelRequest.SerializeToString,
            nidigitalpattern__pb2.CreateCaptureWaveformParallelResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateCaptureWaveformSerial(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/CreateCaptureWaveformSerial',
            nidigitalpattern__pb2.CreateCaptureWaveformSerialRequest.SerializeToString,
            nidigitalpattern__pb2.CreateCaptureWaveformSerialResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateCaptureWaveformFromFileDigicapture(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/CreateCaptureWaveformFromFileDigicapture',
            nidigitalpattern__pb2.CreateCaptureWaveformFromFileDigicaptureRequest.SerializeToString,
            nidigitalpattern__pb2.CreateCaptureWaveformFromFileDigicaptureResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def FetchCaptureWaveformU32(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/FetchCaptureWaveformU32',
            nidigitalpattern__pb2.FetchCaptureWaveformU32Request.SerializeToString,
            nidigitalpattern__pb2.FetchCaptureWaveformU32Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ExportSignal(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/ExportSignal',
            nidigitalpattern__pb2.ExportSignalRequest.SerializeToString,
            nidigitalpattern__pb2.ExportSignalResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ConfigureDigitalEdgeStartTrigger(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/ConfigureDigitalEdgeStartTrigger',
            nidigitalpattern__pb2.ConfigureDigitalEdgeStartTriggerRequest.SerializeToString,
            nidigitalpattern__pb2.ConfigureDigitalEdgeStartTriggerResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ConfigureSoftwareEdgeStartTrigger(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/ConfigureSoftwareEdgeStartTrigger',
            nidigitalpattern__pb2.ConfigureSoftwareEdgeStartTriggerRequest.SerializeToString,
            nidigitalpattern__pb2.ConfigureSoftwareEdgeStartTriggerResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DisableStartTrigger(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/DisableStartTrigger',
            nidigitalpattern__pb2.DisableStartTriggerRequest.SerializeToString,
            nidigitalpattern__pb2.DisableStartTriggerResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ConfigureDigitalEdgeConditionalJumpTrigger(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/ConfigureDigitalEdgeConditionalJumpTrigger',
            nidigitalpattern__pb2.ConfigureDigitalEdgeConditionalJumpTriggerRequest.SerializeToString,
            nidigitalpattern__pb2.ConfigureDigitalEdgeConditionalJumpTriggerResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ConfigureSoftwareEdgeConditionalJumpTrigger(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/ConfigureSoftwareEdgeConditionalJumpTrigger',
            nidigitalpattern__pb2.ConfigureSoftwareEdgeConditionalJumpTriggerRequest.SerializeToString,
            nidigitalpattern__pb2.ConfigureSoftwareEdgeConditionalJumpTriggerResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DisableConditionalJumpTrigger(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/DisableConditionalJumpTrigger',
            nidigitalpattern__pb2.DisableConditionalJumpTriggerRequest.SerializeToString,
            nidigitalpattern__pb2.DisableConditionalJumpTriggerResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SendSoftwareEdgeTrigger(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/SendSoftwareEdgeTrigger',
            nidigitalpattern__pb2.SendSoftwareEdgeTriggerRequest.SerializeToString,
            nidigitalpattern__pb2.SendSoftwareEdgeTriggerResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def WriteSequencerFlag(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/WriteSequencerFlag',
            nidigitalpattern__pb2.WriteSequencerFlagRequest.SerializeToString,
            nidigitalpattern__pb2.WriteSequencerFlagResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def WriteSequencerFlagSynchronized(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/WriteSequencerFlagSynchronized',
            nidigitalpattern__pb2.WriteSequencerFlagSynchronizedRequest.SerializeToString,
            nidigitalpattern__pb2.WriteSequencerFlagSynchronizedResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ReadSequencerFlag(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/ReadSequencerFlag',
            nidigitalpattern__pb2.ReadSequencerFlagRequest.SerializeToString,
            nidigitalpattern__pb2.ReadSequencerFlagResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def WriteSequencerRegister(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/WriteSequencerRegister',
            nidigitalpattern__pb2.WriteSequencerRegisterRequest.SerializeToString,
            nidigitalpattern__pb2.WriteSequencerRegisterResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ReadSequencerRegister(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/ReadSequencerRegister',
            nidigitalpattern__pb2.ReadSequencerRegisterRequest.SerializeToString,
            nidigitalpattern__pb2.ReadSequencerRegisterResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def EnableMatchFailCombination(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/EnableMatchFailCombination',
            nidigitalpattern__pb2.EnableMatchFailCombinationRequest.SerializeToString,
            nidigitalpattern__pb2.EnableMatchFailCombinationResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetSitePassFail(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/GetSitePassFail',
            nidigitalpattern__pb2.GetSitePassFailRequest.SerializeToString,
            nidigitalpattern__pb2.GetSitePassFailResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetFailCount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/GetFailCount',
            nidigitalpattern__pb2.GetFailCountRequest.SerializeToString,
            nidigitalpattern__pb2.GetFailCountResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetPinResultsPinInformation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/GetPinResultsPinInformation',
            nidigitalpattern__pb2.GetPinResultsPinInformationRequest.SerializeToString,
            nidigitalpattern__pb2.GetPinResultsPinInformationResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetSiteResultsSiteNumbers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/GetSiteResultsSiteNumbers',
            nidigitalpattern__pb2.GetSiteResultsSiteNumbersRequest.SerializeToString,
            nidigitalpattern__pb2.GetSiteResultsSiteNumbersResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def FrequencyCounterConfigureMeasurementTime(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/FrequencyCounterConfigureMeasurementTime',
            nidigitalpattern__pb2.FrequencyCounterConfigureMeasurementTimeRequest.SerializeToString,
            nidigitalpattern__pb2.FrequencyCounterConfigureMeasurementTimeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def FrequencyCounterConfigureMeasurementMode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/FrequencyCounterConfigureMeasurementMode',
            nidigitalpattern__pb2.FrequencyCounterConfigureMeasurementModeRequest.SerializeToString,
            nidigitalpattern__pb2.FrequencyCounterConfigureMeasurementModeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def FrequencyCounterMeasureFrequency(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/FrequencyCounterMeasureFrequency',
            nidigitalpattern__pb2.FrequencyCounterMeasureFrequencyRequest.SerializeToString,
            nidigitalpattern__pb2.FrequencyCounterMeasureFrequencyResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetChannelNameFromString(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidigitalpattern_grpc.NiDigital/GetChannelNameFromString',
            nidigitalpattern__pb2.GetChannelNameFromStringRequest.SerializeToString,
            nidigitalpattern__pb2.GetChannelNameFromStringResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
