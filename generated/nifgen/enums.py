# This file was generated

from enum import Enum


class AnalogPath(Enum):
    NIFGEN_VAL_MAIN_ANALOG_PATH = 0
    '''
    Specifies the main path.
    '''
    NIFGEN_VAL_DIRECT_ANALOG_PATH = 1
    '''
    Specifies the direct path.
    '''
    NIFGEN_VAL_FIXED_LOW_GAIN_ANALOG_PATH = 2
    '''
    Specifies the main path with low gain amplifier.
    '''
    NIFGEN_VAL_FIXED_HIGH_GAIN_ANALOG_PATH = 3
    '''
    Specifies the main path with high gain amplifier.
    '''


class BusType(Enum):
    NIFGEN_VAL_BUS_INVALID = 0
    '''
    Indicates an invalid bus type.
    '''
    NIFGEN_VAL_BUS_AT = 1
    '''
    Indicates the signal generator is the AT bus type.
    '''
    NIFGEN_VAL_BUS_PCI = 2
    '''
    Indicates the signal generator is the PCI bus type.
    '''
    NIFGEN_VAL_BUS_PXI = 3
    '''
    Indicates the signal generator is the PXI bus type.
    '''
    NIFGEN_VAL_BUS_VXI = 4
    '''
    Indicates the signal generator is the VXI bus type.
    '''
    NIFGEN_VAL_BUS_PCMCIA = 5
    '''
    Indicates the signal generator is the PCMCIA bus type.
    '''
    NIFGEN_VAL_BUS_PXIE = 6
    '''
    Indicates the signal generator is the PXI Express bus type.
    '''


class CalADCInput(Enum):
    NIFGEN_VAL_ANALOG_OUTPUT = 0
    '''
    Specifies that the ADC measures the analog output.
    '''
    NIFGEN_VAL_INTERNAL_VOLTAGE_REFERENCE = 1
    '''
    Specifies that the ADC measures the internal voltage reference.
    '''
    NIFGEN_VAL_GROUND = 2
    '''
    Specifies that the ADC measures the ground voltage.
    '''
    NIFGEN_VAL_ANALOG_OUTPUT_DIFFERENTIAL = 3
    '''
    Specifies that the ADC measures the differential analog output.
    '''
    NIFGEN_VAL_ANALOG_OUTPUT_PLUS = 4
    '''
    Specifies that the ADC measures the positive differential analog output.
    '''
    NIFGEN_VAL_ANALOG_OUTPUT_MINUS = 5
    '''
    Specifies that the ADC measures the negative differential analog output.
    '''
    NIFGEN_VAL_ANALOG_OUTPUT_IDLE = 6
    '''
    Specifies that the ADC measures the idle analog output.
    '''


class ClockMode(Enum):
    NIFGEN_VAL_HIGH_RESOLUTION = 0
    '''
    **High resolution sampling—**\ Sample rate is generated by a high
    resolution clock source.
    '''
    NIFGEN_VAL_DIVIDE_DOWN = 1
    '''
    **Divide down sampling—**\ Sample rate is generated by dividing the
    source frequency.
    '''
    NIFGEN_VAL_AUTOMATIC = 2
    '''
    **Automatic Selection—**\ NI-FGEN selects between the divide-down and
    high-resolution modes.
    '''


class DataMarkerEventLevelPolarity(Enum):
    ACTIVE_HIGH = 101
    '''
    When the data bit is 1 (high), the Data Marker Event level is high.
    '''
    ACTIVE_LOW = 102
    '''
    When the data bit is 1 (high), the Data Marker Event level is low.
    '''


class DataProcessingMode(Enum):
    REAL = 0
    '''
    Specifies that the waveform data points are real numbers (I data).
    '''
    COMPLEX = 1
    '''
    Specifies that the waveform data points are complex numbers (I/Q data).
    '''


class DoneEventActiveLevel(Enum):
    ACTIVE_HIGH = 101
    '''
    When the operation is complete, the Done Event level is high.
    '''
    ACTIVE_LOW = 102
    '''
    When the operation is complete, the Done Event level is low.
    '''


class DoneEventDelayUnits(Enum):
    SAMPLE_CLOCK_PERIODS = 101
    '''
    The delay is specified in Sample Clock periods and then coerced up by
    NI-FGEN to the nearest Sample Clock period.
    '''
    SECONDS = 102
    '''
    The delay is specified in seconds and then coerced up by NI-FGEN to the
    nearest Sample Clock period.
    '''


class DoneEventOutputBehavior(Enum):
    PULSE = 101
    '''
    Triggers a pulse for a specified period of time.
    '''
    LEVEL = 102
    '''
    Changes to high or low while the event is active, depending on the
    active state you specify.
    '''


class DoneEventPulsePolarity(Enum):
    ACTIVE_HIGH = 101
    '''
    When the operation is done, the Done Event polarity is high.
    '''
    ACTIVE_LOW = 102
    '''
    When the operation is done, the Done Event polarity is low.
    '''


class DoneEventPulseWidthUnits(Enum):
    SAMPLE_CLOCK_PERIODS = 101
    '''
    Specifies the pulse width in Sample Clock periods.
    '''
    SECONDS = 102
    '''
    Specifies the pulse width in seconds.
    '''


class FilterType(Enum):
    FLAT = 0
    '''
    Applies a flat filter to the data with the passband value specified in
    the `Flat Filter Passband <pniFgen_FlatFilterPassband.html>`__ property.
    '''
    RAISED_COSINE = 1
    '''
    Applies a raised cosine filter to the data with the alpha value
    specified in the `Raised Cosine Filter
    Alpha <pniFgen_RaisedCosineFilterAlpha.html>`__ property.
    '''
    ROOT_RAISED_COSINE = 2
    '''
    Applies a root raised cosine filter to the data with the alpha value
    specified in the `Root Raised Cosine Filter
    Alpha <pniFgen_RootRaisedCosineFilterAlpha.html>`__ property.
    '''
    GAUSSIAN = 3
    '''
    Applies a Gaussian filter to the data with the BT value specified in the
    `Gaussian Filter BT <pniFgen_GaussianFilterBT.html>`__ property.
    '''
    CUSTOM = 4
    '''
    Applies a custom filter to the data. If Custom is selected, you must
    provide a set of FIR filter coefficients with the `niFgen Configure
    Custom FIR Filter
    Coefficients <javascript:LaunchMergedHelp('SigGenHelp.chm',%20'nifgenlv.chm',%20'niFgen_Configure_Custom_FIR_Filter_Coefficien.html')>`__
    VI.
    '''


class IdleBehavior(Enum):
    HOLD_LAST_VALUE = 400
    '''
    While in the Idle state, the output signal remains at the last voltage
    generated prior to entering the Idle state.
    '''
    JUMP_TO_VALUE = 401
    '''
    While in the Idle state, the output signal remains at the value
    configured in the `Idle Value <pniFgen_IdleValue.html>`__ property.
    '''


class MarkerEventDelayUnits(Enum):
    SAMPLE_CLOCK_PERIODS = 101
    '''
    The delay is specified in Sample Clock periods and then coerced up by
    NI-FGEN to the nearest Sample Clock period.
    '''
    SECONDS = 102
    '''
    The delay is specified in seconds and then coerced up by NI-FGEN to the
    nearest Sample Clock period.
    '''


class MarkerEventOutputBehavior(Enum):
    PULSE = 101
    '''
    Triggers a pulse for a specified period of time.
    '''
    TOGGLE = 103
    '''
    Changes to high or low while the event is active, depending on the
    active state you specify.
    '''


class MarkerEventPulsePolarity(Enum):
    ACTIVE_HIGH = 101
    '''
    The Marker Event level is high at the marker position.
    '''
    ACTIVE_LOW = 102
    '''
    The Marker Event level is low at the marker position.
    '''


class MarkerEventPulseWidthUnits(Enum):
    SAMPLE_CLOCK_PERIODS = 101
    '''
    Specifies the pulse width in Sample Clock periods.
    '''
    SECONDS = 102
    '''
    Specifies the pulse width in seconds.
    '''


class MarkerEventToggleInitialState(Enum):
    HIGH = 101
    '''
    Sets the initial state of the Marker Event to high.
    '''
    LOW = 102
    '''
    Sets the initial state of the Marker Event to low.
    '''


class OSPMode(Enum):
    IF = 0
    '''
    Specifies that the OSP block generates intermediate frequency (IF) data.
    '''
    BASEBAND = 1
    '''
    Specifies that the OSP block generates baseband data.
    '''


class OSPOverflowErrorReporting(Enum):
    ERROR = 0
    '''
    Specifies that NI-FGEN returns errors whenever an overflow has occurred
    in the OSP block.
    '''
    DISABLED = 2
    '''
    Specifies that NI-FGEN does not return errors when an overflow occurs in
    the OSP block.
    '''


class OperationMode(Enum):
    NIFGEN_VAL_OPERATE_CONTINUOUS = 0
    '''
    Continuous operation
    '''


class OutputMode(Enum):
    NIFGEN_VAL_OUTPUT_FUNC = 0
    '''
    **Standard Function mode—**\ Generates standard function waveforms such
    as sine, square, triangle, and so on.
    '''
    NIFGEN_VAL_OUTPUT_ARB = 1
    '''
    **Arbitrary Waveform mode—**\ Generates waveforms from
    user-created/provided waveform arrays of numeric data.
    '''
    NIFGEN_VAL_OUTPUT_SEQ = 2
    '''
    **Arbitrary Sequence mode—**\ Generates downloaded waveforms in an order
    your specify.
    '''
    NIFGEN_VAL_OUTPUT_FREQ_LIST = 101
    '''
    **Frequency List mode—**\ Generates a standard function using a list of
    frequencies you define.
    '''
    NIFGEN_VAL_OUTPUT_SCRIPT = 102
    '''
    **Script mode—**\ Allows you to use scripting to link and loop multiple
    waveforms in complex combinations.
    '''


class P2PAddressType(Enum):
    PHYSICAL = 0
    '''
    Specifies a physical memory address.
    '''
    VIRTUAL = 1
    '''
    Specifies a virtual memory address.
    '''


class ReadyForStartEventActiveLevel(Enum):
    ACTIVE_HIGH = 101
    '''
    When the operation is ready to start, the Ready for Start Event level is
    high.
    '''
    ACTIVE_LOW = 102
    '''
    When the operation is ready to start, the Ready for Start Event level is
    low.
    '''


class ReferenceClockSource(Enum):
    CLOCK_IN = 'ClkIn'
    '''
    Specifies that the CLK IN input signal from the front panel connector is
    used as the Reference Clock source.
    '''
    NONE = 'None'
    '''
    Specifies that a Reference Clock is not used.
    '''
    ONBOARD_REFERENCE_CLOCK = 'OnboardRefClk'
    '''
    Specifies that the onboard Reference Clock is used as the Reference
    Clock source.
    '''
    PXI_CLOCK = 'PXI_Clk'
    '''
    Specifies the PXI Clock is used as the Reference Clock source.
    '''
    RTSI_7 = 'RTSI7'
    '''
    Specifies that the RTSI line 7 is used as the Reference Clock source.
    '''


class SampleClockSource(Enum):
    CLOCK_IN = '"ClkIn"'
    '''
    Specifies that the signal at the CLK IN front panel connector is used as
    the Sample Clock source.
    '''
    DDC_CLOCK_IN = '"DDC_ClkIn"'
    '''
    Specifies that the Sample Clock from DDC connector is used as the Sample
    Clock source.
    '''
    ONBOARD_CLOCK = '"OnboardClock"'
    '''
    Specifies that the onboard clock is used as the Sample Clock source.
    '''
    PXI_STAR_LINE = '"PXI_Star"'
    '''
    Specifies that the PXI_STAR trigger line is used as the Sample Clock
    source.
    '''
    PXI_TRIGGER_LINE_0RTSI_0 = '"PXI_Trig0"'
    '''
    Specifies that the PXI or RTSI line 0 is used as the Sample Clock
    source.
    '''
    PXI_TRIGGER_LINE_1RTSI_1 = '"PXI_Trig1"'
    '''
    Specifies that the PXI or RTSI line 1 is used as the Sample Clock
    source.
    '''
    PXI_TRIGGER_LINE_2RTSI_2 = '"PXI_Trig2"'
    '''
    Specifies that the PXI or RTSI line 2 is used as the Sample Clock
    source.
    '''
    PXI_TRIGGER_LINE_3RTSI_3 = '"PXI_Trig3"'
    '''
    Specifies that the PXI or RTSI line 3 is used as the Sample Clock
    source.
    '''
    PXI_TRIGGER_LINE_4RTSI_4 = '"PXI_Trig4"'
    '''
    Specifies that the PXI or RTSI line 4 is used as the Sample Clock
    source.
    '''
    PXI_TRIGGER_LINE_5RTSI_5 = '"PXI_Trig5"'
    '''
    Specifies that the PXI or RTSI line 5 is used as the Sample Clock
    source.
    '''
    PXI_TRIGGER_LINE_6RTSI_6 = '"PXI_Trig6"'
    '''
    Specifies that the PXI or RTSI line 6 is used as the Sample Clock
    source.
    '''
    PXI_TRIGGER_LINE_7RTSI_7 = '"PXI_Trig7"'
    '''
    Specifies that the PXI or RTSI line 7 is used as the Sample Clock
    source.
    '''


class SampleClockTimebaseSource(Enum):
    CLOCK_IN = '"ClkIn"'
    '''
    Specifies that the external signal on the CLK IN front panel connector
    is used as the source.
    '''
    ONBOARD_CLOCK = '"OnboardClock"'
    '''
    Specifies that the onboard Sample Clock timebase is used as the source.
    '''


class ScriptTriggerDigitalEdgeEdge(Enum):
    RISING_EDGE = 101
    '''
    Occurs when the signal transitions from low level to high level.
    '''
    FALLING_EDGE = 102
    '''
    Occurs when the signal transitions from high level to low level.
    '''


class ScriptTriggerDigitalLevelActiveLevel(Enum):
    HIGH_LEVEL = 101
    '''
    The high level is the active level.
    '''
    LOW_LEVEL = 102
    '''
    The low level is the active level.
    '''


class ScriptTriggerType(Enum):
    NONE = 101
    '''
    No trigger is configured. Signal generation starts immediately.
    '''
    DIGITAL_EDGE = 102
    '''
    Trigger is asserted when a digital edge is detected.
    '''
    DIGITAL_LEVEL = 103
    '''
    Trigger is asserted when a digital level is detected.
    '''
    SOFTWARE_EDGE = 104
    '''
    Trigger is asserted when a software edge is detected.
    '''


class StartTriggerDigitalEdgeEdge(Enum):
    RISING_EDGE = 101
    '''
    Occurs when the signal transitions from low level to high level.
    '''
    FALLING_EDGE = 102
    '''
    Occurs when the signal transitions from high level to low level.
    '''


class StartTriggerType(Enum):
    NONE = 101
    '''
    No trigger is configured. Signal generation starts immediately.
    '''
    DIGITAL_EDGE = 102
    '''
    Operation begins when a digital edge is detected.
    '''
    SOFTWARE_EDGE = 104
    '''
    Operation begins when a software edge is detected.
    '''
    P2P_ENDPOINT_FULLNESS = 106
    '''
    Operation begins when the FIFO reaches the threshold specified in the
    `P2P Endpoint Fullness Start Trigger
    Level <pniFgen_P2PEndpointFullnessStartTriggerLevel.html>`__ property.
    '''


class StartedEventActiveLevel(Enum):
    ACTIVE_HIGH = 101
    '''
    When the operation has started, the Started Event level is high.
    '''
    ACTIVE_LOW = 102
    '''
    When the operation has started, the Started Event level is high.
    '''


class StartedEventDelayUnits(Enum):
    SAMPLE_CLOCK_PERIODS = 101
    '''
    The delay is specified in Sample Clock periods and then coerced up by
    NI-FGEN to the nearest Sample Clock period.
    '''
    SECONDS = 102
    '''
    The delay is specified in seconds and then coerced up by NI-FGEN to the
    nearest Sample Clock period.
    '''


class StartedEventOutputBehavior(Enum):
    PULSE = 101
    '''
    Triggers a pulse for a specified period of time.
    '''
    LEVEL = 102
    '''
    Shifts high or low while the event is active, depending on the active
    state you specify.
    '''


class StartedEventPulsePolarity(Enum):
    ACTIVE_HIGH = 101
    '''
    When the operation has started, the Started Event level is high.
    '''
    ACTIVE_LOW = 102
    '''
    When the operation has started, the Started Event level is low.
    '''


class StartedEventPulseWidthUnits(Enum):
    SAMPLE_CLOCK_PERIODS = 101
    '''
    Specifies the pulse width in Sample Clock periods.
    '''
    SECONDS = 102
    '''
    Specifies the pulse width in seconds.
    '''


class SynchronizationSource(Enum):
    NIFGEN_VAL_TTL0 = 111
    '''
    PXI TRIG0 or VXI TTL0
    '''
    NIFGEN_VAL_TTL1 = 112
    '''
    PXI TRIG1 or VXI TTL1
    '''
    NIFGEN_VAL_TTL2 = 113
    '''
    PXI TRIG2 or VXI TTL2
    '''
    NIFGEN_VAL_TTL3 = 114
    '''
    PXI TRIG3 or VXI TTL3
    '''
    NIFGEN_VAL_TTL4 = 115
    '''
    PXI TRIG4 or VXI TTL4
    '''
    NIFGEN_VAL_TTL5 = 116
    '''
    PXI TRIG5 or VXI TTL5
    '''
    NIFGEN_VAL_TTL6 = 117
    '''
    PXI TRIG6 or VXI TTL6
    '''
    NIFGEN_VAL_RTSI_0 = 141
    '''
    RTSI line 0
    '''
    NIFGEN_VAL_RTSI_1 = 142
    '''
    RTSI line 1
    '''
    NIFGEN_VAL_RTSI_2 = 143
    '''
    RTSI line 2
    '''
    NIFGEN_VAL_RTSI_3 = 144
    '''
    RTSI line 3
    '''
    NIFGEN_VAL_RTSI_4 = 145
    '''
    RTSI line 4
    '''
    NIFGEN_VAL_RTSI_5 = 146
    '''
    RTSI line 5
    '''
    NIFGEN_VAL_RTSI_6 = 147
    '''
    RTSI line 6
    '''
    NIFGEN_VAL_NONE = 1000
    '''
    No synchronization source is used.
    '''


class TerminalConfiguration(Enum):
    SINGLE_ENDED = 300
    '''
    Specifies single-ended operation.
    '''
    DIFFERENTIAL = 301
    '''
    Specifies differential operation.
    '''


class TriggerMode(Enum):
    NIFGEN_VAL_SINGLE = 1
    '''
    Specifies that the signal generator operates in Single Trigger mode.
    '''
    NIFGEN_VAL_CONTINUOUS = 2
    '''
    Specifies that the signal generator operates in Continuous Trigger mode.
    '''
    NIFGEN_VAL_STEPPED = 3
    '''
    Specifies that the signal generator operates in Stepped Trigger mode.
    '''
    NIFGEN_VAL_BURST = 4
    '''
    Specifies that the signal generator operates in Burst Trigger mode.
    '''


class TriggerSource(Enum):
    NIFGEN_VAL_IMMEDIATE = 0
    '''
    The signal generator does not wait for a trigger of any kind.
    '''
    NIFGEN_VAL_EXTERNAL = 1
    '''
    The signal generator waits for a trigger on the external trigger input.
    '''
    NIFGEN_VAL_SOFTWARE_TRIG = 2
    '''
    Specifies that the signal generator waits until you call the `niFgen
    Send Software Trigger
    VI <javascript:LaunchMergedHelp('SigGenHelp.chm',%20'nifgenlv.chm',%20'niFgen_Send_Software_Edge_Trigger.html')>`__.
    '''
    NIFGEN_VAL_TTL0 = 111
    '''
    Specifies that the PXI_TRIG0 or VXI_TTL0 line is used as the trigger
    source.
    '''
    NIFGEN_VAL_TTL1 = 112
    '''
    Specifies that the PXI_TRIG1 or VXI_TTL1 line is used as the trigger
    source.
    '''
    NIFGEN_VAL_TTL2 = 113
    '''
    Specifies that the PXI_TRIG2 or VXI_TTL2 line is used as the trigger
    source.
    '''
    NIFGEN_VAL_TTL3 = 114
    '''
    Specifies that the PXI_TRIG3 or VXI_TTL3 line is used as the trigger
    source.
    '''
    NIFGEN_VAL_TTL4 = 115
    '''
    Specifies that the PXI_TRIG4 or VXI_TTL4 line is used as the trigger
    source.
    '''
    NIFGEN_VAL_TTL5 = 116
    '''
    Specifies that the PXI_TRIG5 or VXI_TTL5 line is used as the trigger
    source.
    '''
    NIFGEN_VAL_TTL6 = 117
    '''
    Specifies that the PXI_TRIG6 or VXI_TTL6 line is used as the trigger
    source.
    '''
    NIFGEN_VAL_PXI_STAR = 131
    '''
    Specifies that the PXI star trigger line is used as the trigger source.
    '''
    NIFGEN_VAL_RTSI_0 = 141
    '''
    Specifies that RTSI line 0 is used as the trigger source.
    '''
    NIFGEN_VAL_RTSI_1 = 142
    '''
    Specifies that RTSI line 1 is used as the trigger source.
    '''
    NIFGEN_VAL_RTSI_2 = 143
    '''
    Specifies that RTSI line 2 is used as the trigger source.
    '''
    NIFGEN_VAL_RTSI_3 = 144
    '''
    Specifies that RTSI line 3 is used as the trigger source.
    '''
    NIFGEN_VAL_RTSI_4 = 145
    '''
    Specifies that RTSI line 4 is used as the trigger source.
    '''
    NIFGEN_VAL_RTSI_5 = 146
    '''
    Specifies that RTSI line 5 is used as the trigger source.
    '''
    NIFGEN_VAL_RTSI_6 = 147
    '''
    Specifies that RTSI line 6 is used as the trigger source.
    '''
    NIFGEN_VAL_RTSI_7 = 1010
    '''
    Specifies that RTSI line 7 is used as the trigger source.
    '''
    NIFGEN_VAL_PFI_0 = 1011
    '''
    Specifies that PFI 0 is used as the trigger source.
    '''
    NIFGEN_VAL_PFI_1 = 1012
    '''
    Specifies that PFI 1 is used as the trigger source.
    '''
    NIFGEN_VAL_PFI_2 = 1013
    '''
    Specifies that PFI 2 is used as the trigger source.
    '''
    NIFGEN_VAL_PFI_3 = 1014
    '''
    Specifies that PFI 3 is used as the trigger source.
    '''
    NIFGEN_VAL_OTHER_TERMINAL = 1018
    '''
    Specifies that another terminal is used.
    '''


class UpdateClockSource(Enum):
    NIFGEN_VAL_INTERNAL = 0
    '''
    Internal update clock
    '''
    NIFGEN_VAL_EXTERNAL = 1
    '''
    External update clock given on the IO connector
    '''
    NIFGEN_VAL_PXI_STAR = 131
    '''
    (PXI only) PXI star trigger line. This choice is valid only in PXI
    chassis slots 3 through 15.
    '''
    NIFGEN_VAL_RTSI_0 = 141
    '''
    RTSI line 0
    '''
    NIFGEN_VAL_RTSI_1 = 142
    '''
    RTSI line 1
    '''
    NIFGEN_VAL_RTSI_2 = 143
    '''
    RTSI line 2
    '''
    NIFGEN_VAL_RTSI_3 = 144
    '''
    RTSI line 3
    '''
    NIFGEN_VAL_RTSI_4 = 145
    '''
    RTSI line 4
    '''
    NIFGEN_VAL_RTSI_5 = 146
    '''
    RTSI line 5
    '''
    NIFGEN_VAL_RTSI_6 = 147
    '''
    RTSI line 6
    '''
    NIFGEN_VAL_RTSI_7 = 1010
    '''
    (PCI only) RTSI line 7
    '''
    NIFGEN_VAL_OTHER_TERMINAL = 1018
    '''
    Uses another device terminal.
    '''
    NIFGEN_VAL_CLK_IN = 1202
    '''
    Coaxial CLK IN connector on the board front panel
    '''
    NIFGEN_VAL_DDC_CLK_IN = 1203
    '''
    DDC CLK IN line of the Digital Data & Control connector
    '''


class VideoWaveformType(Enum):
    NIFGEN_VAL_PAL_B = 0
    '''
    PAL B Video Type
    '''
    NIFGEN_VAL_PAL_D = 1
    '''
    PAL D Video Type
    '''
    NIFGEN_VAL_PAL_G = 2
    '''
    PAL G Video Type
    '''
    NIFGEN_VAL_PAL_H = 3
    '''
    PAL H Video Type
    '''
    NIFGEN_VAL_PAL_I = 4
    '''
    PAL I Video Type
    '''
    NIFGEN_VAL_PAL_M = 5
    '''
    PAL M Video Type
    '''
    NIFGEN_VAL_PAL_N = 6
    '''
    PAL N Video Type
    '''
    NIFGEN_VAL_NTSC_M = 7
    '''
    NTSC M Video Type
    '''


class WaitBehavior(Enum):
    HOLD_LAST_VALUE = 400
    '''
    While in a wait state, the output signal remains at the last voltage
    generated prior to entering the wait state.
    '''
    JUMP_TO_VALUE = 401
    '''
    While in a wait state, the output signal remains at the value configured
    in the `Wait Value <pniFgen_WaitValue.html>`__ property.
    '''


class Waveform(Enum):
    SINE = 1
    '''
    Specifies that the signal generator produces a sinusoid waveform.
    '''
    SQUARE = 2
    '''
    Specifies that the signal generator produces a square waveform.
    '''
    TRIANGLE = 3
    '''
    Specifies that the signal generator produces a triangle waveform.
    '''
    RAMP_UP = 4
    '''
    Specifies that the signal generator produces a positive ramp waveform.
    '''
    RAMP_DOWN = 5
    '''
    Specifies that the signal generator produces a negative ramp waveform.
    '''
    DC = 6
    '''
    Specifies that the signal generator produces a constant voltage.
    '''
    NOISE = 101
    '''
    Specifies that the signal generator produces white noise.
    '''
    USER = 102
    '''
    Specifies that the signal generator produces a user-defined waveform,
    defined by the `niFgen Define User Standard
    Waveform <javascript:LaunchMergedHelp('SigGenHelp.chm',%20'nifgenlv.chm',%20'niFgen_Define_User_Standard_Waveform.html')>`__
    VI.
    '''
