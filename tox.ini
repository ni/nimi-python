# Tox (http://tox.testrun.org/) is a tool for running tests
# in multiple virtualenvs. This configuration file will run the
# test suite on all supported python versions. To use it, "pip install tox"
# and then run "tox" from this directory.
[tox]
envlist = build_test, codegen, py{27,34,35,36,py,py3}-test, flake8, docs
#, pkg-{nidmm,nimodinst} # TODO(texasaggie97) Reenable once issues fixed
skip_missing_interpreters=True
skipsdist = true

[testenv]
description =
    test: Run tests
    build_test: Test the build scripts
    clean: Clean code generated files
    codegen: Run code generation step
    flake8: Run static analysis
    docs: Generate documentation
    pkg: Verify the package
    system_tests: Run system tests (requires driver runtime to be installed)

changedir =
    build_test: .
    test: .
    codegen: .
    clean: .
    docs: docs
    flake8: .
    pkg-nidmm: bin/nidmm
    pkg-nimodinst: bin/nimodinst
    system_tests: .

# We touch .coverage first to ensure the files exists, then remove it.
commands =
    build_test: touch .coverage
    build_test: rm .coverage
    build_test: coverage run --append --source build.metadata_utilities -m py.test build/metadata_utilities.py
    build_test: flake8 build/
    test: coverage run --append --source nifake -m py.test bin/nifake/nifake {posargs}
    test: coverage run --append --source nimodinst -m py.test bin/nimodinst/nimodinst {posargs}
    test: coverage report
    test: coverage html --directory=bin/htmlcov/unit_tests
    clean: make clean {posargs}
    codegen: make {posargs}
    flake8: flake8 bin/ 
    flake8: flake8 src/nidmm/system_tests/ 
    flake8: flake8 src/nidmm/examples/ 
    flake8: flake8 src/nimodinst/system_tests/ 
    flake8: flake8 src/nimodinst/examples/ 
    flake8: flake8 src/niswitch/system_tests/ 
    flake8: flake8 src/niswitch/examples/ 
    docs: sphinx-build -b html -d {envtmpdir}/doctrees . ../bin/docs/html {posargs}
    pkg: python setup.py check -m -r -s
    pkg: check-manifest --ignore tox.ini,tests*,.github,.github/*,CONTRIBUTING.rst,docs,docs/*
    system_tests: python tools/install_local_wheel.py --driver nidmm
    system_tests: coverage run --rcfile=tools/coveragerc_system_test --source nidmm -m py.test src/nidmm/system_tests --junitxml=junit-dmm-{envname}.xml {posargs}
    system_tests: python tools/install_local_wheel.py --driver niswitch
    system_tests: coverage run --rcfile=tools/coveragerc_system_test --append --source niswitch -m py.test src/niswitch/system_tests --junitxml=junit-switch-{envname}.xml {posargs}
    system_tests: python tools/install_local_wheel.py --driver nimodinst
    system_tests: coverage run --rcfile=tools/coveragerc_system_test --append --source nimodinst -m py.test src/nimodinst/system_tests --junitxml=junit-modinst-{envname}.xml {posargs}
    system_tests: coverage report --rcfile=tools/coveragerc_system_test
    system_tests: coverage html --rcfile=tools/coveragerc_system_test --directory=bin/htmlcov/system_tests

deps =
    test: enum34;python_version<"3.4"
    test: pytest
    test: coverage
    test: mock
    test: mako
    build_test: pytest
    build_test: coverage
    build_test: mako
    build_test: flake8
    build_test: hacking
    build_test: pep8-naming
    codegen: mako
    codegen: wheel
    codegen: setuptools
    codegen: enum34;python_version<"3.4"
    flake8: flake8
    flake8: hacking
    flake8: pep8-naming
    docs: sphinx
    docs: sphinx-rtd-theme
    pkg: check-manifest
    pkg: docutils
    system_tests: enum34;python_version<"3.4"
    system_tests: pytest
    system_tests: coverage

whitelist_externals =
    build_test: rm
    build_test: touch
    codegen: make
    clean: make

[flake8]
show_source = true
# We recommend setting your editor's visual guide to 79 but allow overflow to
# 160 for readability in certain cases due to generated code
# max_line_length = 160
exclude = build,docs,.tox,__pycache__
# H903: Windows style line endings not allowed in code
# E501: Line length
# W391: Blank line at end of file
ignore = H903,E501,W391

[pytest]
addopts = --verbose --doctest-modules --ignore=setup.py
norecursedirs = system_tests examples .* build dist CVS _darcs {arch} *.egg venv

[travis]
python =
  3.6: py36-test, flake8, docs



