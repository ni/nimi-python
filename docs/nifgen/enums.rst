Enums
=====

Enums used in NI-FGEN

.. py:currentmodule:: nifgen



.. py:data:: AnalogPath

    .. py:attribute:: nifgen.AnalogPath.NIFGEN_VAL_MAIN_ANALOG_PATH



        Specifies the main path.

        



    .. py:attribute:: nifgen.AnalogPath.NIFGEN_VAL_DIRECT_ANALOG_PATH



        Specifies the direct path.

        



    .. py:attribute:: nifgen.AnalogPath.NIFGEN_VAL_FIXED_LOW_GAIN_ANALOG_PATH



        Specifies the main path with low gain amplifier.

        



    .. py:attribute:: nifgen.AnalogPath.NIFGEN_VAL_FIXED_HIGH_GAIN_ANALOG_PATH



        Specifies the main path with high gain amplifier.

        




.. py:data:: BusType

    .. py:attribute:: nifgen.BusType.NIFGEN_VAL_BUS_INVALID



        Indicates an invalid bus type.

        



    .. py:attribute:: nifgen.BusType.NIFGEN_VAL_BUS_AT



        Indicates the signal generator is the AT bus type.

        



    .. py:attribute:: nifgen.BusType.NIFGEN_VAL_BUS_PCI



        Indicates the signal generator is the PCI bus type.

        



    .. py:attribute:: nifgen.BusType.NIFGEN_VAL_BUS_PXI



        Indicates the signal generator is the PXI bus type.

        



    .. py:attribute:: nifgen.BusType.NIFGEN_VAL_BUS_VXI



        Indicates the signal generator is the VXI bus type.

        



    .. py:attribute:: nifgen.BusType.NIFGEN_VAL_BUS_PCMCIA



        Indicates the signal generator is the PCMCIA bus type.

        



    .. py:attribute:: nifgen.BusType.NIFGEN_VAL_BUS_PXIE



        Indicates the signal generator is the PXI Express bus type.

        




.. py:data:: CalADCInput

    .. py:attribute:: nifgen.CalADCInput.NIFGEN_VAL_ANALOG_OUTPUT



        Specifies that the ADC measures the analog output.

        



    .. py:attribute:: nifgen.CalADCInput.NIFGEN_VAL_INTERNAL_VOLTAGE_REFERENCE



        Specifies that the ADC measures the internal voltage reference.

        



    .. py:attribute:: nifgen.CalADCInput.NIFGEN_VAL_GROUND



        Specifies that the ADC measures the ground voltage.

        



    .. py:attribute:: nifgen.CalADCInput.NIFGEN_VAL_ANALOG_OUTPUT_DIFFERENTIAL



        Specifies that the ADC measures the differential analog output.

        



    .. py:attribute:: nifgen.CalADCInput.NIFGEN_VAL_ANALOG_OUTPUT_PLUS



        Specifies that the ADC measures the positive differential analog output.

        



    .. py:attribute:: nifgen.CalADCInput.NIFGEN_VAL_ANALOG_OUTPUT_MINUS



        Specifies that the ADC measures the negative differential analog output.

        



    .. py:attribute:: nifgen.CalADCInput.NIFGEN_VAL_ANALOG_OUTPUT_IDLE



        Specifies that the ADC measures the idle analog output.

        




.. py:data:: ClockMode

    .. py:attribute:: nifgen.ClockMode.NIFGEN_VAL_HIGH_RESOLUTION



        **High resolution sampling—**\ Sample rate is generated by a high
        resolution clock source.

        



    .. py:attribute:: nifgen.ClockMode.NIFGEN_VAL_DIVIDE_DOWN



        **Divide down sampling—**\ Sample rate is generated by dividing the
        source frequency.

        



    .. py:attribute:: nifgen.ClockMode.NIFGEN_VAL_AUTOMATIC



        **Automatic Selection—**\ NI-FGEN selects between the divide-down and
        high-resolution modes.

        




.. py:data:: DataMarkerEventLevelPolarity

    .. py:attribute:: nifgen.DataMarkerEventLevelPolarity.ACTIVE_HIGH



        When the data bit is 1 (high), the Data Marker Event level is high.

        



    .. py:attribute:: nifgen.DataMarkerEventLevelPolarity.ACTIVE_LOW



        When the data bit is 1 (high), the Data Marker Event level is low.

        




.. py:data:: DataProcessingMode

    .. py:attribute:: nifgen.DataProcessingMode.REAL



        Specifies that the waveform data points are real numbers (I data).

        



    .. py:attribute:: nifgen.DataProcessingMode.COMPLEX



        Specifies that the waveform data points are complex numbers (I/Q data).

        




.. py:data:: DoneEventActiveLevel

    .. py:attribute:: nifgen.DoneEventActiveLevel.ACTIVE_HIGH



        When the operation is complete, the Done Event level is high.

        



    .. py:attribute:: nifgen.DoneEventActiveLevel.ACTIVE_LOW



        When the operation is complete, the Done Event level is low.

        




.. py:data:: DoneEventDelayUnits

    .. py:attribute:: nifgen.DoneEventDelayUnits.SAMPLE_CLOCK_PERIODS



        The delay is specified in Sample Clock periods and then coerced up by
        NI-FGEN to the nearest Sample Clock period.

        



    .. py:attribute:: nifgen.DoneEventDelayUnits.SECONDS



        The delay is specified in seconds and then coerced up by NI-FGEN to the
        nearest Sample Clock period.

        




.. py:data:: DoneEventOutputBehavior

    .. py:attribute:: nifgen.DoneEventOutputBehavior.PULSE



        Triggers a pulse for a specified period of time.

        



    .. py:attribute:: nifgen.DoneEventOutputBehavior.LEVEL



        Changes to high or low while the event is active, depending on the
        active state you specify.

        




.. py:data:: DoneEventPulsePolarity

    .. py:attribute:: nifgen.DoneEventPulsePolarity.ACTIVE_HIGH



        When the operation is done, the Done Event polarity is high.

        



    .. py:attribute:: nifgen.DoneEventPulsePolarity.ACTIVE_LOW



        When the operation is done, the Done Event polarity is low.

        




.. py:data:: DoneEventPulseWidthUnits

    .. py:attribute:: nifgen.DoneEventPulseWidthUnits.SAMPLE_CLOCK_PERIODS



        Specifies the pulse width in Sample Clock periods.

        



    .. py:attribute:: nifgen.DoneEventPulseWidthUnits.SECONDS



        Specifies the pulse width in seconds.

        




.. py:data:: FilterType

    .. py:attribute:: nifgen.FilterType.FLAT



        Applies a flat filter to the data with the passband value specified in
        the `Flat Filter Passband <pniFgen_FlatFilterPassband.html>`__ property.

        



    .. py:attribute:: nifgen.FilterType.RAISED_COSINE



        Applies a raised cosine filter to the data with the alpha value
        specified in the `Raised Cosine Filter
        Alpha <pniFgen_RaisedCosineFilterAlpha.html>`__ property.

        



    .. py:attribute:: nifgen.FilterType.ROOT_RAISED_COSINE



        Applies a root raised cosine filter to the data with the alpha value
        specified in the `Root Raised Cosine Filter
        Alpha <pniFgen_RootRaisedCosineFilterAlpha.html>`__ property.

        



    .. py:attribute:: nifgen.FilterType.GAUSSIAN



        Applies a Gaussian filter to the data with the BT value specified in the
        `Gaussian Filter BT <pniFgen_GaussianFilterBT.html>`__ property.

        



    .. py:attribute:: nifgen.FilterType.CUSTOM



        Applies a custom filter to the data. If Custom is selected, you must
        provide a set of FIR filter coefficients with the `niFgen Configure
        Custom FIR Filter
        Coefficients <javascript:LaunchMergedHelp('SigGenHelp.chm',%20'nifgenlv.chm',%20'niFgen_Configure_Custom_FIR_Filter_Coefficien.html')>`__
        VI.

        




.. py:data:: IdleBehavior

    .. py:attribute:: nifgen.IdleBehavior.HOLD_LAST_VALUE



        While in the Idle state, the output signal remains at the last voltage
        generated prior to entering the Idle state.

        



    .. py:attribute:: nifgen.IdleBehavior.JUMP_TO_VALUE



        While in the Idle state, the output signal remains at the value
        configured in the `Idle Value <pniFgen_IdleValue.html>`__ property.

        




.. py:data:: MarkerEventDelayUnits

    .. py:attribute:: nifgen.MarkerEventDelayUnits.SAMPLE_CLOCK_PERIODS



        The delay is specified in Sample Clock periods and then coerced up by
        NI-FGEN to the nearest Sample Clock period.

        



    .. py:attribute:: nifgen.MarkerEventDelayUnits.SECONDS



        The delay is specified in seconds and then coerced up by NI-FGEN to the
        nearest Sample Clock period.

        




.. py:data:: MarkerEventOutputBehavior

    .. py:attribute:: nifgen.MarkerEventOutputBehavior.PULSE



        Triggers a pulse for a specified period of time.

        



    .. py:attribute:: nifgen.MarkerEventOutputBehavior.TOGGLE



        Changes to high or low while the event is active, depending on the
        active state you specify.

        




.. py:data:: MarkerEventPulsePolarity

    .. py:attribute:: nifgen.MarkerEventPulsePolarity.ACTIVE_HIGH



        The Marker Event level is high at the marker position.

        



    .. py:attribute:: nifgen.MarkerEventPulsePolarity.ACTIVE_LOW



        The Marker Event level is low at the marker position.

        




.. py:data:: MarkerEventPulseWidthUnits

    .. py:attribute:: nifgen.MarkerEventPulseWidthUnits.SAMPLE_CLOCK_PERIODS



        Specifies the pulse width in Sample Clock periods.

        



    .. py:attribute:: nifgen.MarkerEventPulseWidthUnits.SECONDS



        Specifies the pulse width in seconds.

        




.. py:data:: MarkerEventToggleInitialState

    .. py:attribute:: nifgen.MarkerEventToggleInitialState.HIGH



        Sets the initial state of the Marker Event to high.

        



    .. py:attribute:: nifgen.MarkerEventToggleInitialState.LOW



        Sets the initial state of the Marker Event to low.

        




.. py:data:: OSPMode

    .. py:attribute:: nifgen.OSPMode.IF



        Specifies that the OSP block generates intermediate frequency (IF) data.

        



    .. py:attribute:: nifgen.OSPMode.BASEBAND



        Specifies that the OSP block generates baseband data.

        




.. py:data:: OSPOverflowErrorReporting

    .. py:attribute:: nifgen.OSPOverflowErrorReporting.ERROR



        Specifies that NI-FGEN returns errors whenever an overflow has occurred
        in the OSP block.

        



    .. py:attribute:: nifgen.OSPOverflowErrorReporting.DISABLED



        Specifies that NI-FGEN does not return errors when an overflow occurs in
        the OSP block.

        




.. py:data:: OperationMode

    .. py:attribute:: nifgen.OperationMode.NIFGEN_VAL_OPERATE_CONTINUOUS



        Continuous operation

        




.. py:data:: OutputMode

    .. py:attribute:: nifgen.OutputMode.NIFGEN_VAL_OUTPUT_FUNC



        **Standard Function mode—**\ Generates standard function waveforms such
        as sine, square, triangle, and so on.

        



    .. py:attribute:: nifgen.OutputMode.NIFGEN_VAL_OUTPUT_ARB



        **Arbitrary Waveform mode—**\ Generates waveforms from
        user-created/provided waveform arrays of numeric data.

        



    .. py:attribute:: nifgen.OutputMode.NIFGEN_VAL_OUTPUT_SEQ



        **Arbitrary Sequence mode—**\ Generates downloaded waveforms in an order
        your specify.

        



    .. py:attribute:: nifgen.OutputMode.NIFGEN_VAL_OUTPUT_FREQ_LIST



        **Frequency List mode—**\ Generates a standard function using a list of
        frequencies you define.

        



    .. py:attribute:: nifgen.OutputMode.NIFGEN_VAL_OUTPUT_SCRIPT



        **Script mode—**\ Allows you to use scripting to link and loop multiple
        waveforms in complex combinations.

        




.. py:data:: P2PAddressType

    .. py:attribute:: nifgen.P2PAddressType.PHYSICAL



        Specifies a physical memory address.

        



    .. py:attribute:: nifgen.P2PAddressType.VIRTUAL



        Specifies a virtual memory address.

        




.. py:data:: ReadyForStartEventActiveLevel

    .. py:attribute:: nifgen.ReadyForStartEventActiveLevel.ACTIVE_HIGH



        When the operation is ready to start, the Ready for Start Event level is
        high.

        



    .. py:attribute:: nifgen.ReadyForStartEventActiveLevel.ACTIVE_LOW



        When the operation is ready to start, the Ready for Start Event level is
        low.

        




.. py:data:: ReferenceClockSource

    .. py:attribute:: nifgen.ReferenceClockSource.CLOCK_IN



        Specifies that the CLK IN input signal from the front panel connector is
        used as the Reference Clock source.

        



    .. py:attribute:: nifgen.ReferenceClockSource.NONE



        Specifies that a Reference Clock is not used.

        



    .. py:attribute:: nifgen.ReferenceClockSource.ONBOARD_REFERENCE_CLOCK



        Specifies that the onboard Reference Clock is used as the Reference
        Clock source.

        



    .. py:attribute:: nifgen.ReferenceClockSource.PXI_CLOCK



        Specifies the PXI Clock is used as the Reference Clock source.

        



    .. py:attribute:: nifgen.ReferenceClockSource.RTSI_7



        Specifies that the RTSI line 7 is used as the Reference Clock source.

        




.. py:data:: SampleClockSource

    .. py:attribute:: nifgen.SampleClockSource.CLOCK_IN



        Specifies that the signal at the CLK IN front panel connector is used as
        the Sample Clock source.

        



    .. py:attribute:: nifgen.SampleClockSource.DDC_CLOCK_IN



        Specifies that the Sample Clock from DDC connector is used as the Sample
        Clock source.

        



    .. py:attribute:: nifgen.SampleClockSource.ONBOARD_CLOCK



        Specifies that the onboard clock is used as the Sample Clock source.

        



    .. py:attribute:: nifgen.SampleClockSource.PXI_STAR_LINE



        Specifies that the PXI\_STAR trigger line is used as the Sample Clock
        source.

        



    .. py:attribute:: nifgen.SampleClockSource.PXI_TRIGGER_LINE_0RTSI_0



        Specifies that the PXI or RTSI line 0 is used as the Sample Clock
        source.

        



    .. py:attribute:: nifgen.SampleClockSource.PXI_TRIGGER_LINE_1RTSI_1



        Specifies that the PXI or RTSI line 1 is used as the Sample Clock
        source.

        



    .. py:attribute:: nifgen.SampleClockSource.PXI_TRIGGER_LINE_2RTSI_2



        Specifies that the PXI or RTSI line 2 is used as the Sample Clock
        source.

        



    .. py:attribute:: nifgen.SampleClockSource.PXI_TRIGGER_LINE_3RTSI_3



        Specifies that the PXI or RTSI line 3 is used as the Sample Clock
        source.

        



    .. py:attribute:: nifgen.SampleClockSource.PXI_TRIGGER_LINE_4RTSI_4



        Specifies that the PXI or RTSI line 4 is used as the Sample Clock
        source.

        



    .. py:attribute:: nifgen.SampleClockSource.PXI_TRIGGER_LINE_5RTSI_5



        Specifies that the PXI or RTSI line 5 is used as the Sample Clock
        source.

        



    .. py:attribute:: nifgen.SampleClockSource.PXI_TRIGGER_LINE_6RTSI_6



        Specifies that the PXI or RTSI line 6 is used as the Sample Clock
        source.

        



    .. py:attribute:: nifgen.SampleClockSource.PXI_TRIGGER_LINE_7RTSI_7



        Specifies that the PXI or RTSI line 7 is used as the Sample Clock
        source.

        




.. py:data:: SampleClockTimebaseSource

    .. py:attribute:: nifgen.SampleClockTimebaseSource.CLOCK_IN



        Specifies that the external signal on the CLK IN front panel connector
        is used as the source.

        



    .. py:attribute:: nifgen.SampleClockTimebaseSource.ONBOARD_CLOCK



        Specifies that the onboard Sample Clock timebase is used as the source.

        




.. py:data:: ScriptTriggerDigitalEdgeEdge

    .. py:attribute:: nifgen.ScriptTriggerDigitalEdgeEdge.RISING_EDGE



        Occurs when the signal transitions from low level to high level.

        



    .. py:attribute:: nifgen.ScriptTriggerDigitalEdgeEdge.FALLING_EDGE



        Occurs when the signal transitions from high level to low level.

        




.. py:data:: ScriptTriggerDigitalLevelActiveLevel

    .. py:attribute:: nifgen.ScriptTriggerDigitalLevelActiveLevel.HIGH_LEVEL



        The high level is the active level.

        



    .. py:attribute:: nifgen.ScriptTriggerDigitalLevelActiveLevel.LOW_LEVEL



        The low level is the active level.

        




.. py:data:: ScriptTriggerType

    .. py:attribute:: nifgen.ScriptTriggerType.NONE



        No trigger is configured. Signal generation starts immediately.

        



    .. py:attribute:: nifgen.ScriptTriggerType.DIGITAL_EDGE



        Trigger is asserted when a digital edge is detected.

        



    .. py:attribute:: nifgen.ScriptTriggerType.DIGITAL_LEVEL



        Trigger is asserted when a digital level is detected.

        



    .. py:attribute:: nifgen.ScriptTriggerType.SOFTWARE_EDGE



        Trigger is asserted when a software edge is detected.

        




.. py:data:: StartTriggerDigitalEdgeEdge

    .. py:attribute:: nifgen.StartTriggerDigitalEdgeEdge.RISING_EDGE



        Occurs when the signal transitions from low level to high level.

        



    .. py:attribute:: nifgen.StartTriggerDigitalEdgeEdge.FALLING_EDGE



        Occurs when the signal transitions from high level to low level.

        




.. py:data:: StartTriggerType

    .. py:attribute:: nifgen.StartTriggerType.NONE



        No trigger is configured. Signal generation starts immediately.

        



    .. py:attribute:: nifgen.StartTriggerType.DIGITAL_EDGE



        Operation begins when a digital edge is detected.

        



    .. py:attribute:: nifgen.StartTriggerType.SOFTWARE_EDGE



        Operation begins when a software edge is detected.

        



    .. py:attribute:: nifgen.StartTriggerType.P2P_ENDPOINT_FULLNESS



        Operation begins when the FIFO reaches the threshold specified in the
        `P2P Endpoint Fullness Start Trigger
        Level <pniFgen_P2PEndpointFullnessStartTriggerLevel.html>`__ property.

        




.. py:data:: StartedEventActiveLevel

    .. py:attribute:: nifgen.StartedEventActiveLevel.ACTIVE_HIGH



        When the operation has started, the Started Event level is high.

        



    .. py:attribute:: nifgen.StartedEventActiveLevel.ACTIVE_LOW



        When the operation has started, the Started Event level is high.

        




.. py:data:: StartedEventDelayUnits

    .. py:attribute:: nifgen.StartedEventDelayUnits.SAMPLE_CLOCK_PERIODS



        The delay is specified in Sample Clock periods and then coerced up by
        NI-FGEN to the nearest Sample Clock period.

        



    .. py:attribute:: nifgen.StartedEventDelayUnits.SECONDS



        The delay is specified in seconds and then coerced up by NI-FGEN to the
        nearest Sample Clock period.

        




.. py:data:: StartedEventOutputBehavior

    .. py:attribute:: nifgen.StartedEventOutputBehavior.PULSE



        Triggers a pulse for a specified period of time.

        



    .. py:attribute:: nifgen.StartedEventOutputBehavior.LEVEL



        Shifts high or low while the event is active, depending on the active
        state you specify.

        




.. py:data:: StartedEventPulsePolarity

    .. py:attribute:: nifgen.StartedEventPulsePolarity.ACTIVE_HIGH



        When the operation has started, the Started Event level is high.

        



    .. py:attribute:: nifgen.StartedEventPulsePolarity.ACTIVE_LOW



        When the operation has started, the Started Event level is low.

        




.. py:data:: StartedEventPulseWidthUnits

    .. py:attribute:: nifgen.StartedEventPulseWidthUnits.SAMPLE_CLOCK_PERIODS



        Specifies the pulse width in Sample Clock periods.

        



    .. py:attribute:: nifgen.StartedEventPulseWidthUnits.SECONDS



        Specifies the pulse width in seconds.

        




.. py:data:: SynchronizationSource

    .. py:attribute:: nifgen.SynchronizationSource.NIFGEN_VAL_TTL0



        PXI TRIG0 or VXI TTL0

        



    .. py:attribute:: nifgen.SynchronizationSource.NIFGEN_VAL_TTL1



        PXI TRIG1 or VXI TTL1

        



    .. py:attribute:: nifgen.SynchronizationSource.NIFGEN_VAL_TTL2



        PXI TRIG2 or VXI TTL2

        



    .. py:attribute:: nifgen.SynchronizationSource.NIFGEN_VAL_TTL3



        PXI TRIG3 or VXI TTL3

        



    .. py:attribute:: nifgen.SynchronizationSource.NIFGEN_VAL_TTL4



        PXI TRIG4 or VXI TTL4

        



    .. py:attribute:: nifgen.SynchronizationSource.NIFGEN_VAL_TTL5



        PXI TRIG5 or VXI TTL5

        



    .. py:attribute:: nifgen.SynchronizationSource.NIFGEN_VAL_TTL6



        PXI TRIG6 or VXI TTL6

        



    .. py:attribute:: nifgen.SynchronizationSource.NIFGEN_VAL_RTSI_0



        RTSI line 0

        



    .. py:attribute:: nifgen.SynchronizationSource.NIFGEN_VAL_RTSI_1



        RTSI line 1

        



    .. py:attribute:: nifgen.SynchronizationSource.NIFGEN_VAL_RTSI_2



        RTSI line 2

        



    .. py:attribute:: nifgen.SynchronizationSource.NIFGEN_VAL_RTSI_3



        RTSI line 3

        



    .. py:attribute:: nifgen.SynchronizationSource.NIFGEN_VAL_RTSI_4



        RTSI line 4

        



    .. py:attribute:: nifgen.SynchronizationSource.NIFGEN_VAL_RTSI_5



        RTSI line 5

        



    .. py:attribute:: nifgen.SynchronizationSource.NIFGEN_VAL_RTSI_6



        RTSI line 6

        



    .. py:attribute:: nifgen.SynchronizationSource.NIFGEN_VAL_NONE



        No synchronization source is used.

        




.. py:data:: TerminalConfiguration

    .. py:attribute:: nifgen.TerminalConfiguration.SINGLE_ENDED



        Specifies single-ended operation.

        



    .. py:attribute:: nifgen.TerminalConfiguration.DIFFERENTIAL



        Specifies differential operation.

        




.. py:data:: TriggerMode

    .. py:attribute:: nifgen.TriggerMode.NIFGEN_VAL_SINGLE



        Specifies that the signal generator operates in Single Trigger mode.

        



    .. py:attribute:: nifgen.TriggerMode.NIFGEN_VAL_CONTINUOUS



        Specifies that the signal generator operates in Continuous Trigger mode.

        



    .. py:attribute:: nifgen.TriggerMode.NIFGEN_VAL_STEPPED



        Specifies that the signal generator operates in Stepped Trigger mode.

        



    .. py:attribute:: nifgen.TriggerMode.NIFGEN_VAL_BURST



        Specifies that the signal generator operates in Burst Trigger mode.

        




.. py:data:: TriggerSource

    .. py:attribute:: nifgen.TriggerSource.NIFGEN_VAL_IMMEDIATE



        The signal generator does not wait for a trigger of any kind.

        



    .. py:attribute:: nifgen.TriggerSource.NIFGEN_VAL_EXTERNAL



        The signal generator waits for a trigger on the external trigger input.

        



    .. py:attribute:: nifgen.TriggerSource.NIFGEN_VAL_SOFTWARE_TRIG



        Specifies that the signal generator waits until you call the `niFgen
        Send Software Trigger
        VI <javascript:LaunchMergedHelp('SigGenHelp.chm',%20'nifgenlv.chm',%20'niFgen_Send_Software_Edge_Trigger.html')>`__.

        



    .. py:attribute:: nifgen.TriggerSource.NIFGEN_VAL_TTL0



        Specifies that the PXI\_TRIG0 or VXI\_TTL0 line is used as the trigger
        source.

        



    .. py:attribute:: nifgen.TriggerSource.NIFGEN_VAL_TTL1



        Specifies that the PXI\_TRIG1 or VXI\_TTL1 line is used as the trigger
        source.

        



    .. py:attribute:: nifgen.TriggerSource.NIFGEN_VAL_TTL2



        Specifies that the PXI\_TRIG2 or VXI\_TTL2 line is used as the trigger
        source.

        



    .. py:attribute:: nifgen.TriggerSource.NIFGEN_VAL_TTL3



        Specifies that the PXI\_TRIG3 or VXI\_TTL3 line is used as the trigger
        source.

        



    .. py:attribute:: nifgen.TriggerSource.NIFGEN_VAL_TTL4



        Specifies that the PXI\_TRIG4 or VXI\_TTL4 line is used as the trigger
        source.

        



    .. py:attribute:: nifgen.TriggerSource.NIFGEN_VAL_TTL5



        Specifies that the PXI\_TRIG5 or VXI\_TTL5 line is used as the trigger
        source.

        



    .. py:attribute:: nifgen.TriggerSource.NIFGEN_VAL_TTL6



        Specifies that the PXI\_TRIG6 or VXI\_TTL6 line is used as the trigger
        source.

        



    .. py:attribute:: nifgen.TriggerSource.NIFGEN_VAL_PXI_STAR



        Specifies that the PXI star trigger line is used as the trigger source.

        



    .. py:attribute:: nifgen.TriggerSource.NIFGEN_VAL_RTSI_0



        Specifies that RTSI line 0 is used as the trigger source.

        



    .. py:attribute:: nifgen.TriggerSource.NIFGEN_VAL_RTSI_1



        Specifies that RTSI line 1 is used as the trigger source.

        



    .. py:attribute:: nifgen.TriggerSource.NIFGEN_VAL_RTSI_2



        Specifies that RTSI line 2 is used as the trigger source.

        



    .. py:attribute:: nifgen.TriggerSource.NIFGEN_VAL_RTSI_3



        Specifies that RTSI line 3 is used as the trigger source.

        



    .. py:attribute:: nifgen.TriggerSource.NIFGEN_VAL_RTSI_4



        Specifies that RTSI line 4 is used as the trigger source.

        



    .. py:attribute:: nifgen.TriggerSource.NIFGEN_VAL_RTSI_5



        Specifies that RTSI line 5 is used as the trigger source.

        



    .. py:attribute:: nifgen.TriggerSource.NIFGEN_VAL_RTSI_6



        Specifies that RTSI line 6 is used as the trigger source.

        



    .. py:attribute:: nifgen.TriggerSource.NIFGEN_VAL_RTSI_7



        Specifies that RTSI line 7 is used as the trigger source.

        



    .. py:attribute:: nifgen.TriggerSource.NIFGEN_VAL_PFI_0



        Specifies that PFI 0 is used as the trigger source.

        



    .. py:attribute:: nifgen.TriggerSource.NIFGEN_VAL_PFI_1



        Specifies that PFI 1 is used as the trigger source.

        



    .. py:attribute:: nifgen.TriggerSource.NIFGEN_VAL_PFI_2



        Specifies that PFI 2 is used as the trigger source.

        



    .. py:attribute:: nifgen.TriggerSource.NIFGEN_VAL_PFI_3



        Specifies that PFI 3 is used as the trigger source.

        



    .. py:attribute:: nifgen.TriggerSource.NIFGEN_VAL_OTHER_TERMINAL



        Specifies that another terminal is used.

        




.. py:data:: UpdateClockSource

    .. py:attribute:: nifgen.UpdateClockSource.NIFGEN_VAL_INTERNAL



        Internal update clock

        



    .. py:attribute:: nifgen.UpdateClockSource.NIFGEN_VAL_EXTERNAL



        External update clock given on the IO connector

        



    .. py:attribute:: nifgen.UpdateClockSource.NIFGEN_VAL_PXI_STAR



        (PXI only) PXI star trigger line. This choice is valid only in PXI
        chassis slots 3 through 15.

        



    .. py:attribute:: nifgen.UpdateClockSource.NIFGEN_VAL_RTSI_0



        RTSI line 0

        



    .. py:attribute:: nifgen.UpdateClockSource.NIFGEN_VAL_RTSI_1



        RTSI line 1

        



    .. py:attribute:: nifgen.UpdateClockSource.NIFGEN_VAL_RTSI_2



        RTSI line 2

        



    .. py:attribute:: nifgen.UpdateClockSource.NIFGEN_VAL_RTSI_3



        RTSI line 3

        



    .. py:attribute:: nifgen.UpdateClockSource.NIFGEN_VAL_RTSI_4



        RTSI line 4

        



    .. py:attribute:: nifgen.UpdateClockSource.NIFGEN_VAL_RTSI_5



        RTSI line 5

        



    .. py:attribute:: nifgen.UpdateClockSource.NIFGEN_VAL_RTSI_6



        RTSI line 6

        



    .. py:attribute:: nifgen.UpdateClockSource.NIFGEN_VAL_RTSI_7



        (PCI only) RTSI line 7

        



    .. py:attribute:: nifgen.UpdateClockSource.NIFGEN_VAL_OTHER_TERMINAL



        Uses another device terminal.

        



    .. py:attribute:: nifgen.UpdateClockSource.NIFGEN_VAL_CLK_IN



        Coaxial CLK IN connector on the board front panel

        



    .. py:attribute:: nifgen.UpdateClockSource.NIFGEN_VAL_DDC_CLK_IN



        DDC CLK IN line of the Digital Data & Control connector

        




.. py:data:: VideoWaveformType

    .. py:attribute:: nifgen.VideoWaveformType.NIFGEN_VAL_PAL_B



        PAL B Video Type

        



    .. py:attribute:: nifgen.VideoWaveformType.NIFGEN_VAL_PAL_D



        PAL D Video Type

        



    .. py:attribute:: nifgen.VideoWaveformType.NIFGEN_VAL_PAL_G



        PAL G Video Type

        



    .. py:attribute:: nifgen.VideoWaveformType.NIFGEN_VAL_PAL_H



        PAL H Video Type

        



    .. py:attribute:: nifgen.VideoWaveformType.NIFGEN_VAL_PAL_I



        PAL I Video Type

        



    .. py:attribute:: nifgen.VideoWaveformType.NIFGEN_VAL_PAL_M



        PAL M Video Type

        



    .. py:attribute:: nifgen.VideoWaveformType.NIFGEN_VAL_PAL_N



        PAL N Video Type

        



    .. py:attribute:: nifgen.VideoWaveformType.NIFGEN_VAL_NTSC_M



        NTSC M Video Type

        




.. py:data:: WaitBehavior

    .. py:attribute:: nifgen.WaitBehavior.HOLD_LAST_VALUE



        While in a wait state, the output signal remains at the last voltage
        generated prior to entering the wait state.

        



    .. py:attribute:: nifgen.WaitBehavior.JUMP_TO_VALUE



        While in a wait state, the output signal remains at the value configured
        in the `Wait Value <pniFgen_WaitValue.html>`__ property.

        




.. py:data:: Waveform

    .. py:attribute:: nifgen.Waveform.SINE



        Specifies that the signal generator produces a sinusoid waveform.

        



    .. py:attribute:: nifgen.Waveform.SQUARE



        Specifies that the signal generator produces a square waveform.

        



    .. py:attribute:: nifgen.Waveform.TRIANGLE



        Specifies that the signal generator produces a triangle waveform.

        



    .. py:attribute:: nifgen.Waveform.RAMP_UP



        Specifies that the signal generator produces a positive ramp waveform.

        



    .. py:attribute:: nifgen.Waveform.RAMP_DOWN



        Specifies that the signal generator produces a negative ramp waveform.

        



    .. py:attribute:: nifgen.Waveform.DC



        Specifies that the signal generator produces a constant voltage.

        



    .. py:attribute:: nifgen.Waveform.NOISE



        Specifies that the signal generator produces white noise.

        



    .. py:attribute:: nifgen.Waveform.USER



        Specifies that the signal generator produces a user-defined waveform,
        defined by the `niFgen Define User Standard
        Waveform <javascript:LaunchMergedHelp('SigGenHelp.chm',%20'nifgenlv.chm',%20'niFgen_Define_User_Standard_Waveform.html')>`__
        VI.

        


