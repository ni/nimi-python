
# -*- coding: utf-8 -*-
# This file is code generated, do not make changes here.
#  If the generated information is not correct for python
#  changes can be made in enums_addon.py and they will be
#  applied at build time.

enums = {
    'AnalogPath': {
        'values': [
            {
                'name': 'NIFGEN_VAL_MAIN_ANALOG_PATH',
                'value': 0,
'documentation': {
'description': 'Specifies the main path.',
},
            },
            {
                'name': 'NIFGEN_VAL_DIRECT_ANALOG_PATH',
                'value': 1,
'documentation': {
'description': 'Specifies the direct path.',
},
            },
            {
                'name': 'NIFGEN_VAL_FIXED_LOW_GAIN_ANALOG_PATH',
                'value': 2,
'documentation': {
'description': 'Specifies the main path with low gain amplifier.',
},
            },
            {
                'name': 'NIFGEN_VAL_FIXED_HIGH_GAIN_ANALOG_PATH',
                'value': 3,
'documentation': {
'description': 'Specifies the main path with high gain amplifier.',
},
            },
        ],
    },
    'BusType': {
        'values': [
            {
                'name': 'NIFGEN_VAL_BUS_INVALID',
                'value': 0,
'documentation': {
'description': 'Indicates an invalid bus type.',
},
            },
            {
                'name': 'NIFGEN_VAL_BUS_AT',
                'value': 1,
'documentation': {
'description': 'Indicates the signal generator is the AT bus type.',
},
            },
            {
                'name': 'NIFGEN_VAL_BUS_PCI',
                'value': 2,
'documentation': {
'description': 'Indicates the signal generator is the PCI bus type.',
},
            },
            {
                'name': 'NIFGEN_VAL_BUS_PXI',
                'value': 3,
'documentation': {
'description': 'Indicates the signal generator is the PXI bus type.',
},
            },
            {
                'name': 'NIFGEN_VAL_BUS_VXI',
                'value': 4,
'documentation': {
'description': 'Indicates the signal generator is the VXI bus type.',
},
            },
            {
                'name': 'NIFGEN_VAL_BUS_PCMCIA',
                'value': 5,
'documentation': {
'description': 'Indicates the signal generator is the PCMCIA bus type.',
},
            },
            {
                'name': 'NIFGEN_VAL_BUS_PXIE',
                'value': 6,
'documentation': {
'description': 'Indicates the signal generator is the PXI Express bus type.',
},
            },
        ],
    },
    'CalADCInput': {
        'values': [
            {
                'name': 'NIFGEN_VAL_ANALOG_OUTPUT',
                'value': 0,
'documentation': {
'description': 'Specifies that the ADC measures the analog output.',
},
            },
            {
                'name': 'NIFGEN_VAL_INTERNAL_VOLTAGE_REFERENCE',
                'value': 1,
'documentation': {
'description': 'Specifies that the ADC measures the internal voltage reference.',
},
            },
            {
                'name': 'NIFGEN_VAL_GROUND',
                'value': 2,
'documentation': {
'description': 'Specifies that the ADC measures the ground voltage.',
},
            },
            {
                'name': 'NIFGEN_VAL_ANALOG_OUTPUT_DIFFERENTIAL',
                'value': 3,
'documentation': {
'description': 'Specifies that the ADC measures the differential analog output.',
},
            },
            {
                'name': 'NIFGEN_VAL_ANALOG_OUTPUT_PLUS',
                'value': 4,
'documentation': {
'description': 'Specifies that the ADC measures the positive differential analog output.',
},
            },
            {
                'name': 'NIFGEN_VAL_ANALOG_OUTPUT_MINUS',
                'value': 5,
'documentation': {
'description': 'Specifies that the ADC measures the negative differential analog output.',
},
            },
            {
                'name': 'NIFGEN_VAL_ANALOG_OUTPUT_IDLE',
                'value': 6,
'documentation': {
'description': 'Specifies that the ADC measures the idle analog output.',
},
            },
        ],
    },
    'ClockMode': {
        'values': [
            {
                'name': 'NIFGEN_VAL_HIGH_RESOLUTION',
                'value': 0,
'documentation': {
'description': '''
**High resolution sampling—**\ Sample rate is generated by a high
resolution clock source.
''',
},
            },
            {
                'name': 'NIFGEN_VAL_DIVIDE_DOWN',
                'value': 1,
'documentation': {
'description': '''
**Divide down sampling—**\ Sample rate is generated by dividing the
source frequency.
''',
},
            },
            {
                'name': 'NIFGEN_VAL_AUTOMATIC',
                'value': 2,
'documentation': {
'description': '''
**Automatic Selection—**\ NI-FGEN selects between the divide-down and
high-resolution modes.
''',
},
            },
        ],
    },
    'DataMarkerEventLevelPolarity': {
        'values': [
            {
                'name': 'ACTIVE_HIGH',
                'value': 101,
'documentation': {
'description': 'When the data bit is 1 (high), the Data Marker Event level is high.',
},
            },
            {
                'name': 'ACTIVE_LOW',
                'value': 102,
'documentation': {
'description': 'When the data bit is 1 (high), the Data Marker Event level is low.',
},
            },
        ],
    },
    'DataProcessingMode': {
        'values': [
            {
                'name': 'REAL',
                'value': 0,
'documentation': {
'description': 'Specifies that the waveform data points are real numbers (I data).',
},
            },
            {
                'name': 'COMPLEX',
                'value': 1,
'documentation': {
'description': 'Specifies that the waveform data points are complex numbers (I/Q data).',
},
            },
        ],
    },
    'DoneEventActiveLevel': {
        'values': [
            {
                'name': 'ACTIVE_HIGH',
                'value': 101,
'documentation': {
'description': 'When the operation is complete, the Done Event level is high.',
},
            },
            {
                'name': 'ACTIVE_LOW',
                'value': 102,
'documentation': {
'description': 'When the operation is complete, the Done Event level is low.',
},
            },
        ],
    },
    'DoneEventDelayUnits': {
        'values': [
            {
                'name': 'SAMPLE_CLOCK_PERIODS',
                'value': 101,
'documentation': {
'description': '''
The delay is specified in Sample Clock periods and then coerced up by
NI-FGEN to the nearest Sample Clock period.
''',
},
            },
            {
                'name': 'SECONDS',
                'value': 102,
'documentation': {
'description': '''
The delay is specified in seconds and then coerced up by NI-FGEN to the
nearest Sample Clock period.
''',
},
            },
        ],
    },
    'DoneEventOutputBehavior': {
        'values': [
            {
                'name': 'PULSE',
                'value': 101,
'documentation': {
'description': 'Triggers a pulse for a specified period of time.',
},
            },
            {
                'name': 'LEVEL',
                'value': 102,
'documentation': {
'description': '''
Changes to high or low while the event is active, depending on the
active state you specify.
''',
},
            },
        ],
    },
    'DoneEventPulsePolarity': {
        'values': [
            {
                'name': 'ACTIVE_HIGH',
                'value': 101,
'documentation': {
'description': 'When the operation is done, the Done Event polarity is high.',
},
            },
            {
                'name': 'ACTIVE_LOW',
                'value': 102,
'documentation': {
'description': 'When the operation is done, the Done Event polarity is low.',
},
            },
        ],
    },
    'DoneEventPulseWidthUnits': {
        'values': [
            {
                'name': 'SAMPLE_CLOCK_PERIODS',
                'value': 101,
'documentation': {
'description': 'Specifies the pulse width in Sample Clock periods.',
},
            },
            {
                'name': 'SECONDS',
                'value': 102,
'documentation': {
'description': 'Specifies the pulse width in seconds.',
},
            },
        ],
    },
    'FilterType': {
        'values': [
            {
                'name': 'FLAT',
                'value': 0,
'documentation': {
'description': '''
Applies a flat filter to the data with the passband value specified in
the `Flat Filter Passband <pniFgen_FlatFilterPassband.html>`__ property.
''',
},
            },
            {
                'name': 'RAISED_COSINE',
                'value': 1,
'documentation': {
'description': '''
Applies a raised cosine filter to the data with the alpha value
specified in the `Raised Cosine Filter
Alpha <pniFgen_RaisedCosineFilterAlpha.html>`__ property.
''',
},
            },
            {
                'name': 'ROOT_RAISED_COSINE',
                'value': 2,
'documentation': {
'description': '''
Applies a root raised cosine filter to the data with the alpha value
specified in the `Root Raised Cosine Filter
Alpha <pniFgen_RootRaisedCosineFilterAlpha.html>`__ property.
''',
},
            },
            {
                'name': 'GAUSSIAN',
                'value': 3,
'documentation': {
'description': '''
Applies a Gaussian filter to the data with the BT value specified in the
`Gaussian Filter BT <pniFgen_GaussianFilterBT.html>`__ property.
''',
},
            },
            {
                'name': 'CUSTOM',
                'value': 4,
'documentation': {
'description': '''
Applies a custom filter to the data. If Custom is selected, you must
provide a set of FIR filter coefficients with the `niFgen Configure
Custom FIR Filter
Coefficients <javascript:LaunchMergedHelp('SigGenHelp.chm',%20'nifgenlv.chm',%20'niFgen_Configure_Custom_FIR_Filter_Coefficien.html')>`__
VI.
''',
},
            },
        ],
    },
    'IdleBehavior': {
        'values': [
            {
                'name': 'HOLD_LAST_VALUE',
                'value': 400,
'documentation': {
'description': '''
While in the Idle state, the output signal remains at the last voltage
generated prior to entering the Idle state.
''',
},
            },
            {
                'name': 'JUMP_TO_VALUE',
                'value': 401,
'documentation': {
'description': '''
While in the Idle state, the output signal remains at the value
configured in the `Idle Value <pniFgen_IdleValue.html>`__ property.
''',
},
            },
        ],
    },
    'MarkerEventDelayUnits': {
        'values': [
            {
                'name': 'SAMPLE_CLOCK_PERIODS',
                'value': 101,
'documentation': {
'description': '''
The delay is specified in Sample Clock periods and then coerced up by
NI-FGEN to the nearest Sample Clock period.
''',
},
            },
            {
                'name': 'SECONDS',
                'value': 102,
'documentation': {
'description': '''
The delay is specified in seconds and then coerced up by NI-FGEN to the
nearest Sample Clock period.
''',
},
            },
        ],
    },
    'MarkerEventOutputBehavior': {
        'values': [
            {
                'name': 'PULSE',
                'value': 101,
'documentation': {
'description': 'Triggers a pulse for a specified period of time.',
},
            },
            {
                'name': 'TOGGLE',
                'value': 103,
'documentation': {
'description': '''
Changes to high or low while the event is active, depending on the
active state you specify.
''',
},
            },
        ],
    },
    'MarkerEventPulsePolarity': {
        'values': [
            {
                'name': 'ACTIVE_HIGH',
                'value': 101,
'documentation': {
'description': 'The Marker Event level is high at the marker position.',
},
            },
            {
                'name': 'ACTIVE_LOW',
                'value': 102,
'documentation': {
'description': 'The Marker Event level is low at the marker position.',
},
            },
        ],
    },
    'MarkerEventPulseWidthUnits': {
        'values': [
            {
                'name': 'SAMPLE_CLOCK_PERIODS',
                'value': 101,
'documentation': {
'description': 'Specifies the pulse width in Sample Clock periods.',
},
            },
            {
                'name': 'SECONDS',
                'value': 102,
'documentation': {
'description': 'Specifies the pulse width in seconds.',
},
            },
        ],
    },
    'MarkerEventToggleInitialState': {
        'values': [
            {
                'name': 'HIGH',
                'value': 101,
'documentation': {
'description': 'Sets the initial state of the Marker Event to high.',
},
            },
            {
                'name': 'LOW',
                'value': 102,
'documentation': {
'description': 'Sets the initial state of the Marker Event to low.',
},
            },
        ],
    },
    'OSPMode': {
        'values': [
            {
                'name': 'IF',
                'value': 0,
'documentation': {
'description': 'Specifies that the OSP block generates intermediate frequency (IF) data.',
},
            },
            {
                'name': 'BASEBAND',
                'value': 1,
'documentation': {
'description': 'Specifies that the OSP block generates baseband data.',
},
            },
        ],
    },
    'OSPOverflowErrorReporting': {
        'values': [
            {
                'name': 'ERROR',
                'value': 0,
'documentation': {
'description': '''
Specifies that NI-FGEN returns errors whenever an overflow has occurred
in the OSP block.
''',
},
            },
            {
                'name': 'DISABLED',
                'value': 2,
'documentation': {
'description': '''
Specifies that NI-FGEN does not return errors when an overflow occurs in
the OSP block.
''',
},
            },
        ],
    },
    'OperationMode': {
        'values': [
            {
                'name': 'NIFGEN_VAL_OPERATE_CONTINUOUS',
                'value': 0,
'documentation': {
'description': 'Continuous operation',
},
            },
        ],
    },
    'OutputMode': {
        'values': [
            {
                'name': 'NIFGEN_VAL_OUTPUT_FUNC',
                'value': 0,
'documentation': {
'description': '''
**Standard Function mode—**\ Generates standard function waveforms such
as sine, square, triangle, and so on.
''',
},
            },
            {
                'name': 'NIFGEN_VAL_OUTPUT_ARB',
                'value': 1,
'documentation': {
'description': '''
**Arbitrary Waveform mode—**\ Generates waveforms from
user-created/provided waveform arrays of numeric data.
''',
},
            },
            {
                'name': 'NIFGEN_VAL_OUTPUT_SEQ',
                'value': 2,
'documentation': {
'description': '''
**Arbitrary Sequence mode—**\ Generates downloaded waveforms in an order
your specify.
''',
},
            },
            {
                'name': 'NIFGEN_VAL_OUTPUT_FREQ_LIST',
                'value': 101,
'documentation': {
'description': '''
**Frequency List mode—**\ Generates a standard function using a list of
frequencies you define.
''',
},
            },
            {
                'name': 'NIFGEN_VAL_OUTPUT_SCRIPT',
                'value': 102,
'documentation': {
'description': '''
**Script mode—**\ Allows you to use scripting to link and loop multiple
waveforms in complex combinations.
''',
},
            },
        ],
    },
    'P2PAddressType': {
        'values': [
            {
                'name': 'PHYSICAL',
                'value': 0,
'documentation': {
'description': 'Specifies a physical memory address.',
},
            },
            {
                'name': 'VIRTUAL',
                'value': 1,
'documentation': {
'description': 'Specifies a virtual memory address.',
},
            },
        ],
    },
    'ReadyForStartEventActiveLevel': {
        'values': [
            {
                'name': 'ACTIVE_HIGH',
                'value': 101,
'documentation': {
'description': '''
When the operation is ready to start, the Ready for Start Event level is
high.
''',
},
            },
            {
                'name': 'ACTIVE_LOW',
                'value': 102,
'documentation': {
'description': '''
When the operation is ready to start, the Ready for Start Event level is
low.
''',
},
            },
        ],
    },
    'ReferenceClockSource': {
        'values': [
            {
                'name': 'CLOCK_IN',
                'value': 'ClkIn',
'documentation': {
'description': '''
Specifies that the CLK IN input signal from the front panel connector is
used as the Reference Clock source.
''',
},
            },
            {
                'name': 'NONE',
                'value': 'None',
'documentation': {
'description': 'Specifies that a Reference Clock is not used.',
},
            },
            {
                'name': 'ONBOARD_REFERENCE_CLOCK',
                'value': 'OnboardRefClk',
'documentation': {
'description': '''
Specifies that the onboard Reference Clock is used as the Reference
Clock source.
''',
},
            },
            {
                'name': 'PXI_CLOCK',
                'value': 'PXI_Clk',
'documentation': {
'description': 'Specifies the PXI Clock is used as the Reference Clock source.',
},
            },
            {
                'name': 'RTSI_7',
                'value': 'RTSI7',
'documentation': {
'description': 'Specifies that the RTSI line 7 is used as the Reference Clock source.',
},
            },
        ],
    },
    'SampleClockSource': {
        'values': [
            {
                'name': 'CLOCK_IN',
                'value': '"ClkIn"',
'documentation': {
'description': '''
Specifies that the signal at the CLK IN front panel connector is used as
the Sample Clock source.
''',
},
            },
            {
                'name': 'DDC_CLOCK_IN',
                'value': '"DDC_ClkIn"',
'documentation': {
'description': '''
Specifies that the Sample Clock from DDC connector is used as the Sample
Clock source.
''',
},
            },
            {
                'name': 'ONBOARD_CLOCK',
                'value': '"OnboardClock"',
'documentation': {
'description': 'Specifies that the onboard clock is used as the Sample Clock source.',
},
            },
            {
                'name': 'PXI_STAR_LINE',
                'value': '"PXI_Star"',
'documentation': {
'description': '''
Specifies that the PXI\_STAR trigger line is used as the Sample Clock
source.
''',
},
            },
            {
                'name': 'PXI_TRIGGER_LINE_0RTSI_0',
                'value': '"PXI_Trig0"',
'documentation': {
'description': '''
Specifies that the PXI or RTSI line 0 is used as the Sample Clock
source.
''',
},
            },
            {
                'name': 'PXI_TRIGGER_LINE_1RTSI_1',
                'value': '"PXI_Trig1"',
'documentation': {
'description': '''
Specifies that the PXI or RTSI line 1 is used as the Sample Clock
source.
''',
},
            },
            {
                'name': 'PXI_TRIGGER_LINE_2RTSI_2',
                'value': '"PXI_Trig2"',
'documentation': {
'description': '''
Specifies that the PXI or RTSI line 2 is used as the Sample Clock
source.
''',
},
            },
            {
                'name': 'PXI_TRIGGER_LINE_3RTSI_3',
                'value': '"PXI_Trig3"',
'documentation': {
'description': '''
Specifies that the PXI or RTSI line 3 is used as the Sample Clock
source.
''',
},
            },
            {
                'name': 'PXI_TRIGGER_LINE_4RTSI_4',
                'value': '"PXI_Trig4"',
'documentation': {
'description': '''
Specifies that the PXI or RTSI line 4 is used as the Sample Clock
source.
''',
},
            },
            {
                'name': 'PXI_TRIGGER_LINE_5RTSI_5',
                'value': '"PXI_Trig5"',
'documentation': {
'description': '''
Specifies that the PXI or RTSI line 5 is used as the Sample Clock
source.
''',
},
            },
            {
                'name': 'PXI_TRIGGER_LINE_6RTSI_6',
                'value': '"PXI_Trig6"',
'documentation': {
'description': '''
Specifies that the PXI or RTSI line 6 is used as the Sample Clock
source.
''',
},
            },
            {
                'name': 'PXI_TRIGGER_LINE_7RTSI_7',
                'value': '"PXI_Trig7"',
'documentation': {
'description': '''
Specifies that the PXI or RTSI line 7 is used as the Sample Clock
source.
''',
},
            },
        ],
    },
    'SampleClockTimebaseSource': {
        'values': [
            {
                'name': 'CLOCK_IN',
                'value': '"ClkIn"',
'documentation': {
'description': '''
Specifies that the external signal on the CLK IN front panel connector
is used as the source.
''',
},
            },
            {
                'name': 'ONBOARD_CLOCK',
                'value': '"OnboardClock"',
'documentation': {
'description': 'Specifies that the onboard Sample Clock timebase is used as the source.',
},
            },
        ],
    },
    'ScriptTriggerDigitalEdgeEdge': {
        'values': [
            {
                'name': 'RISING_EDGE',
                'value': 101,
'documentation': {
'description': 'Occurs when the signal transitions from low level to high level.',
},
            },
            {
                'name': 'FALLING_EDGE',
                'value': 102,
'documentation': {
'description': 'Occurs when the signal transitions from high level to low level.',
},
            },
        ],
    },
    'ScriptTriggerDigitalLevelActiveLevel': {
        'values': [
            {
                'name': 'HIGH_LEVEL',
                'value': 101,
'documentation': {
'description': 'The high level is the active level.',
},
            },
            {
                'name': 'LOW_LEVEL',
                'value': 102,
'documentation': {
'description': 'The low level is the active level.',
},
            },
        ],
    },
    'ScriptTriggerType': {
        'values': [
            {
                'name': 'NONE',
                'value': 101,
'documentation': {
'description': 'No trigger is configured. Signal generation starts immediately.',
},
            },
            {
                'name': 'DIGITAL_EDGE',
                'value': 102,
'documentation': {
'description': 'Trigger is asserted when a digital edge is detected.',
},
            },
            {
                'name': 'DIGITAL_LEVEL',
                'value': 103,
'documentation': {
'description': 'Trigger is asserted when a digital level is detected.',
},
            },
            {
                'name': 'SOFTWARE_EDGE',
                'value': 104,
'documentation': {
'description': 'Trigger is asserted when a software edge is detected.',
},
            },
        ],
    },
    'StartTriggerDigitalEdgeEdge': {
        'values': [
            {
                'name': 'RISING_EDGE',
                'value': 101,
'documentation': {
'description': 'Occurs when the signal transitions from low level to high level.',
},
            },
            {
                'name': 'FALLING_EDGE',
                'value': 102,
'documentation': {
'description': 'Occurs when the signal transitions from high level to low level.',
},
            },
        ],
    },
    'StartTriggerType': {
        'values': [
            {
                'name': 'NONE',
                'value': 101,
'documentation': {
'description': 'No trigger is configured. Signal generation starts immediately.',
},
            },
            {
                'name': 'DIGITAL_EDGE',
                'value': 102,
'documentation': {
'description': 'Operation begins when a digital edge is detected.',
},
            },
            {
                'name': 'SOFTWARE_EDGE',
                'value': 104,
'documentation': {
'description': 'Operation begins when a software edge is detected.',
},
            },
            {
                'name': 'P2P_ENDPOINT_FULLNESS',
                'value': 106,
'documentation': {
'description': '''
Operation begins when the FIFO reaches the threshold specified in the
`P2P Endpoint Fullness Start Trigger
Level <pniFgen_P2PEndpointFullnessStartTriggerLevel.html>`__ property.
''',
},
            },
        ],
    },
    'StartedEventActiveLevel': {
        'values': [
            {
                'name': 'ACTIVE_HIGH',
                'value': 101,
'documentation': {
'description': 'When the operation has started, the Started Event level is high.',
},
            },
            {
                'name': 'ACTIVE_LOW',
                'value': 102,
'documentation': {
'description': 'When the operation has started, the Started Event level is high.',
},
            },
        ],
    },
    'StartedEventDelayUnits': {
        'values': [
            {
                'name': 'SAMPLE_CLOCK_PERIODS',
                'value': 101,
'documentation': {
'description': '''
The delay is specified in Sample Clock periods and then coerced up by
NI-FGEN to the nearest Sample Clock period.
''',
},
            },
            {
                'name': 'SECONDS',
                'value': 102,
'documentation': {
'description': '''
The delay is specified in seconds and then coerced up by NI-FGEN to the
nearest Sample Clock period.
''',
},
            },
        ],
    },
    'StartedEventOutputBehavior': {
        'values': [
            {
                'name': 'PULSE',
                'value': 101,
'documentation': {
'description': 'Triggers a pulse for a specified period of time.',
},
            },
            {
                'name': 'LEVEL',
                'value': 102,
'documentation': {
'description': '''
Shifts high or low while the event is active, depending on the active
state you specify.
''',
},
            },
        ],
    },
    'StartedEventPulsePolarity': {
        'values': [
            {
                'name': 'ACTIVE_HIGH',
                'value': 101,
'documentation': {
'description': 'When the operation has started, the Started Event level is high.',
},
            },
            {
                'name': 'ACTIVE_LOW',
                'value': 102,
'documentation': {
'description': 'When the operation has started, the Started Event level is low.',
},
            },
        ],
    },
    'StartedEventPulseWidthUnits': {
        'values': [
            {
                'name': 'SAMPLE_CLOCK_PERIODS',
                'value': 101,
'documentation': {
'description': 'Specifies the pulse width in Sample Clock periods.',
},
            },
            {
                'name': 'SECONDS',
                'value': 102,
'documentation': {
'description': 'Specifies the pulse width in seconds.',
},
            },
        ],
    },
    'SynchronizationSource': {
        'values': [
            {
                'name': 'NIFGEN_VAL_TTL0',
                'value': 111,
'documentation': {
'description': 'PXI TRIG0 or VXI TTL0',
},
            },
            {
                'name': 'NIFGEN_VAL_TTL1',
                'value': 112,
'documentation': {
'description': 'PXI TRIG1 or VXI TTL1',
},
            },
            {
                'name': 'NIFGEN_VAL_TTL2',
                'value': 113,
'documentation': {
'description': 'PXI TRIG2 or VXI TTL2',
},
            },
            {
                'name': 'NIFGEN_VAL_TTL3',
                'value': 114,
'documentation': {
'description': 'PXI TRIG3 or VXI TTL3',
},
            },
            {
                'name': 'NIFGEN_VAL_TTL4',
                'value': 115,
'documentation': {
'description': 'PXI TRIG4 or VXI TTL4',
},
            },
            {
                'name': 'NIFGEN_VAL_TTL5',
                'value': 116,
'documentation': {
'description': 'PXI TRIG5 or VXI TTL5',
},
            },
            {
                'name': 'NIFGEN_VAL_TTL6',
                'value': 117,
'documentation': {
'description': 'PXI TRIG6 or VXI TTL6',
},
            },
            {
                'name': 'NIFGEN_VAL_RTSI_0',
                'value': 141,
'documentation': {
'description': 'RTSI line 0',
},
            },
            {
                'name': 'NIFGEN_VAL_RTSI_1',
                'value': 142,
'documentation': {
'description': 'RTSI line 1',
},
            },
            {
                'name': 'NIFGEN_VAL_RTSI_2',
                'value': 143,
'documentation': {
'description': 'RTSI line 2',
},
            },
            {
                'name': 'NIFGEN_VAL_RTSI_3',
                'value': 144,
'documentation': {
'description': 'RTSI line 3',
},
            },
            {
                'name': 'NIFGEN_VAL_RTSI_4',
                'value': 145,
'documentation': {
'description': 'RTSI line 4',
},
            },
            {
                'name': 'NIFGEN_VAL_RTSI_5',
                'value': 146,
'documentation': {
'description': 'RTSI line 5',
},
            },
            {
                'name': 'NIFGEN_VAL_RTSI_6',
                'value': 147,
'documentation': {
'description': 'RTSI line 6',
},
            },
            {
                'name': 'NIFGEN_VAL_NONE',
                'value': 1000,
'documentation': {
'description': 'No synchronization source is used.',
},
            },
        ],
    },
    'TerminalConfiguration': {
        'values': [
            {
                'name': 'SINGLE_ENDED',
                'value': 300,
'documentation': {
'description': 'Specifies single-ended operation.',
},
            },
            {
                'name': 'DIFFERENTIAL',
                'value': 301,
'documentation': {
'description': 'Specifies differential operation.',
},
            },
        ],
    },
    'TriggerMode': {
        'values': [
            {
                'name': 'NIFGEN_VAL_SINGLE',
                'value': 1,
'documentation': {
'description': 'Specifies that the signal generator operates in Single Trigger mode.',
},
            },
            {
                'name': 'NIFGEN_VAL_CONTINUOUS',
                'value': 2,
'documentation': {
'description': 'Specifies that the signal generator operates in Continuous Trigger mode.',
},
            },
            {
                'name': 'NIFGEN_VAL_STEPPED',
                'value': 3,
'documentation': {
'description': 'Specifies that the signal generator operates in Stepped Trigger mode.',
},
            },
            {
                'name': 'NIFGEN_VAL_BURST',
                'value': 4,
'documentation': {
'description': 'Specifies that the signal generator operates in Burst Trigger mode.',
},
            },
        ],
    },
    'TriggerSource': {
        'values': [
            {
                'name': 'NIFGEN_VAL_IMMEDIATE',
                'value': 0,
'documentation': {
'description': 'The signal generator does not wait for a trigger of any kind.',
},
            },
            {
                'name': 'NIFGEN_VAL_EXTERNAL',
                'value': 1,
'documentation': {
'description': 'The signal generator waits for a trigger on the external trigger input.',
},
            },
            {
                'name': 'NIFGEN_VAL_SOFTWARE_TRIG',
                'value': 2,
'documentation': {
'description': '''
Specifies that the signal generator waits until you call the `niFgen
Send Software Trigger
VI <javascript:LaunchMergedHelp('SigGenHelp.chm',%20'nifgenlv.chm',%20'niFgen_Send_Software_Edge_Trigger.html')>`__.
''',
},
            },
            {
                'name': 'NIFGEN_VAL_TTL0',
                'value': 111,
'documentation': {
'description': '''
Specifies that the PXI\_TRIG0 or VXI\_TTL0 line is used as the trigger
source.
''',
},
            },
            {
                'name': 'NIFGEN_VAL_TTL1',
                'value': 112,
'documentation': {
'description': '''
Specifies that the PXI\_TRIG1 or VXI\_TTL1 line is used as the trigger
source.
''',
},
            },
            {
                'name': 'NIFGEN_VAL_TTL2',
                'value': 113,
'documentation': {
'description': '''
Specifies that the PXI\_TRIG2 or VXI\_TTL2 line is used as the trigger
source.
''',
},
            },
            {
                'name': 'NIFGEN_VAL_TTL3',
                'value': 114,
'documentation': {
'description': '''
Specifies that the PXI\_TRIG3 or VXI\_TTL3 line is used as the trigger
source.
''',
},
            },
            {
                'name': 'NIFGEN_VAL_TTL4',
                'value': 115,
'documentation': {
'description': '''
Specifies that the PXI\_TRIG4 or VXI\_TTL4 line is used as the trigger
source.
''',
},
            },
            {
                'name': 'NIFGEN_VAL_TTL5',
                'value': 116,
'documentation': {
'description': '''
Specifies that the PXI\_TRIG5 or VXI\_TTL5 line is used as the trigger
source.
''',
},
            },
            {
                'name': 'NIFGEN_VAL_TTL6',
                'value': 117,
'documentation': {
'description': '''
Specifies that the PXI\_TRIG6 or VXI\_TTL6 line is used as the trigger
source.
''',
},
            },
            {
                'name': 'NIFGEN_VAL_PXI_STAR',
                'value': 131,
'documentation': {
'description': 'Specifies that the PXI star trigger line is used as the trigger source.',
},
            },
            {
                'name': 'NIFGEN_VAL_RTSI_0',
                'value': 141,
'documentation': {
'description': 'Specifies that RTSI line 0 is used as the trigger source.',
},
            },
            {
                'name': 'NIFGEN_VAL_RTSI_1',
                'value': 142,
'documentation': {
'description': 'Specifies that RTSI line 1 is used as the trigger source.',
},
            },
            {
                'name': 'NIFGEN_VAL_RTSI_2',
                'value': 143,
'documentation': {
'description': 'Specifies that RTSI line 2 is used as the trigger source.',
},
            },
            {
                'name': 'NIFGEN_VAL_RTSI_3',
                'value': 144,
'documentation': {
'description': 'Specifies that RTSI line 3 is used as the trigger source.',
},
            },
            {
                'name': 'NIFGEN_VAL_RTSI_4',
                'value': 145,
'documentation': {
'description': 'Specifies that RTSI line 4 is used as the trigger source.',
},
            },
            {
                'name': 'NIFGEN_VAL_RTSI_5',
                'value': 146,
'documentation': {
'description': 'Specifies that RTSI line 5 is used as the trigger source.',
},
            },
            {
                'name': 'NIFGEN_VAL_RTSI_6',
                'value': 147,
'documentation': {
'description': 'Specifies that RTSI line 6 is used as the trigger source.',
},
            },
            {
                'name': 'NIFGEN_VAL_RTSI_7',
                'value': 1010,
'documentation': {
'description': 'Specifies that RTSI line 7 is used as the trigger source.',
},
            },
            {
                'name': 'NIFGEN_VAL_PFI_0',
                'value': 1011,
'documentation': {
'description': 'Specifies that PFI 0 is used as the trigger source.',
},
            },
            {
                'name': 'NIFGEN_VAL_PFI_1',
                'value': 1012,
'documentation': {
'description': 'Specifies that PFI 1 is used as the trigger source.',
},
            },
            {
                'name': 'NIFGEN_VAL_PFI_2',
                'value': 1013,
'documentation': {
'description': 'Specifies that PFI 2 is used as the trigger source.',
},
            },
            {
                'name': 'NIFGEN_VAL_PFI_3',
                'value': 1014,
'documentation': {
'description': 'Specifies that PFI 3 is used as the trigger source.',
},
            },
            {
                'name': 'NIFGEN_VAL_OTHER_TERMINAL',
                'value': 1018,
'documentation': {
'description': 'Specifies that another terminal is used.',
},
            },
        ],
    },
    'UpdateClockSource': {
        'values': [
            {
                'name': 'NIFGEN_VAL_INTERNAL',
                'value': 0,
'documentation': {
'description': 'Internal update clock',
},
            },
            {
                'name': 'NIFGEN_VAL_EXTERNAL',
                'value': 1,
'documentation': {
'description': 'External update clock given on the IO connector',
},
            },
            {
                'name': 'NIFGEN_VAL_PXI_STAR',
                'value': 131,
'documentation': {
'description': '''
(PXI only) PXI star trigger line. This choice is valid only in PXI
chassis slots 3 through 15.
''',
},
            },
            {
                'name': 'NIFGEN_VAL_RTSI_0',
                'value': 141,
'documentation': {
'description': 'RTSI line 0',
},
            },
            {
                'name': 'NIFGEN_VAL_RTSI_1',
                'value': 142,
'documentation': {
'description': 'RTSI line 1',
},
            },
            {
                'name': 'NIFGEN_VAL_RTSI_2',
                'value': 143,
'documentation': {
'description': 'RTSI line 2',
},
            },
            {
                'name': 'NIFGEN_VAL_RTSI_3',
                'value': 144,
'documentation': {
'description': 'RTSI line 3',
},
            },
            {
                'name': 'NIFGEN_VAL_RTSI_4',
                'value': 145,
'documentation': {
'description': 'RTSI line 4',
},
            },
            {
                'name': 'NIFGEN_VAL_RTSI_5',
                'value': 146,
'documentation': {
'description': 'RTSI line 5',
},
            },
            {
                'name': 'NIFGEN_VAL_RTSI_6',
                'value': 147,
'documentation': {
'description': 'RTSI line 6',
},
            },
            {
                'name': 'NIFGEN_VAL_RTSI_7',
                'value': 1010,
'documentation': {
'description': '(PCI only) RTSI line 7',
},
            },
            {
                'name': 'NIFGEN_VAL_OTHER_TERMINAL',
                'value': 1018,
'documentation': {
'description': 'Uses another device terminal.',
},
            },
            {
                'name': 'NIFGEN_VAL_CLK_IN',
                'value': 1202,
'documentation': {
'description': 'Coaxial CLK IN connector on the board front panel',
},
            },
            {
                'name': 'NIFGEN_VAL_DDC_CLK_IN',
                'value': 1203,
'documentation': {
'description': 'DDC CLK IN line of the Digital Data & Control connector',
},
            },
        ],
    },
    'VideoWaveformType': {
        'values': [
            {
                'name': 'NIFGEN_VAL_PAL_B',
                'value': 0,
'documentation': {
'description': 'PAL B Video Type',
},
            },
            {
                'name': 'NIFGEN_VAL_PAL_D',
                'value': 1,
'documentation': {
'description': 'PAL D Video Type',
},
            },
            {
                'name': 'NIFGEN_VAL_PAL_G',
                'value': 2,
'documentation': {
'description': 'PAL G Video Type',
},
            },
            {
                'name': 'NIFGEN_VAL_PAL_H',
                'value': 3,
'documentation': {
'description': 'PAL H Video Type',
},
            },
            {
                'name': 'NIFGEN_VAL_PAL_I',
                'value': 4,
'documentation': {
'description': 'PAL I Video Type',
},
            },
            {
                'name': 'NIFGEN_VAL_PAL_M',
                'value': 5,
'documentation': {
'description': 'PAL M Video Type',
},
            },
            {
                'name': 'NIFGEN_VAL_PAL_N',
                'value': 6,
'documentation': {
'description': 'PAL N Video Type',
},
            },
            {
                'name': 'NIFGEN_VAL_NTSC_M',
                'value': 7,
'documentation': {
'description': 'NTSC M Video Type',
},
            },
        ],
    },
    'WaitBehavior': {
        'values': [
            {
                'name': 'HOLD_LAST_VALUE',
                'value': 400,
'documentation': {
'description': '''
While in a wait state, the output signal remains at the last voltage
generated prior to entering the wait state.
''',
},
            },
            {
                'name': 'JUMP_TO_VALUE',
                'value': 401,
'documentation': {
'description': '''
While in a wait state, the output signal remains at the value configured
in the `Wait Value <pniFgen_WaitValue.html>`__ property.
''',
},
            },
        ],
    },
    'Waveform': {
        'values': [
            {
                'name': 'SINE',
                'value': 1,
'documentation': {
'description': 'Specifies that the signal generator produces a sinusoid waveform.',
},
            },
            {
                'name': 'SQUARE',
                'value': 2,
'documentation': {
'description': 'Specifies that the signal generator produces a square waveform.',
},
            },
            {
                'name': 'TRIANGLE',
                'value': 3,
'documentation': {
'description': 'Specifies that the signal generator produces a triangle waveform.',
},
            },
            {
                'name': 'RAMP_UP',
                'value': 4,
'documentation': {
'description': 'Specifies that the signal generator produces a positive ramp waveform.',
},
            },
            {
                'name': 'RAMP_DOWN',
                'value': 5,
'documentation': {
'description': 'Specifies that the signal generator produces a negative ramp waveform.',
},
            },
            {
                'name': 'DC',
                'value': 6,
'documentation': {
'description': 'Specifies that the signal generator produces a constant voltage.',
},
            },
            {
                'name': 'NOISE',
                'value': 101,
'documentation': {
'description': 'Specifies that the signal generator produces white noise.',
},
            },
            {
                'name': 'USER',
                'value': 102,
'documentation': {
'description': '''
Specifies that the signal generator produces a user-defined waveform,
defined by the `niFgen Define User Standard
Waveform <javascript:LaunchMergedHelp('SigGenHelp.chm',%20'nifgenlv.chm',%20'niFgen_Define_User_Standard_Waveform.html')>`__
VI.
''',
},
            },
        ],
    },
}
